{"ast":null,"code":"import { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport { productActions, setModalValues, toggleModal, barcodeActions, setBarcodeType, removeBarcode, setMeasurementValue, setPointsValue, SetUploadImages, deleteUploadImages, setMainImage, setSearchProductValue, selectClassifiersGroup, selectGroupsNode, createClassifiers, classifiersToggleModal } from \"../../../redux/products/actions\";\nimport { supplierActions } from \"../../../redux/suppliers/actions\";\nimport { groupActions, handleOpen, selectGroup, subGroupActions, getSubGroups } from \"../../../redux/group/actions\";\nimport { uploadImages } from \"../../../redux/todo/actions\";\nimport ProductPage from './productPage';\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return bindActionCreators({\n    productActions: productActions,\n    toggleModal: toggleModal,\n    barcodeActions: barcodeActions,\n    setModalValues: setModalValues,\n    supplierActions: supplierActions,\n    groupActions: groupActions,\n    handleOpen: handleOpen,\n    selectGroup: selectGroup,\n    uploadImages: uploadImages,\n    subGroupActions: subGroupActions,\n    getSubGroups: getSubGroups,\n    setBarcodeType: setBarcodeType,\n    removeBarcode: removeBarcode,\n    setMeasurementValue: setMeasurementValue,\n    setPointsValue: setPointsValue,\n    SetUploadImages: SetUploadImages,\n    deleteUploadImages: deleteUploadImages,\n    setMainImage: setMainImage,\n    setSearchProductValue: setSearchProductValue,\n    selectClassifiersGroup: selectClassifiersGroup,\n    selectGroupsNode: selectGroupsNode,\n    createClassifiers: createClassifiers,\n    classifiersToggleModal: classifiersToggleModal\n  }, dispatch);\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    modal: state.products.modal,\n    products: state.products.products,\n    product: state.products.product,\n    group: state.products.group,\n    advancedSearchConfig: state.products.advancedSearchConfig,\n    classifiersModal: state.products.classifiersModal,\n    searchProduct: state.products.searchProduct,\n    searchProductResult: state.products.searchProductResult,\n    searchErrorName: state.products.searchErrorName,\n    types: state.products.types,\n    measurementData: state.products.measurementData,\n    barcodeTypes: state.products.barcodeTypes,\n    suppliers: state.suppliers.suppliers,\n    groups: state.group.groups,\n    subGroups: state.group.subGroups,\n    selectedGroups: state.group.selected,\n    productGroups: state.group.productGroups,\n    perm: state.permission.data.products,\n    lang: {\n      active: state.languages.active\n    },\n    uploadedImages: state.todo.images\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ProductPage);","map":{"version":3,"sources":["C:/Users/User/Desktop/barcode/src/containers/pages/products/productContainer.js"],"names":["connect","bindActionCreators","productActions","setModalValues","toggleModal","barcodeActions","setBarcodeType","removeBarcode","setMeasurementValue","setPointsValue","SetUploadImages","deleteUploadImages","setMainImage","setSearchProductValue","selectClassifiersGroup","selectGroupsNode","createClassifiers","classifiersToggleModal","supplierActions","groupActions","handleOpen","selectGroup","subGroupActions","getSubGroups","uploadImages","ProductPage","mapDispatchToProps","dispatch","mapStateToProps","state","modal","products","product","group","advancedSearchConfig","classifiersModal","searchProduct","searchProductResult","searchErrorName","types","measurementData","barcodeTypes","suppliers","groups","subGroups","selectedGroups","selected","productGroups","perm","permission","data","lang","active","languages","uploadedImages","todo","images"],"mappings":"AAAA,SAAQA,OAAR,QAAsB,aAAtB;AACA,SAAQC,kBAAR,QAAiC,OAAjC;AACA,SACIC,cADJ,EAEIC,cAFJ,EAGIC,WAHJ,EAIIC,cAJJ,EAKIC,cALJ,EAMIC,aANJ,EAOIC,mBAPJ,EAQIC,cARJ,EASIC,eATJ,EAUIC,kBAVJ,EAWIC,YAXJ,EAYIC,qBAZJ,EAaIC,sBAbJ,EAcIC,gBAdJ,EAeIC,iBAfJ,EAgBIC,sBAhBJ,QAiBO,iCAjBP;AAkBA,SACIC,eADJ,QAEO,kCAFP;AAGA,SACIC,YADJ,EAEIC,UAFJ,EAGIC,WAHJ,EAIIC,eAJJ,EAKIC,YALJ,QAMO,8BANP;AAOA,SACIC,YADJ,QAEO,6BAFP;AAGA,OAAOC,WAAP,MAAwB,eAAxB;;AAGA,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,CAAAC,QAAQ,EAAI;AACnC,SAAO1B,kBAAkB,CACrB;AACIC,IAAAA,cAAc,EAAdA,cADJ;AAEIE,IAAAA,WAAW,EAAXA,WAFJ;AAGIC,IAAAA,cAAc,EAAdA,cAHJ;AAIIF,IAAAA,cAAc,EAAdA,cAJJ;AAKIe,IAAAA,eAAe,EAAfA,eALJ;AAMIC,IAAAA,YAAY,EAAZA,YANJ;AAOIC,IAAAA,UAAU,EAAVA,UAPJ;AAQIC,IAAAA,WAAW,EAAXA,WARJ;AASIG,IAAAA,YAAY,EAAZA,YATJ;AAUIF,IAAAA,eAAe,EAAfA,eAVJ;AAWIC,IAAAA,YAAY,EAAZA,YAXJ;AAYIjB,IAAAA,cAAc,EAAdA,cAZJ;AAaIC,IAAAA,aAAa,EAAbA,aAbJ;AAcIC,IAAAA,mBAAmB,EAAnBA,mBAdJ;AAeIC,IAAAA,cAAc,EAAdA,cAfJ;AAgBIC,IAAAA,eAAe,EAAfA,eAhBJ;AAiBIC,IAAAA,kBAAkB,EAAlBA,kBAjBJ;AAkBIC,IAAAA,YAAY,EAAZA,YAlBJ;AAmBIC,IAAAA,qBAAqB,EAArBA,qBAnBJ;AAoBIC,IAAAA,sBAAsB,EAAtBA,sBApBJ;AAqBIC,IAAAA,gBAAgB,EAAhBA,gBArBJ;AAsBIC,IAAAA,iBAAiB,EAAjBA,iBAtBJ;AAuBIC,IAAAA,sBAAsB,EAAtBA;AAvBJ,GADqB,EA0BrBU,QA1BqB,CAAzB;AA4BH,CA7BD;;AA+BA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAAAC,KAAK,EAAI;AAC7B,SAAO;AACHC,IAAAA,KAAK,EAAED,KAAK,CAACE,QAAN,CAAeD,KADnB;AAEHC,IAAAA,QAAQ,EAAEF,KAAK,CAACE,QAAN,CAAeA,QAFtB;AAGHC,IAAAA,OAAO,EAAEH,KAAK,CAACE,QAAN,CAAeC,OAHrB;AAIHC,IAAAA,KAAK,EAAEJ,KAAK,CAACE,QAAN,CAAeE,KAJnB;AAKHC,IAAAA,oBAAoB,EAAEL,KAAK,CAACE,QAAN,CAAeG,oBALlC;AAMHC,IAAAA,gBAAgB,EAAEN,KAAK,CAACE,QAAN,CAAeI,gBAN9B;AAOHC,IAAAA,aAAa,EAAEP,KAAK,CAACE,QAAN,CAAeK,aAP3B;AAQHC,IAAAA,mBAAmB,EAAER,KAAK,CAACE,QAAN,CAAeM,mBARjC;AASHC,IAAAA,eAAe,EAAET,KAAK,CAACE,QAAN,CAAeO,eAT7B;AAUHC,IAAAA,KAAK,EAAEV,KAAK,CAACE,QAAN,CAAeQ,KAVnB;AAWHC,IAAAA,eAAe,EAAEX,KAAK,CAACE,QAAN,CAAeS,eAX7B;AAYHC,IAAAA,YAAY,EAAEZ,KAAK,CAACE,QAAN,CAAeU,YAZ1B;AAaHC,IAAAA,SAAS,EAAEb,KAAK,CAACa,SAAN,CAAgBA,SAbxB;AAcHC,IAAAA,MAAM,EAAEd,KAAK,CAACI,KAAN,CAAYU,MAdjB;AAeHC,IAAAA,SAAS,EAAEf,KAAK,CAACI,KAAN,CAAYW,SAfpB;AAgBHC,IAAAA,cAAc,EAAEhB,KAAK,CAACI,KAAN,CAAYa,QAhBzB;AAiBHC,IAAAA,aAAa,EAAElB,KAAK,CAACI,KAAN,CAAYc,aAjBxB;AAkBHC,IAAAA,IAAI,EAAEnB,KAAK,CAACoB,UAAN,CAAiBC,IAAjB,CAAsBnB,QAlBzB;AAmBHoB,IAAAA,IAAI,EAAE;AACFC,MAAAA,MAAM,EAACvB,KAAK,CAACwB,SAAN,CAAgBD;AADrB,KAnBH;AAsBHE,IAAAA,cAAc,EAAEzB,KAAK,CAAC0B,IAAN,CAAWC;AAtBxB,GAAP;AAyBH,CA1BD;;AA4BA,eAAexD,OAAO,CAAC4B,eAAD,EAAkBF,kBAAlB,CAAP,CAA6CD,WAA7C,CAAf","sourcesContent":["import {connect} from \"react-redux\";\r\nimport {bindActionCreators} from \"redux\";\r\nimport {\r\n    productActions,\r\n    setModalValues,\r\n    toggleModal,\r\n    barcodeActions,\r\n    setBarcodeType,\r\n    removeBarcode,\r\n    setMeasurementValue,\r\n    setPointsValue,\r\n    SetUploadImages,\r\n    deleteUploadImages,\r\n    setMainImage,\r\n    setSearchProductValue,\r\n    selectClassifiersGroup,\r\n    selectGroupsNode,\r\n    createClassifiers,\r\n    classifiersToggleModal\r\n} from \"../../../redux/products/actions\";\r\nimport {\r\n    supplierActions\r\n} from \"../../../redux/suppliers/actions\";\r\nimport {\r\n    groupActions,\r\n    handleOpen,\r\n    selectGroup,\r\n    subGroupActions,\r\n    getSubGroups,\r\n} from \"../../../redux/group/actions\";\r\nimport {\r\n    uploadImages\r\n} from \"../../../redux/todo/actions\";\r\nimport ProductPage from './productPage';\r\n\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return bindActionCreators(\r\n        {\r\n            productActions,\r\n            toggleModal,\r\n            barcodeActions,\r\n            setModalValues,\r\n            supplierActions,\r\n            groupActions,\r\n            handleOpen,\r\n            selectGroup,\r\n            uploadImages,\r\n            subGroupActions,\r\n            getSubGroups,\r\n            setBarcodeType,\r\n            removeBarcode,\r\n            setMeasurementValue,\r\n            setPointsValue,\r\n            SetUploadImages,\r\n            deleteUploadImages,\r\n            setMainImage,\r\n            setSearchProductValue,\r\n            selectClassifiersGroup,\r\n            selectGroupsNode,\r\n            createClassifiers,\r\n            classifiersToggleModal\r\n        },\r\n        dispatch\r\n    );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        modal: state.products.modal,\r\n        products: state.products.products,\r\n        product: state.products.product,\r\n        group: state.products.group,\r\n        advancedSearchConfig: state.products.advancedSearchConfig,\r\n        classifiersModal: state.products.classifiersModal,\r\n        searchProduct: state.products.searchProduct,\r\n        searchProductResult: state.products.searchProductResult,\r\n        searchErrorName: state.products.searchErrorName,\r\n        types: state.products.types,\r\n        measurementData: state.products.measurementData,\r\n        barcodeTypes: state.products.barcodeTypes,\r\n        suppliers: state.suppliers.suppliers,\r\n        groups: state.group.groups,\r\n        subGroups: state.group.subGroups,\r\n        selectedGroups: state.group.selected,\r\n        productGroups: state.group.productGroups,\r\n        perm: state.permission.data.products,\r\n        lang: {\r\n            active:state.languages.active\r\n        },\r\n        uploadedImages: state.todo.images,\r\n\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ProductPage);\r\n"]},"metadata":{},"sourceType":"module"}