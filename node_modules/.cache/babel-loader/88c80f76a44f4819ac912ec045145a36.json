{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\barcode\\\\src\\\\containers\\\\localize\\\\localizeTab.js\";\nimport React from \"react\";\nimport { Badge } from \"reactstrap\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport { setModalLanguage } from \"../../redux/lang/actions\";\n\nfunction LocalizeTab(props) {\n  return React.createElement(\"div\", {\n    className: \"badge-toolbar\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, props.languages.map(function (lang) {\n    return React.createElement(Badge, {\n      key: lang.id,\n      className: \"cursor-pointer \".concat(props.modalLang === lang.code ? \"bg-primary text-white\" : \"bg-white font-weight-normal text-secondary\"),\n      onClick: function onClick() {\n        return props.setModalLanguage(lang.code);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11\n      },\n      __self: this\n    }, lang.name, \" Name\");\n  }));\n}\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return bindActionCreators({\n    setModalLanguage: setModalLanguage\n  }, dispatch);\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    languages: state.languages.languages,\n    modalLang: state.languages.modalLang\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LocalizeTab);","map":{"version":3,"sources":["C:/Users/User/Desktop/barcode/src/containers/localize/localizeTab.js"],"names":["React","Badge","connect","bindActionCreators","setModalLanguage","LocalizeTab","props","languages","map","lang","id","modalLang","code","name","mapDispatchToProps","dispatch","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,MAAmB,OAAnB;AACA,SAAQC,KAAR,QAAoB,YAApB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,kBAAR,QAAiC,OAAjC;AACA,SAAQC,gBAAR,QAA+B,0BAA/B;;AAEA,SAASC,WAAT,CAAqBC,KAArB,EAA2B;AACnB,SACQ;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKA,KAAK,CAACC,SAAN,CAAgBC,GAAhB,CAAoB,UAAUC,IAAV,EAAgB;AACjC,WAAO,oBAAC,KAAD;AACH,MAAA,GAAG,EAAIA,IAAI,CAACC,EADT;AAEH,MAAA,SAAS,2BAAoBJ,KAAK,CAACK,SAAN,KAAoBF,IAAI,CAACG,IAAzB,yEAApB,CAFN;AAGH,MAAA,OAAO,EAAI;AAAA,eAAIN,KAAK,CAACF,gBAAN,CAAuBK,IAAI,CAACG,IAA5B,CAAJ;AAAA,OAHR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAKFH,IAAI,CAACI,IALH,UAAP;AAOH,GARA,CADL,CADR;AAaP;;AACD,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,CAAAC,QAAQ,EAAI;AACnC,SAAOZ,kBAAkB,CACrB;AACIC,IAAAA,gBAAgB,EAAhBA;AADJ,GADqB,EAIrBW,QAJqB,CAAzB;AAMH,CAPD;;AASA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAAAC,KAAK,EAAI;AAC7B,SAAO;AACHV,IAAAA,SAAS,EAAEU,KAAK,CAACV,SAAN,CAAgBA,SADxB;AAEHI,IAAAA,SAAS,EAAEM,KAAK,CAACV,SAAN,CAAgBI;AAFxB,GAAP;AAKH,CAND;;AAQA,eAAeT,OAAO,CAACc,eAAD,EAAiBF,kBAAjB,CAAP,CAA4CT,WAA5C,CAAf","sourcesContent":["import React  from \"react\";\r\nimport {Badge} from \"reactstrap\";\r\nimport {connect} from \"react-redux\";\r\nimport {bindActionCreators} from \"redux\";\r\nimport {setModalLanguage} from \"../../redux/lang/actions\";\r\n\r\nfunction LocalizeTab(props){\r\n        return (\r\n                <div className=\"badge-toolbar\">\r\n                    {props.languages.map(function (lang) {\r\n                        return <Badge\r\n                            key = {lang.id}\r\n                            className={`cursor-pointer ${props.modalLang === lang.code? `bg-primary text-white`:`bg-white font-weight-normal text-secondary`}`}\r\n                            onClick = {()=>props.setModalLanguage(lang.code)}\r\n                        >\r\n                            {lang.name} Name\r\n                        </Badge>\r\n                    })}\r\n                </div>\r\n        );\r\n}\r\nconst mapDispatchToProps = dispatch => {\r\n    return bindActionCreators(\r\n        {\r\n            setModalLanguage\r\n        },\r\n        dispatch\r\n    );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        languages: state.languages.languages,\r\n        modalLang: state.languages.modalLang\r\n\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(LocalizeTab);"]},"metadata":{},"sourceType":"module"}