{"ast":null,"code":"import _toConsumableArray from \"C:\\\\Users\\\\User\\\\Desktop\\\\barcode\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"C:\\\\Users\\\\User\\\\Desktop\\\\barcode\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport { GET_POSITIONS_REQUEST, GET_POSITIONS_FAIL, GET_POSITIONS_SUCCESS, GET_POSITION_REQUEST, GET_POSITION_FAIL, GET_POSITION_SUCCESS, ADD_POSITION_REQUEST, ADD_POSITION_FAIL, ADD_POSITION_SUCCESS, EDIT_POSITION_REQUEST, EDIT_POSITION_FAIL, EDIT_POSITION_SUCCESS, DELETE_POSITION_REQUEST, DELETE_POSITION_FAIL, DELETE_POSITION_SUCCESS, ADD_MODAL, DELETE_MODAL, EDIT_MODAL, SET_MODAL_VALUES, HANDLE } from \"./actionTypes\";\nvar INIT_STATE = {\n  positions: [],\n  position: {\n    name: \"\",\n    perm: {}\n  },\n  modal: {},\n  loading: false,\n  success: false,\n  fail: false,\n  errors: {}\n};\nexport default (function () {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : INIT_STATE;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case GET_POSITIONS_REQUEST:\n      return _objectSpread({}, state, {\n        loading: true,\n        success: false,\n        fail: false,\n        errors: {}\n      });\n\n    case GET_POSITIONS_FAIL:\n      // fakeObj{\n      var data1 = [{\n        id: 1,\n        name: \"admin\"\n      }, {\n        id: 2,\n        name: \"user\"\n      }];\n      return _objectSpread({}, state, {\n        loading: false,\n        success: true,\n        fail: false,\n        positions: data1,\n        errors: {}\n      }); //}\n\n      return _objectSpread({}, state, {\n        loading: false,\n        success: false,\n        fail: true\n      });\n\n    case GET_POSITIONS_SUCCESS:\n      return _objectSpread({}, state, {\n        loading: false,\n        success: true,\n        fail: false,\n        positions: JSON.parse(action.result.data),\n        errors: {}\n      });\n\n    case GET_POSITION_REQUEST:\n      return _objectSpread({}, state, {\n        loading: true,\n        success: false,\n        fail: false,\n        errors: {}\n      });\n\n    case GET_POSITION_FAIL:\n      return _objectSpread({}, state, {\n        loading: false,\n        success: false,\n        fail: true\n      });\n\n    case GET_POSITION_SUCCESS:\n      return _objectSpread({}, state, {\n        loading: false,\n        success: true,\n        fail: false,\n        position: JSON.parse(action.result.data)[0],\n        errors: {}\n      });\n\n    case ADD_POSITION_REQUEST:\n      return _objectSpread({}, state, {\n        loading: true,\n        success: false,\n        fail: false\n      });\n\n    case ADD_POSITION_FAIL:\n      return _objectSpread({}, state, {\n        loading: false,\n        success: false,\n        fail: true\n      });\n\n    case ADD_POSITION_SUCCESS:\n      return _objectSpread({}, state, {\n        loading: false,\n        success: true,\n        fail: false,\n        modal: false,\n        positons: [].concat(_toConsumableArray(state.positions), [JSON.parse(action.result.data)[0]])\n      });\n\n    case EDIT_POSITION_REQUEST:\n      return _objectSpread({}, state, {\n        loading: true,\n        success: false,\n        fail: false\n      });\n\n    case EDIT_POSITION_FAIL:\n      return _objectSpread({}, state, {\n        loading: false,\n        success: false,\n        fail: true\n      });\n\n    case EDIT_POSITION_SUCCESS:\n      return _objectSpread({}, state, {\n        loading: false,\n        success: true,\n        fail: false,\n        modal: false,\n        position: {},\n        positions: JSON.parse(action.result.data)\n      });\n\n    case DELETE_POSITION_REQUEST:\n      return _objectSpread({}, state, {\n        loading: true,\n        success: false,\n        fail: false\n      });\n\n    case DELETE_POSITION_FAIL:\n      return _objectSpread({}, state, {\n        loading: false,\n        success: false,\n        fail: true\n      });\n\n    case DELETE_POSITION_SUCCESS:\n      return _objectSpread({}, state, {\n        loading: false,\n        success: true,\n        fail: false,\n        modal: false,\n        position: {},\n        positions: JSON.parse(action.result.data)\n      });\n\n    case ADD_MODAL:\n      return _objectSpread({}, state, {\n        modal: {\n          add: action.modal,\n          edit: false,\n          delete: false\n        } // user: {}\n\n      });\n\n    case EDIT_MODAL:\n      return _objectSpread({}, state, {\n        modal: {\n          add: false,\n          edit: action.modal,\n          delete: false\n        }\n      });\n\n    case DELETE_MODAL:\n      return _objectSpread({}, state, {\n        modal: {\n          add: false,\n          edit: false,\n          delete: action.modal\n        } // user: {}\n\n      });\n\n    case SET_MODAL_VALUES:\n      state.position[action.key] = action.value;\n      return _objectSpread({}, state);\n\n    case HANDLE:\n      var perm = state.position.perm;\n      console.log(action);\n\n      if (action.parentId) {\n        if (perm[action.parentId]) {\n          var index = perm[action.parentId].indexOf(action.id);\n\n          if (index !== -1) {\n            perm[action.parentId].splice(index, 1);\n\n            if (perm[action.parentId].length === 0) {\n              delete perm[action.parentId];\n            }\n          } else {\n            perm[action.parentId].push(action.id);\n          }\n        } else {\n          perm[action.parentId] = [action.id];\n        }\n      } else {\n        if (perm[action.id]) {\n          delete perm[action.id];\n        } else {\n          perm[action.id] = [];\n        }\n      }\n\n      return _objectSpread({}, state, {\n        position: {\n          name: state.position.name,\n          perm: perm\n        }\n      });\n\n    default:\n      return _objectSpread({}, state);\n  }\n});","map":{"version":3,"sources":["C:/Users/User/Desktop/barcode/src/redux/positions/reducer.js"],"names":["GET_POSITIONS_REQUEST","GET_POSITIONS_FAIL","GET_POSITIONS_SUCCESS","GET_POSITION_REQUEST","GET_POSITION_FAIL","GET_POSITION_SUCCESS","ADD_POSITION_REQUEST","ADD_POSITION_FAIL","ADD_POSITION_SUCCESS","EDIT_POSITION_REQUEST","EDIT_POSITION_FAIL","EDIT_POSITION_SUCCESS","DELETE_POSITION_REQUEST","DELETE_POSITION_FAIL","DELETE_POSITION_SUCCESS","ADD_MODAL","DELETE_MODAL","EDIT_MODAL","SET_MODAL_VALUES","HANDLE","INIT_STATE","positions","position","name","perm","modal","loading","success","fail","errors","state","action","type","data1","id","JSON","parse","result","data","positons","add","edit","delete","key","value","console","log","parentId","index","indexOf","splice","length","push"],"mappings":"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","sourcesContent":["import {\r\n    GET_POSITIONS_REQUEST,GET_POSITIONS_FAIL,GET_POSITIONS_SUCCESS,\r\n    GET_POSITION_REQUEST,GET_POSITION_FAIL,GET_POSITION_SUCCESS,\r\n    ADD_POSITION_REQUEST,ADD_POSITION_FAIL,ADD_POSITION_SUCCESS,\r\n    EDIT_POSITION_REQUEST,EDIT_POSITION_FAIL,EDIT_POSITION_SUCCESS,\r\n    DELETE_POSITION_REQUEST,DELETE_POSITION_FAIL,DELETE_POSITION_SUCCESS,\r\n    ADD_MODAL, DELETE_MODAL, EDIT_MODAL, SET_MODAL_VALUES,\r\n    HANDLE\r\n} from \"./actionTypes\";\r\n\r\nconst INIT_STATE = {\r\n    positions: [],\r\n    position: {\r\n        name:\"\",\r\n        perm:{}\r\n    },\r\n    modal: {},\r\n    loading: false,\r\n    success: false,\r\n    fail: false,\r\n    errors: {}\r\n};\r\n\r\nexport default (state = INIT_STATE, action) => {\r\n    switch (action.type) {\r\n        case GET_POSITIONS_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n                success: false,\r\n                fail: false,\r\n                errors: {},\r\n            };\r\n        case GET_POSITIONS_FAIL:\r\n            // fakeObj{\r\n            let data1 = [\r\n               {id:1,name:\"admin\"}, {id:2,name:\"user\"},\r\n            ]\r\n\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: true,\r\n                fail: false,\r\n                positions: data1,\r\n                errors: {},\r\n            };\r\n            //}\r\n\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: false,\r\n                fail: true,\r\n            };\r\n        case GET_POSITIONS_SUCCESS:\r\n            \r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: true,\r\n                fail: false,\r\n                positions: JSON.parse(action.result.data),\r\n                errors: {},\r\n            };\r\n        case GET_POSITION_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n                success: false,\r\n                fail: false,\r\n                errors: {},\r\n            };\r\n        case GET_POSITION_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: false,\r\n                fail: true,\r\n            };\r\n        case GET_POSITION_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: true,\r\n                fail: false,\r\n                position: JSON.parse(action.result.data)[0],\r\n                errors: {},\r\n            };\r\n        case ADD_POSITION_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n                success: false,\r\n                fail: false,\r\n            }\r\n        case ADD_POSITION_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: false,\r\n                fail: true,\r\n\r\n            };\r\n        case ADD_POSITION_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: true,\r\n                fail: false,\r\n                modal: false,\r\n                positons: [\r\n                    ...state.positions,\r\n                    JSON.parse(action.result.data)[0]\r\n\r\n                ]\r\n            };\r\n        case EDIT_POSITION_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n                success: false,\r\n                fail: false,\r\n            }\r\n        case EDIT_POSITION_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: false,\r\n                fail: true,\r\n\r\n            };\r\n        case EDIT_POSITION_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: true,\r\n                fail: false,\r\n                modal: false,\r\n                position: {},\r\n                positions: JSON.parse(action.result.data)\r\n            };\r\n        case DELETE_POSITION_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n                success: false,\r\n                fail: false,\r\n            }\r\n        case DELETE_POSITION_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: false,\r\n                fail: true,\r\n\r\n            };\r\n        case DELETE_POSITION_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: true,\r\n                fail: false,\r\n                modal: false,\r\n                position: {},\r\n                positions: JSON.parse(action.result.data)\r\n            };\r\n        case ADD_MODAL:\r\n            return {\r\n                ...state,\r\n                modal:{\r\n                    add: action.modal,\r\n                    edit: false,\r\n                    delete: false\r\n                },\r\n                // user: {}\r\n            };\r\n        case EDIT_MODAL:\r\n            return {\r\n                ...state,\r\n                modal:{\r\n                    add: false,\r\n                    edit: action.modal,\r\n                    delete: false\r\n                },\r\n            };\r\n        case DELETE_MODAL:\r\n            return {\r\n                ...state,\r\n                modal:{\r\n                    add: false,\r\n                    edit: false,\r\n                    delete: action.modal\r\n                },\r\n                // user: {}\r\n            };\r\n        case SET_MODAL_VALUES:\r\n            state.position[action.key]=action.value\r\n            return {\r\n                ...state,\r\n            };\r\n        case HANDLE:\r\n            let perm = state.position.perm;\r\n            console.log(action)\r\n            if(action.parentId){\r\n\r\n                if(perm[action.parentId]){\r\n                    let index = perm[action.parentId].indexOf(action.id);\r\n                    if (index !== -1) {\r\n                        perm[action.parentId].splice(index, 1);\r\n                        if(perm[action.parentId].length===0){\r\n                            delete perm[action.parentId];\r\n                        }\r\n                    }else{\r\n                        perm[action.parentId].push( action.id )\r\n                    }\r\n                }else{\r\n                    perm[action.parentId] = [ action.id ]\r\n                }\r\n            }else{\r\n                if(perm[action.id]){\r\n                    delete perm[action.id];\r\n                }else {\r\n                    perm[action.id] = [];\r\n                }\r\n            }\r\n            return {\r\n                ...state,\r\n                position:{\r\n                    name:state.position.name,\r\n                    perm:perm\r\n                }\r\n            }\r\n        default:\r\n            return {...state};\r\n    }\r\n};\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}