{"ast":null,"code":"import { GET_USERS_REQUEST, GET_USERS_FAIL, GET_USERS_SUCCESS, GET_USER_REQUEST, GET_USER_FAIL, GET_USER_SUCCESS, GET_POSITIONS_REQUEST, GET_POSITIONS_FAIL, GET_POSITIONS_SUCCESS, ADD_USER_REQUEST, ADD_USER_FAIL, ADD_USER_SUCCESS, EDIT_USER_REQUEST, EDIT_USER_FAIL, EDIT_USER_SUCCESS, SET_MODAL_VALUES } from \"./actionTypes\";\nvar cols = 'id,username,firstname,lastname';\nexport var getUsers = function getUsers() {\n  return {\n    types: [GET_USERS_REQUEST, GET_USERS_FAIL, GET_USERS_SUCCESS],\n    promise: function promise(apiClient) {\n      return apiClient.get(\"User/Users\", JSON.stringify({\n        cols: cols\n      }));\n    }\n  };\n};\nexport var getUser = function getUser(id) {\n  return {\n    types: [GET_USER_REQUEST, GET_USER_FAIL, GET_USER_SUCCESS],\n    promise: function promise(apiClient) {\n      return apiClient.get(\"User/Users\", JSON.stringify({\n        param: {\n          id: id\n        }\n      }));\n    }\n  };\n};\nexport var getPositions = function getPositions() {\n  return {\n    types: [GET_POSITIONS_REQUEST, GET_POSITIONS_FAIL, GET_POSITIONS_SUCCESS],\n    promise: function promise(apiClient) {\n      return apiClient.get(\"User/Position\", JSON.stringify({\n        cols: 'id,name'\n      }));\n    }\n  };\n};\nexport var addUser = function addUser(data) {\n  var types = [ADD_USER_REQUEST, ADD_USER_FAIL, ADD_USER_SUCCESS];\n\n  var promise = function promise(apiClient) {\n    return apiClient.post(\"User/Users\", JSON.stringify({\n      data: data,\n      cols: cols\n    }));\n  };\n\n  if (data.id) {\n    types = [EDIT_USER_REQUEST, EDIT_USER_FAIL, EDIT_USER_SUCCESS];\n\n    promise = function promise(apiClient) {\n      return apiClient.put(\"User/Users\", JSON.stringify({\n        data: data,\n        cols: cols,\n        id: data.id\n      }));\n    };\n  }\n\n  return {\n    types: types,\n    promise: promise\n  };\n};\nexport var userModal = function userModal(type, modal) {\n  console.log(type.toUpperCase() + '_MODAL');\n  return {\n    type: type.toLowerCase() + '_MODAL',\n    modal: modal\n  };\n};\nexport var setModalValues = function setModalValues(value) {\n  return {\n    type: SET_MODAL_VALUES,\n    value: value\n  };\n};","map":{"version":3,"sources":["C:/Users/User/Desktop/barcode/src/redux/users/actions.js"],"names":["GET_USERS_REQUEST","GET_USERS_FAIL","GET_USERS_SUCCESS","GET_USER_REQUEST","GET_USER_FAIL","GET_USER_SUCCESS","GET_POSITIONS_REQUEST","GET_POSITIONS_FAIL","GET_POSITIONS_SUCCESS","ADD_USER_REQUEST","ADD_USER_FAIL","ADD_USER_SUCCESS","EDIT_USER_REQUEST","EDIT_USER_FAIL","EDIT_USER_SUCCESS","SET_MODAL_VALUES","cols","getUsers","types","promise","apiClient","get","JSON","stringify","getUser","id","param","getPositions","addUser","data","post","put","userModal","type","modal","console","log","toUpperCase","toLowerCase","setModalValues","value"],"mappings":"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","sourcesContent":["import {\r\n    GET_USERS_REQUEST,GET_USERS_FAIL,GET_USERS_SUCCESS,\r\n    GET_USER_REQUEST,GET_USER_FAIL,GET_USER_SUCCESS,\r\n    GET_POSITIONS_REQUEST,GET_POSITIONS_FAIL,GET_POSITIONS_SUCCESS,\r\n    ADD_USER_REQUEST,ADD_USER_FAIL,ADD_USER_SUCCESS,\r\n    EDIT_USER_REQUEST,EDIT_USER_FAIL,EDIT_USER_SUCCESS,\r\n    SET_MODAL_VALUES\r\n} from \"./actionTypes\";\r\n\r\nlet cols =  'id,username,firstname,lastname';\r\n\r\nexport const getUsers = () => {\r\n    return {\r\n        types: [GET_USERS_REQUEST,GET_USERS_FAIL,GET_USERS_SUCCESS],\r\n        promise: (apiClient) => apiClient.get(`User/Users`, JSON.stringify({ cols }))\r\n    }\r\n};\r\n\r\nexport const getUser = ( id ) => {\r\n    return {\r\n        types: [GET_USER_REQUEST,GET_USER_FAIL,GET_USER_SUCCESS],\r\n        promise: (apiClient) => apiClient.get(`User/Users`, JSON.stringify({ param:{id} }))\r\n    }\r\n};\r\n\r\nexport const getPositions = () => {\r\n    return {\r\n        types: [GET_POSITIONS_REQUEST,GET_POSITIONS_FAIL,GET_POSITIONS_SUCCESS],\r\n        promise: (apiClient) => apiClient.get(`User/Position`, JSON.stringify({ cols:'id,name' }))\r\n    }\r\n}\r\n\r\nexport const addUser = (data) => {\r\n    let types = [ADD_USER_REQUEST,ADD_USER_FAIL,ADD_USER_SUCCESS];\r\n    let promise = (apiClient) => apiClient.post(`User/Users`,JSON.stringify({data,cols}))\r\n    if(data.id){\r\n        types = [EDIT_USER_REQUEST,EDIT_USER_FAIL,EDIT_USER_SUCCESS];\r\n        promise = (apiClient) => apiClient.put(`User/Users`,JSON.stringify({data,cols,id:data.id}));\r\n    }\r\n    return {\r\n        types: types,\r\n        promise: promise\r\n    }\r\n\r\n\r\n};\r\n\r\n\r\nexport const userModal = (type,modal) => {\r\n    console.log(type.toUpperCase()+'_MODAL')\r\n    return {\r\n        type: type.toLowerCase()+'_MODAL',\r\n        modal\r\n    }\r\n}\r\n\r\nexport const setModalValues = (value) => {\r\n    return {\r\n        type: SET_MODAL_VALUES,\r\n        value\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}