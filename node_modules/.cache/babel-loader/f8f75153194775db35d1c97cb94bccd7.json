{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\User\\\\Desktop\\\\barcode\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport { GET_GROUPS_REQUEST, GET_GROUPS_FAIL, GET_GROUPS_SUCCESS, GET_GROUP_REQUEST, GET_GROUP_FAIL, GET_GROUP_SUCCESS, ADD_GROUP_REQUEST, ADD_GROUP_FAIL, ADD_GROUP_SUCCESS, EDIT_GROUP_REQUEST, EDIT_GROUP_FAIL, EDIT_GROUP_SUCCESS, DELETE_GROUP_REQUEST, DELETE_GROUP_FAIL, DELETE_GROUP_SUCCESS, GET_SUB_GROUP_REQUEST, GET_SUB_GROUP_FAIL, GET_SUB_GROUP_SUCCESS, ADD_SUB_GROUP_REQUEST, ADD_SUB_GROUP_FAIL, ADD_SUB_GROUP_SUCCESS, EDIT_SUB_GROUP_REQUEST, EDIT_SUB_GROUP_FAIL, EDIT_SUB_GROUP_SUCCESS, DELETE_SUB_GROUP_REQUEST, DELETE_SUB_GROUP_FAIL, DELETE_SUB_GROUP_SUCCESS, SET_GROUP_MODAL, TOGGLE_GROUP_MODAL, TOGGLE_SUB_GROUP_MODAL, OPEN_MENU, SELECT_GROUP, GET_SUB_GROUPS_REQUEST, GET_SUB_GROUPS_FAIL, GET_SUB_GROUPS_SUCCESS, SELECT_GROUPS_REQUEST, SELECT_GROUPS_FAIL, SELECT_GROUPS_SUCCESS, SET_TOGGLE_SUB_MODAL_VALUE, SET_SUB_MODAL_NAME_VALUE, TOGGLE_SUB_MODAL } from \"./actionTypes\";\nimport { IsRequiredField, IsRequiredFields, Pushend, changeElement, RemoveItem } from \"../../utility/utils\";\nimport { openMenu, editElement, deleteElement } from \"./functions\";\nvar INIT_STATE = {\n  groups: [],\n  group: {},\n  subGroups: [],\n  subGroup: {},\n  modal: {},\n  subModal: {},\n  required: [\"name\"],\n  selected: {},\n  loading: false,\n  success: false,\n  fail: false,\n  errors: {}\n};\nexport default (function () {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : INIT_STATE;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case TOGGLE_SUB_MODAL:\n      return _objectSpread({}, state, {\n        subModal: {}\n      });\n\n    case SET_TOGGLE_SUB_MODAL_VALUE:\n      return action.subGroup ? _objectSpread({}, state, {\n        subModal: action.subModal,\n        subGroup: action.subGroup\n      }) : _objectSpread({}, state, {\n        subModal: action.subModal,\n        subGroup: function subGroup() {\n          var subGroup = state.subGroup;\n          subGroup.active = 0;\n          return subGroup;\n        }\n      });\n\n    case SET_SUB_MODAL_NAME_VALUE:\n      return _objectSpread({}, state, {\n        subGroup: action.subGroup\n      });\n\n    case SELECT_GROUPS_REQUEST:\n      return _objectSpread({}, state, {\n        loading: true,\n        success: false,\n        fail: false,\n        modal: {},\n        subModal: {},\n        errors: {}\n      });\n\n    case SELECT_GROUPS_FAIL:\n      return _objectSpread({}, state, {\n        loading: false,\n        success: false,\n        modal: {},\n        subModal: {},\n        fail: true\n      });\n\n    case SELECT_GROUPS_SUCCESS:\n      return _objectSpread({}, state, {\n        loading: false,\n        success: true,\n        fail: false,\n        modal: {},\n        subModal: {},\n        group: action.result,\n        errors: {}\n      });\n\n    case GET_GROUPS_REQUEST:\n      return _objectSpread({}, state, {\n        loading: true,\n        success: false,\n        fail: false,\n        modal: {},\n        subModal: {},\n        errors: {}\n      });\n\n    case GET_GROUPS_FAIL:\n      return _objectSpread({}, state, {\n        loading: false,\n        success: false,\n        modal: {},\n        subModal: {},\n        fail: true\n      });\n\n    case GET_GROUPS_SUCCESS:\n      return _objectSpread({}, state, {\n        loading: false,\n        success: true,\n        fail: false,\n        modal: {},\n        subModal: {},\n        groups: action.result.results,\n        group: action.result.results[0],\n        errors: {}\n      });\n\n    case GET_GROUP_REQUEST:\n      return _objectSpread({}, state, {\n        loading: true,\n        success: false,\n        fail: false,\n        errors: {}\n      });\n\n    case GET_GROUP_FAIL:\n      return _objectSpread({}, state, {\n        loading: false,\n        success: false,\n        fail: true\n      });\n\n    case GET_GROUP_SUCCESS:\n      // console.log('ggg',action.result[Object.keys(action.result)[0]])\n      return _objectSpread({}, state, {\n        loading: false,\n        success: true,\n        fail: false,\n        group: action.result,\n        errors: {}\n      });\n\n    case ADD_GROUP_REQUEST:\n      return _objectSpread({}, state, {\n        loading: true,\n        success: false,\n        fail: false,\n        errors: IsRequiredFields(state.required, state.group, state.errors)\n      });\n\n    case ADD_GROUP_FAIL:\n      return _objectSpread({}, state, {\n        loading: false,\n        success: false,\n        fail: true\n      });\n\n    case ADD_GROUP_SUCCESS:\n      return _objectSpread({}, state, {\n        loading: false,\n        success: true,\n        fail: false,\n        modal: {},\n        groups: Pushend(state.groups, action.result)\n      });\n\n    case EDIT_GROUP_REQUEST:\n      return _objectSpread({}, state, {\n        loading: true,\n        success: false,\n        fail: false,\n        errors: IsRequiredFields(state.required, state.group, state.errors)\n      });\n\n    case EDIT_GROUP_FAIL:\n      return _objectSpread({}, state, {\n        loading: false,\n        success: false,\n        fail: true\n      });\n\n    case EDIT_GROUP_SUCCESS:\n      return _objectSpread({}, state, {\n        groups: changeElement(state.groups, action.result),\n        modal: {},\n        loading: false,\n        success: true,\n        fail: false\n      });\n\n    case DELETE_GROUP_REQUEST:\n      return _objectSpread({}, state, {\n        loading: true,\n        success: false,\n        fail: false\n      });\n\n    case DELETE_GROUP_FAIL:\n      return _objectSpread({}, state, {\n        loading: false,\n        success: false,\n        fail: true\n      });\n\n    case DELETE_GROUP_SUCCESS:\n      return _objectSpread({}, state, {\n        groups: RemoveItem(state.groups, action.data),\n        modal: {},\n        loading: false,\n        success: true,\n        fail: false,\n        group: {}\n      });\n\n    case GET_SUB_GROUP_REQUEST:\n      return _objectSpread({}, state, {\n        loading: true,\n        success: false,\n        fail: false,\n        errors: {}\n      });\n\n    case GET_SUB_GROUP_FAIL:\n      return _objectSpread({}, state, {\n        loading: false,\n        success: false,\n        fail: true\n      });\n\n    case GET_SUB_GROUP_SUCCESS:\n      console.log('GET_SUB_GROUP_SUCCESS', action.result);\n      return _objectSpread({}, state, {\n        loading: false,\n        success: true,\n        fail: false,\n        subGroup: action.result,\n        errors: {}\n      });\n\n    case GET_SUB_GROUPS_REQUEST:\n      return _objectSpread({}, state, {\n        loading: true,\n        success: false,\n        fail: false,\n        errors: {}\n      });\n\n    case GET_SUB_GROUPS_FAIL:\n      return _objectSpread({}, state, {\n        loading: false,\n        success: false,\n        fail: true\n      });\n\n    case GET_SUB_GROUPS_SUCCESS:\n      return _objectSpread({}, state, {\n        loading: false,\n        success: true,\n        fail: false,\n        subGroups: action.result.results,\n        errors: {}\n      });\n\n    case ADD_SUB_GROUP_REQUEST:\n      return _objectSpread({}, state, {\n        loading: true,\n        success: false,\n        fail: false,\n        errors: IsRequiredFields(state.required, state.group, state.errors)\n      });\n\n    case ADD_SUB_GROUP_FAIL:\n      return _objectSpread({}, state, {\n        loading: false,\n        success: false,\n        fail: true\n      });\n\n    case ADD_SUB_GROUP_SUCCESS:\n      return _objectSpread({}, state, {\n        subGroups: Pushend(state.subGroups, action.result),\n        subModal: {},\n        loading: false,\n        success: true,\n        fail: false\n      });\n\n    case EDIT_SUB_GROUP_REQUEST:\n      return _objectSpread({}, state, {\n        loading: true,\n        success: false,\n        fail: false,\n        errors: IsRequiredFields(state.required, state.group, state.errors)\n      });\n\n    case EDIT_SUB_GROUP_FAIL:\n      return _objectSpread({}, state, {\n        loading: false,\n        success: false,\n        fail: true\n      });\n\n    case EDIT_SUB_GROUP_SUCCESS:\n      var EditEl = JSON.parse(action.result.data);\n      state.groups[EditEl.group_id].subGroup = editElement(state.groups[EditEl.group_id].subGroup, EditEl);\n      return _objectSpread({}, state, {\n        loading: false,\n        success: true,\n        fail: false,\n        subModal: {},\n        group: {},\n        groups: state.groups\n      });\n\n    case DELETE_SUB_GROUP_REQUEST:\n      return _objectSpread({}, state, {\n        loading: true,\n        success: false,\n        fail: false\n      });\n\n    case DELETE_SUB_GROUP_FAIL:\n      return _objectSpread({}, state, {\n        loading: false,\n        success: false,\n        fail: true\n      });\n\n    case DELETE_SUB_GROUP_SUCCESS:\n      var delEl = JSON.parse(action.result.data);\n      state.groups[delEl.group_id].subGroup = deleteElement(state.groups[delEl.group_id].subGroup, delEl.id);\n      return _objectSpread({}, state, {\n        loading: false,\n        success: true,\n        fail: false,\n        subModal: {},\n        group: {},\n        groups: state.groups\n      });\n\n    case SET_GROUP_MODAL:\n      state.group[action.key] = action.value;\n      return _objectSpread({}, state, {\n        errors: IsRequiredField(state.required, action, state.errors)\n      });\n\n    case TOGGLE_GROUP_MODAL:\n      state.modal[action.modalType] = !state.modal[action.modalType];\n\n      if (action.obj) {\n        if (action.modalType === \"edit\") {\n          state.group[action.obj.key] = action.obj.value;\n        } else {\n          state.group = action.obj;\n        }\n      }\n\n      return _objectSpread({}, state, {\n        errors: {},\n        subModal: {}\n      });\n\n    case TOGGLE_SUB_GROUP_MODAL:\n      state.subModal[action.modalType] = !state.subModal[action.modalType];\n      var obj = action.obj;\n\n      if (obj) {\n        if (action.modalType === \"edit\") {\n          state.subGroup = _objectSpread({}, state.subGroup, obj);\n        } else {\n          state.subGroup = obj;\n        }\n      }\n\n      return _objectSpread({}, state, {\n        errors: {},\n        modal: {}\n      });\n\n    case OPEN_MENU:\n      state.groups[action.group_id].subGroup = openMenu(state.groups[action.group_id].subGroup, action.id, \"open\");\n      return _objectSpread({}, state, {\n        groups: state.groups\n      });\n\n    case SELECT_GROUP:\n      state.selected[action.group_id] = action.value;\n      return _objectSpread({}, state);\n\n    default:\n      return _objectSpread({}, state);\n  }\n});","map":{"version":3,"sources":["C:/Users/User/Desktop/barcode/src/redux/group/reducer.js"],"names":["GET_GROUPS_REQUEST","GET_GROUPS_FAIL","GET_GROUPS_SUCCESS","GET_GROUP_REQUEST","GET_GROUP_FAIL","GET_GROUP_SUCCESS","ADD_GROUP_REQUEST","ADD_GROUP_FAIL","ADD_GROUP_SUCCESS","EDIT_GROUP_REQUEST","EDIT_GROUP_FAIL","EDIT_GROUP_SUCCESS","DELETE_GROUP_REQUEST","DELETE_GROUP_FAIL","DELETE_GROUP_SUCCESS","GET_SUB_GROUP_REQUEST","GET_SUB_GROUP_FAIL","GET_SUB_GROUP_SUCCESS","ADD_SUB_GROUP_REQUEST","ADD_SUB_GROUP_FAIL","ADD_SUB_GROUP_SUCCESS","EDIT_SUB_GROUP_REQUEST","EDIT_SUB_GROUP_FAIL","EDIT_SUB_GROUP_SUCCESS","DELETE_SUB_GROUP_REQUEST","DELETE_SUB_GROUP_FAIL","DELETE_SUB_GROUP_SUCCESS","SET_GROUP_MODAL","TOGGLE_GROUP_MODAL","TOGGLE_SUB_GROUP_MODAL","OPEN_MENU","SELECT_GROUP","GET_SUB_GROUPS_REQUEST","GET_SUB_GROUPS_FAIL","GET_SUB_GROUPS_SUCCESS","SELECT_GROUPS_REQUEST","SELECT_GROUPS_FAIL","SELECT_GROUPS_SUCCESS","SET_TOGGLE_SUB_MODAL_VALUE","SET_SUB_MODAL_NAME_VALUE","TOGGLE_SUB_MODAL","IsRequiredField","IsRequiredFields","Pushend","changeElement","RemoveItem","openMenu","editElement","deleteElement","INIT_STATE","groups","group","subGroups","subGroup","modal","subModal","required","selected","loading","success","fail","errors","state","action","type","active","result","results","data","console","log","EditEl","JSON","parse","group_id","delEl","id","key","value","modalType","obj"],"mappings":"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","sourcesContent":["import {\r\n    GET_GROUPS_REQUEST,\r\n    GET_GROUPS_FAIL,\r\n    GET_GROUPS_SUCCESS,\r\n    GET_GROUP_REQUEST,\r\n    GET_GROUP_FAIL,\r\n    GET_GROUP_SUCCESS,\r\n    ADD_GROUP_REQUEST,\r\n    ADD_GROUP_FAIL,\r\n    ADD_GROUP_SUCCESS,\r\n    EDIT_GROUP_REQUEST,\r\n    EDIT_GROUP_FAIL,\r\n    EDIT_GROUP_SUCCESS,\r\n    DELETE_GROUP_REQUEST,\r\n    DELETE_GROUP_FAIL,\r\n    DELETE_GROUP_SUCCESS,\r\n    GET_SUB_GROUP_REQUEST,\r\n    GET_SUB_GROUP_FAIL,\r\n    GET_SUB_GROUP_SUCCESS,\r\n    ADD_SUB_GROUP_REQUEST,\r\n    ADD_SUB_GROUP_FAIL,\r\n    ADD_SUB_GROUP_SUCCESS,\r\n    EDIT_SUB_GROUP_REQUEST,\r\n    EDIT_SUB_GROUP_FAIL,\r\n    EDIT_SUB_GROUP_SUCCESS,\r\n    DELETE_SUB_GROUP_REQUEST,\r\n    DELETE_SUB_GROUP_FAIL,\r\n    DELETE_SUB_GROUP_SUCCESS,\r\n    SET_GROUP_MODAL,\r\n    TOGGLE_GROUP_MODAL,\r\n    TOGGLE_SUB_GROUP_MODAL,\r\n    OPEN_MENU,\r\n    SELECT_GROUP,\r\n    GET_SUB_GROUPS_REQUEST,\r\n    GET_SUB_GROUPS_FAIL,\r\n    GET_SUB_GROUPS_SUCCESS,\r\n    SELECT_GROUPS_REQUEST,\r\n    SELECT_GROUPS_FAIL,\r\n    SELECT_GROUPS_SUCCESS,\r\n    SET_TOGGLE_SUB_MODAL_VALUE,\r\n    SET_SUB_MODAL_NAME_VALUE, TOGGLE_SUB_MODAL\r\n} from \"./actionTypes\";\r\nimport {IsRequiredField, IsRequiredFields, Pushend, changeElement, RemoveItem} from \"../../utility/utils\";\r\nimport {openMenu, editElement, deleteElement} from \"./functions\";\r\n\r\nconst INIT_STATE = {\r\n    groups: [],\r\n    group: {},\r\n    subGroups: [],\r\n    subGroup: {},\r\n    modal: {},\r\n    subModal: {},\r\n    required: [\"name\"],\r\n    selected: {},\r\n    loading: false,\r\n    success: false,\r\n    fail: false,\r\n    errors: {}\r\n};\r\n\r\nexport default (state = INIT_STATE, action) => {\r\n    switch (action.type) {\r\n        case TOGGLE_SUB_MODAL:\r\n            return {\r\n                ...state,\r\n                subModal: {}\r\n            }\r\n        case SET_TOGGLE_SUB_MODAL_VALUE:\r\n            return action.subGroup ?\r\n                {\r\n                    ...state,\r\n                    subModal: action.subModal,\r\n                    subGroup: action.subGroup\r\n                }\r\n                :\r\n                {\r\n                    ...state,\r\n                    subModal: action.subModal,\r\n                    subGroup: () => {\r\n                        let subGroup = state.subGroup;\r\n                        subGroup.active = 0;\r\n                        return subGroup;\r\n                    }\r\n                }\r\n        case SET_SUB_MODAL_NAME_VALUE:\r\n            return {\r\n                ...state,\r\n                subGroup: action.subGroup\r\n            }\r\n        case SELECT_GROUPS_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n                success: false,\r\n                fail: false,\r\n                modal: {},\r\n                subModal: {},\r\n                errors: {},\r\n            };\r\n        case SELECT_GROUPS_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: false,\r\n                modal: {},\r\n                subModal: {},\r\n                fail: true,\r\n            };\r\n        case SELECT_GROUPS_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: true,\r\n                fail: false,\r\n                modal: {},\r\n                subModal: {},\r\n                group: action.result,\r\n                errors: {},\r\n            };\r\n        case GET_GROUPS_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n                success: false,\r\n                fail: false,\r\n                modal: {},\r\n                subModal: {},\r\n                errors: {},\r\n            };\r\n        case GET_GROUPS_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: false,\r\n                modal: {},\r\n                subModal: {},\r\n                fail: true,\r\n            };\r\n        case GET_GROUPS_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: true,\r\n                fail: false,\r\n                modal: {},\r\n                subModal: {},\r\n                groups: action.result.results,\r\n                group: action.result.results[0],\r\n                errors: {},\r\n            };\r\n        case GET_GROUP_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n                success: false,\r\n                fail: false,\r\n                errors: {},\r\n            };\r\n        case GET_GROUP_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: false,\r\n                fail: true,\r\n            };\r\n        case GET_GROUP_SUCCESS:\r\n            // console.log('ggg',action.result[Object.keys(action.result)[0]])\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: true,\r\n                fail: false,\r\n                group: action.result,\r\n                errors: {},\r\n            };\r\n        case ADD_GROUP_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n                success: false,\r\n                fail: false,\r\n                errors: IsRequiredFields(state.required, state.group, state.errors)\r\n            }\r\n        case ADD_GROUP_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: false,\r\n                fail: true,\r\n\r\n            };\r\n        case ADD_GROUP_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: true,\r\n                fail: false,\r\n                modal: {},\r\n                groups: Pushend(state.groups, action.result)\r\n            };\r\n        case EDIT_GROUP_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n                success: false,\r\n                fail: false,\r\n                errors: IsRequiredFields(state.required, state.group, state.errors)\r\n            }\r\n        case EDIT_GROUP_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: false,\r\n                fail: true,\r\n\r\n            };\r\n        case EDIT_GROUP_SUCCESS:\r\n            return {\r\n                ...state,\r\n                groups: changeElement(state.groups, action.result),\r\n                modal: {},\r\n                loading: false,\r\n                success: true,\r\n                fail: false,\r\n            };\r\n        case DELETE_GROUP_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n                success: false,\r\n                fail: false,\r\n            }\r\n        case DELETE_GROUP_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: false,\r\n                fail: true,\r\n\r\n            };\r\n        case DELETE_GROUP_SUCCESS:\r\n            return {\r\n                ...state,\r\n                groups: RemoveItem(state.groups, action.data),\r\n                modal: {},\r\n                loading: false,\r\n                success: true,\r\n                fail: false,\r\n                group: {}\r\n            };\r\n        case GET_SUB_GROUP_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n                success: false,\r\n                fail: false,\r\n                errors: {},\r\n            };\r\n        case GET_SUB_GROUP_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: false,\r\n                fail: true,\r\n            };\r\n        case GET_SUB_GROUP_SUCCESS:\r\n            console.log('GET_SUB_GROUP_SUCCESS', action.result)\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: true,\r\n                fail: false,\r\n                subGroup: action.result,\r\n                errors: {},\r\n            };\r\n        case GET_SUB_GROUPS_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n                success: false,\r\n                fail: false,\r\n                errors: {},\r\n            };\r\n        case GET_SUB_GROUPS_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: false,\r\n                fail: true,\r\n            };\r\n        case GET_SUB_GROUPS_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: true,\r\n                fail: false,\r\n                subGroups: action.result.results,\r\n                errors: {},\r\n            };\r\n        case ADD_SUB_GROUP_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n                success: false,\r\n                fail: false,\r\n                errors: IsRequiredFields(state.required, state.group, state.errors)\r\n            }\r\n        case ADD_SUB_GROUP_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: false,\r\n                fail: true,\r\n\r\n            };\r\n        case ADD_SUB_GROUP_SUCCESS:\r\n            return {\r\n                ...state,\r\n                subGroups: Pushend(state.subGroups, action.result),\r\n                subModal: {},\r\n                loading: false,\r\n                success: true,\r\n                fail: false\r\n            };\r\n        case EDIT_SUB_GROUP_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n                success: false,\r\n                fail: false,\r\n                errors: IsRequiredFields(state.required, state.group, state.errors)\r\n            }\r\n        case EDIT_SUB_GROUP_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: false,\r\n                fail: true,\r\n\r\n            };\r\n        case EDIT_SUB_GROUP_SUCCESS:\r\n            let EditEl = JSON.parse(action.result.data);\r\n            state.groups[EditEl.group_id].subGroup = editElement(state.groups[EditEl.group_id].subGroup, EditEl);\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: true,\r\n                fail: false,\r\n                subModal: {},\r\n                group: {},\r\n                groups: state.groups\r\n            };\r\n        case DELETE_SUB_GROUP_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n                success: false,\r\n                fail: false,\r\n            }\r\n        case DELETE_SUB_GROUP_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: false,\r\n                fail: true,\r\n\r\n            };\r\n        case DELETE_SUB_GROUP_SUCCESS:\r\n            let delEl = JSON.parse(action.result.data);\r\n            state.groups[delEl.group_id].subGroup = deleteElement(state.groups[delEl.group_id].subGroup, delEl.id);\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: true,\r\n                fail: false,\r\n                subModal: {},\r\n                group: {},\r\n                groups: state.groups\r\n            };\r\n\r\n        case SET_GROUP_MODAL:\r\n            state.group[action.key] = action.value;\r\n            return {\r\n                ...state,\r\n                errors: IsRequiredField(state.required, action, state.errors)\r\n            };\r\n        case TOGGLE_GROUP_MODAL:\r\n            state.modal[action.modalType] = !state.modal[action.modalType];\r\n            if (action.obj) {\r\n                if (action.modalType === \"edit\") {\r\n                    state.group[action.obj.key] = action.obj.value\r\n                } else {\r\n                    state.group = action.obj\r\n                }\r\n            }\r\n\r\n            return {\r\n                ...state,\r\n                errors: {},\r\n                subModal: {}\r\n            }\r\n        case TOGGLE_SUB_GROUP_MODAL:\r\n            state.subModal[action.modalType] = !state.subModal[action.modalType];\r\n            let obj = action.obj\r\n            if (obj) {\r\n                if (action.modalType === \"edit\") {\r\n                    state.subGroup = {\r\n                        ...state.subGroup,\r\n                        ...obj\r\n                    }\r\n                } else {\r\n                    state.subGroup = obj\r\n                }\r\n            }\r\n\r\n            return {\r\n                ...state,\r\n                errors: {},\r\n                modal: {}\r\n            }\r\n        case OPEN_MENU:\r\n            state.groups[action.group_id].subGroup = openMenu(state.groups[action.group_id].subGroup, action.id, \"open\");\r\n            return {\r\n                ...state,\r\n                groups: state.groups\r\n            }\r\n        case SELECT_GROUP:\r\n            state.selected[action.group_id] = action.value\r\n            return {\r\n                ...state,\r\n            }\r\n        default:\r\n            return {...state};\r\n    }\r\n};\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}