{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\User\\\\Desktop\\\\barcode\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport { saveSession, getSession } from \"../../utility/session\";\nimport { LOGIN_REQUEST, LOGIN_REQUEST_FAIL, LOGIN_REQUEST_SUCCESS, LOGOUT_REQUEST, LOGOUT_REQUEST_FAIL, LOGOUT_REQUEST_SUCCESS } from \"./actionTypes\";\nvar INIT_STATE = {\n  user: getSession('user'),\n  token: getSession('token'),\n  loading: false,\n  success: false,\n  fail: false,\n  errors: {}\n};\nconsole.log(getSession(\"auth\"));\nexport default (function () {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : INIT_STATE;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case LOGIN_REQUEST:\n      return _objectSpread({}, state, {\n        loading: true,\n        success: false,\n        fail: false,\n        errors: {}\n      });\n\n    case LOGIN_REQUEST_FAIL:\n      return _objectSpread({}, state, {\n        loading: false,\n        success: false,\n        fail: true // errors: getResponseErrors(action.error.response),\n\n      });\n\n    case LOGIN_REQUEST_SUCCESS:\n      console.log(action.result);\n      var data = action.result.data;\n      saveSession('auth', data);\n      return _objectSpread({}, state, {\n        loading: false,\n        success: true,\n        fail: false,\n        user: data.user,\n        token: data.token,\n        errors: {}\n      });\n\n    default:\n      return _objectSpread({}, state);\n  }\n});","map":{"version":3,"sources":["C:/Users/User/Desktop/barcode/src/redux/auth/reducer.js"],"names":["saveSession","getSession","LOGIN_REQUEST","LOGIN_REQUEST_FAIL","LOGIN_REQUEST_SUCCESS","LOGOUT_REQUEST","LOGOUT_REQUEST_FAIL","LOGOUT_REQUEST_SUCCESS","INIT_STATE","user","token","loading","success","fail","errors","console","log","state","action","type","result","data"],"mappings":";AAAA,SAASA,WAAT,EAAqBC,UAArB,QAAuC,uBAAvC;AAEA,SACIC,aADJ,EAEIC,kBAFJ,EAGIC,qBAHJ,EAIIC,cAJJ,EAKIC,mBALJ,EAMIC,sBANJ,QAOO,eAPP;AAUA,IAAMC,UAAU,GAAG;AACfC,EAAAA,IAAI,EAAER,UAAU,CAAC,MAAD,CADD;AAEfS,EAAAA,KAAK,EAAET,UAAU,CAAC,OAAD,CAFF;AAGfU,EAAAA,OAAO,EAAE,KAHM;AAIfC,EAAAA,OAAO,EAAE,KAJM;AAKfC,EAAAA,IAAI,EAAE,KALS;AAMfC,EAAAA,MAAM,EAAE;AANO,CAAnB;AAQAC,OAAO,CAACC,GAAR,CAAYf,UAAU,CAAC,MAAD,CAAtB;AAEA,gBAAe,YAAgC;AAAA,MAA/BgB,KAA+B,uEAAvBT,UAAuB;AAAA,MAAXU,MAAW;;AAC3C,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKjB,aAAL;AACI,+BACOe,KADP;AAEIN,QAAAA,OAAO,EAAE,IAFb;AAGIC,QAAAA,OAAO,EAAE,KAHb;AAIIC,QAAAA,IAAI,EAAE,KAJV;AAKIC,QAAAA,MAAM,EAAE;AALZ;;AAOJ,SAAKX,kBAAL;AACI,+BACOc,KADP;AAEIN,QAAAA,OAAO,EAAE,KAFb;AAGIC,QAAAA,OAAO,EAAE,KAHb;AAIIC,QAAAA,IAAI,EAAE,IAJV,CAKI;;AALJ;;AAOJ,SAAKT,qBAAL;AACIW,MAAAA,OAAO,CAACC,GAAR,CAAYE,MAAM,CAACE,MAAnB;AACA,UAAIC,IAAI,GAAGH,MAAM,CAACE,MAAP,CAAcC,IAAzB;AACArB,MAAAA,WAAW,CAAC,MAAD,EAAQqB,IAAR,CAAX;AACA,+BACOJ,KADP;AAEIN,QAAAA,OAAO,EAAE,KAFb;AAGIC,QAAAA,OAAO,EAAE,IAHb;AAIIC,QAAAA,IAAI,EAAE,KAJV;AAKIJ,QAAAA,IAAI,EAAEY,IAAI,CAACZ,IALf;AAMIC,QAAAA,KAAK,EAAEW,IAAI,CAACX,KANhB;AAOII,QAAAA,MAAM,EAAE;AAPZ;;AAWJ;AACI,+BAAWG,KAAX;AAjCR;AAmCH,CApCD","sourcesContent":["import { saveSession,getSession } from \"../../utility/session\";\r\n\r\nimport {\r\n    LOGIN_REQUEST,\r\n    LOGIN_REQUEST_FAIL,\r\n    LOGIN_REQUEST_SUCCESS,\r\n    LOGOUT_REQUEST,\r\n    LOGOUT_REQUEST_FAIL,\r\n    LOGOUT_REQUEST_SUCCESS\r\n} from \"./actionTypes\";\r\n\r\n\r\nconst INIT_STATE = {\r\n    user: getSession('user'),\r\n    token: getSession('token'),\r\n    loading: false,\r\n    success: false,\r\n    fail: false,\r\n    errors: {},\r\n};\r\nconsole.log(getSession(\"auth\"))\r\n\r\nexport default (state = INIT_STATE, action) => {\r\n    switch (action.type) {\r\n        case LOGIN_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n                success: false,\r\n                fail: false,\r\n                errors: {},\r\n            };\r\n        case LOGIN_REQUEST_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: false,\r\n                fail: true,\r\n                // errors: getResponseErrors(action.error.response),\r\n            };\r\n        case LOGIN_REQUEST_SUCCESS:\r\n            console.log(action.result)\r\n            let data = action.result.data\r\n            saveSession('auth',data);\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: true,\r\n                fail: false,\r\n                user: data.user,\r\n                token: data.token,\r\n                errors: {},\r\n            };\r\n\r\n\r\n        default:\r\n            return {...state};\r\n    }\r\n};\r\n\r\n"]},"metadata":{},"sourceType":"module"}