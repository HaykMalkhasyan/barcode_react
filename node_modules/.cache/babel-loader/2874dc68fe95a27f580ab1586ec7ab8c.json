{"ast":null,"code":"import { GET_USERS_REQUEST, GET_USERS_FAIL, GET_USERS_SUCCESS, GET_USER_REQUEST, GET_USER_FAIL, GET_USER_SUCCESS, ADD_USER_REQUEST, ADD_USER_FAIL, ADD_USER_SUCCESS, EDIT_USER_REQUEST, EDIT_USER_FAIL, EDIT_USER_SUCCESS, DELETE_USER_REQUEST, DELETE_USER_FAIL, DELETE_USER_SUCCESS, SET_USER_MODAL, TOGGLE_USER_MODAL } from \"./actionTypes\";\nvar cols = 'id,username,firstname,lastname';\nvar url = \"user/\";\nexport var userActions = function userActions(type, data) {\n  console.log(type, data);\n\n  switch (type) {\n    case \"get\":\n      return {\n        types: [GET_USER_REQUEST, GET_USER_FAIL, GET_USER_SUCCESS],\n        promise: function promise(apiClient) {\n          return apiClient.gett(url, {\n            param: {\n              id: data.id\n            }\n          });\n        }\n      };\n\n    case \"getAll\":\n      return {\n        types: [GET_USERS_REQUEST, GET_USERS_FAIL, GET_USERS_SUCCESS],\n        promise: function promise(apiClient) {\n          return apiClient.gett('user/', {\n            cols: cols\n          });\n        }\n      };\n\n    case \"add\":\n      return {\n        types: [ADD_USER_REQUEST, ADD_USER_FAIL, ADD_USER_SUCCESS],\n        promise: function promise(apiClient) {\n          return apiClient.postt('user/create/', data, {\n            cols: cols\n          });\n        }\n      };\n\n    case \"edit\":\n      return {\n        types: [EDIT_USER_REQUEST, EDIT_USER_FAIL, EDIT_USER_SUCCESS],\n        promise: function promise(apiClient) {\n          return apiClient.putt(url, data, {\n            param: {\n              id: data.id\n            },\n            cols: cols\n          });\n        }\n      };\n\n    case \"delete\":\n      return {\n        types: [DELETE_USER_REQUEST, DELETE_USER_FAIL, DELETE_USER_SUCCESS],\n        promise: function promise(apiClient) {\n          return apiClient.deletee(url, {\n            param: {\n              id: data.id\n            },\n            cols: cols\n          });\n        }\n      };\n\n    default:\n      return;\n  }\n};\nexport var setModalValues = function setModalValues(key, value) {\n  return {\n    type: SET_USER_MODAL,\n    key: key,\n    value: value\n  };\n};\nexport var toggleModal = function toggleModal(modalType, id) {\n  var obj = {\n    \"id\": id\n  };\n  return {\n    type: TOGGLE_USER_MODAL,\n    modalType: modalType,\n    obj: obj\n  };\n};","map":{"version":3,"sources":["C:/Users/User/Desktop/barcode/src/redux/users/actions.js"],"names":["GET_USERS_REQUEST","GET_USERS_FAIL","GET_USERS_SUCCESS","GET_USER_REQUEST","GET_USER_FAIL","GET_USER_SUCCESS","ADD_USER_REQUEST","ADD_USER_FAIL","ADD_USER_SUCCESS","EDIT_USER_REQUEST","EDIT_USER_FAIL","EDIT_USER_SUCCESS","DELETE_USER_REQUEST","DELETE_USER_FAIL","DELETE_USER_SUCCESS","SET_USER_MODAL","TOGGLE_USER_MODAL","cols","url","userActions","type","data","console","log","types","promise","apiClient","gett","param","id","postt","putt","deletee","setModalValues","key","value","toggleModal","modalType","obj"],"mappings":"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","sourcesContent":["import {\r\n    GET_USERS_REQUEST,GET_USERS_FAIL,GET_USERS_SUCCESS,\r\n    GET_USER_REQUEST,GET_USER_FAIL,GET_USER_SUCCESS,\r\n    ADD_USER_REQUEST,ADD_USER_FAIL,ADD_USER_SUCCESS,\r\n    EDIT_USER_REQUEST,EDIT_USER_FAIL,EDIT_USER_SUCCESS,\r\n    DELETE_USER_REQUEST,DELETE_USER_FAIL,DELETE_USER_SUCCESS,\r\n    SET_USER_MODAL,TOGGLE_USER_MODAL\r\n} from \"./actionTypes\";\r\nlet cols =  'id,username,firstname,lastname';\r\nlet url = `user/`;\r\n\r\nexport const userActions = (type,data) => {\r\n    console.log(type, data);\r\n    \r\n    switch(type) {\r\n        case \"get\":\r\n            return {\r\n                types: [GET_USER_REQUEST,GET_USER_FAIL,GET_USER_SUCCESS],\r\n                promise: (apiClient) => apiClient.gett(url,{ param:{id:data.id} })\r\n            }\r\n        case \"getAll\":\r\n            return {\r\n                types: [GET_USERS_REQUEST,GET_USERS_FAIL,GET_USERS_SUCCESS],\r\n                promise: (apiClient) => apiClient.gett('user/', { cols })\r\n            }\r\n        case \"add\":\r\n            return {\r\n                types: [ADD_USER_REQUEST,ADD_USER_FAIL,ADD_USER_SUCCESS],\r\n                promise: (apiClient) => apiClient.postt('user/create/', data,{cols})\r\n            }\r\n        case \"edit\":\r\n            return {\r\n                types: [EDIT_USER_REQUEST,EDIT_USER_FAIL,EDIT_USER_SUCCESS],\r\n                promise: (apiClient) => apiClient.putt(url,data,{param:{id:data.id},cols})\r\n            }\r\n        case \"delete\":\r\n            return {\r\n                types: [DELETE_USER_REQUEST,DELETE_USER_FAIL,DELETE_USER_SUCCESS],\r\n                promise: (apiClient) => apiClient.deletee(url, { param:{id:data.id} ,cols})\r\n            }\r\n        default:\r\n            return ;\r\n    }\r\n};\r\n\r\n\r\nexport const setModalValues = (key,value) => {\r\n    return {\r\n        type: SET_USER_MODAL,\r\n        key,\r\n        value\r\n    }\r\n}\r\n\r\nexport const toggleModal = (modalType,id) => {\r\n    let obj = {\"id\":id};\r\n    return {\r\n        type: TOGGLE_USER_MODAL,\r\n        modalType,\r\n        obj\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}