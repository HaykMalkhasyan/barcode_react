{"ast":null,"code":"import { GET_PAGES_REQUEST, GET_PAGES_FAIL, GET_PAGES_SUCCESS, ADD_MENU_REQUEST, ADD_MENU_FAIL, ADD_MENU_SUCCESS, EDIT_MENU_REQUEST, EDIT_MENU_FAIL, EDIT_MENU_SUCCESS } from \"./actionTypes\";\nvar cols = 'id,name,icon';\nvar col = 'id, name';\nexport var getPages = function getPages() {\n  return {\n    types: [GET_PAGES_REQUEST, GET_PAGES_FAIL, GET_PAGES_SUCCESS],\n    promise: function promise(apiClient) {\n      return apiClient.gett(\"pages/\", {\n        cols: cols\n      });\n    }\n  };\n};\nexport var menuActions = function menuActions(type, data) {\n  switch (type) {\n    case 'add':\n      return {\n        type: [ADD_MENU_REQUEST, ADD_MENU_FAIL, ADD_MENU_SUCCESS],\n        promise: function promise(apiClient) {\n          return apiClient.postt('pages/', data, {\n            col: col\n          });\n        }\n      };\n\n    case 'edit':\n      return {\n        type: [EDIT_MENU_REQUEST, EDIT_MENU_FAIL, EDIT_MENU_SUCCESS],\n        promise: function promise(apiClient) {\n          return apiClient.put();\n        }\n      };\n\n    default:\n      return;\n  }\n};","map":{"version":3,"sources":["C:/Users/User/Desktop/barcode/src/redux/pages/actions.js"],"names":["GET_PAGES_REQUEST","GET_PAGES_FAIL","GET_PAGES_SUCCESS","ADD_MENU_REQUEST","ADD_MENU_FAIL","ADD_MENU_SUCCESS","EDIT_MENU_REQUEST","EDIT_MENU_FAIL","EDIT_MENU_SUCCESS","cols","col","getPages","types","promise","apiClient","gett","menuActions","type","data","postt","put"],"mappings":"AAAA,SACIA,iBADJ,EAEIC,cAFJ,EAGIC,iBAHJ,EAIIC,gBAJJ,EAKIC,aALJ,EAMIC,gBANJ,EAMsBC,iBANtB,EAMyCC,cANzC,EAMyDC,iBANzD,QAOO,eAPP;AAQA,IAAIC,IAAI,GAAI,cAAZ;AACA,IAAIC,GAAG,GAAG,UAAV;AAEA,OAAO,IAAMC,QAAQ,GAAG,SAAXA,QAAW,GAAM;AAC1B,SAAO;AACHC,IAAAA,KAAK,EAAE,CAACZ,iBAAD,EAAmBC,cAAnB,EAAkCC,iBAAlC,CADJ;AAEHW,IAAAA,OAAO,EAAE,iBAACC,SAAD;AAAA,aAAeA,SAAS,CAACC,IAAV,WAAwB;AAAEN,QAAAA,IAAI,EAAJA;AAAF,OAAxB,CAAf;AAAA;AAFN,GAAP;AAIH,CALM;AAOP,OAAO,IAAMO,WAAW,GAAG,SAAdA,WAAc,CAACC,IAAD,EAAOC,IAAP,EAAgB;AAEvC,UAAQD,IAAR;AAEI,SAAK,KAAL;AACI,aAAO;AACHA,QAAAA,IAAI,EAAE,CAACd,gBAAD,EAAmBC,aAAnB,EAAkCC,gBAAlC,CADH;AAEHQ,QAAAA,OAAO,EAAE,iBAAAC,SAAS;AAAA,iBAAIA,SAAS,CAACK,KAAV,CAAgB,QAAhB,EAA0BD,IAA1B,EAAgC;AAACR,YAAAA,GAAG,EAAHA;AAAD,WAAhC,CAAJ;AAAA;AAFf,OAAP;;AAIJ,SAAK,MAAL;AAAa,aAAO;AAChBO,QAAAA,IAAI,EAAE,CAACX,iBAAD,EAAoBC,cAApB,EAAoCC,iBAApC,CADU;AAEhBK,QAAAA,OAAO,EAAE,iBAAAC,SAAS;AAAA,iBAAIA,SAAS,CAACM,GAAV,EAAJ;AAAA;AAFF,OAAP;;AAIb;AAAS;AAXb;AAaH,CAfM","sourcesContent":["import {\r\n    GET_PAGES_REQUEST,\r\n    GET_PAGES_FAIL,\r\n    GET_PAGES_SUCCESS,\r\n    ADD_MENU_REQUEST,\r\n    ADD_MENU_FAIL,\r\n    ADD_MENU_SUCCESS, EDIT_MENU_REQUEST, EDIT_MENU_FAIL, EDIT_MENU_SUCCESS\r\n} from \"./actionTypes\";\r\nlet cols =  'id,name,icon';\r\nlet col = 'id, name';\r\n\r\nexport const getPages = () => {\r\n    return {\r\n        types: [GET_PAGES_REQUEST,GET_PAGES_FAIL,GET_PAGES_SUCCESS],\r\n        promise: (apiClient) => apiClient.gett(`pages/`,{ cols })\r\n    }\r\n}\r\n\r\nexport const menuActions = (type, data) => {\r\n\r\n    switch (type) {\r\n\r\n        case 'add':\r\n            return {\r\n                type: [ADD_MENU_REQUEST, ADD_MENU_FAIL, ADD_MENU_SUCCESS],\r\n                promise: apiClient => apiClient.postt('pages/', data, {col})\r\n            };\r\n        case 'edit': return {\r\n            type: [EDIT_MENU_REQUEST, EDIT_MENU_FAIL, EDIT_MENU_SUCCESS],\r\n            promise: apiClient => apiClient.put()\r\n        }\r\n        default: return ;\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}