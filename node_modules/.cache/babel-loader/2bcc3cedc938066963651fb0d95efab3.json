{"ast":null,"code":"import _toConsumableArray from \"C:\\\\Users\\\\User\\\\Desktop\\\\barcode\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"C:\\\\Users\\\\User\\\\Desktop\\\\barcode\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport { GET_PRODUCTS_REQUEST, GET_PRODUCTS_FAIL, GET_PRODUCTS_SUCCESS, GET_PRODUCT_REQUEST, GET_PRODUCT_FAIL, GET_PRODUCT_SUCCESS, GET_BARCODE_TYPES_REQUEST, GET_BARCODE_TYPES_FAIL, GET_BARCODE_TYPES_SUCCESS, ADD_PRODUCT_REQUEST, ADD_PRODUCT_FAIL, ADD_PRODUCT_SUCCESS, EDIT_PRODUCT_REQUEST, EDIT_PRODUCT_FAIL, EDIT_PRODUCT_SUCCESS, DELETE_PRODUCT_REQUEST, DELETE_PRODUCT_FAIL, DELETE_PRODUCT_SUCCESS, SET_PRODUCT_MODAL, TOGGLE_PRODUCT_MODAL } from \"./actionTypes\";\nvar INIT_STATE = {\n  products: [],\n  product: {},\n  modal: {},\n  loading: false,\n  success: false,\n  fail: false,\n  errors: {}\n};\nexport default (function () {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : INIT_STATE;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case GET_PRODUCTS_REQUEST:\n      return _objectSpread({}, state, {\n        loading: true,\n        success: false,\n        fail: false,\n        errors: {}\n      });\n\n    case GET_PRODUCTS_FAIL:\n      return _objectSpread({}, state, {\n        loading: false,\n        success: false,\n        fail: true\n      });\n\n    case GET_PRODUCTS_SUCCESS:\n      return _objectSpread({}, state, {\n        loading: false,\n        success: true,\n        fail: false,\n        PRODUCTs: JSON.parse(action.result.data),\n        errors: {}\n      });\n\n    case GET_PRODUCT_REQUEST:\n      return _objectSpread({}, state, {\n        loading: true,\n        success: false,\n        fail: false,\n        errors: {}\n      });\n\n    case GET_PRODUCT_FAIL:\n      return _objectSpread({}, state, {\n        loading: false,\n        success: false,\n        fail: true\n      });\n\n    case GET_PRODUCT_SUCCESS:\n      return _objectSpread({}, state, {\n        loading: false,\n        success: true,\n        fail: false,\n        product: JSON.parse(action.result.data)[0],\n        errors: {}\n      });\n\n    case GET_BARCODE_TYPES_REQUEST:\n      return _objectSpread({}, state, {\n        loading: true,\n        success: false,\n        fail: false,\n        errors: {}\n      });\n\n    case GET_BARCODE_TYPES_FAIL:\n      return _objectSpread({}, state, {\n        loading: false,\n        success: false,\n        fail: true\n      });\n\n    case GET_BARCODE_TYPES_SUCCESS:\n      return _objectSpread({}, state, {\n        loading: false,\n        success: true,\n        fail: false,\n        barcodeTypes: JSON.parse(action.result.data),\n        errors: {}\n      });\n\n    case ADD_PRODUCT_REQUEST:\n      return _objectSpread({}, state, {\n        loading: true,\n        success: false,\n        fail: false\n      });\n\n    case ADD_PRODUCT_FAIL:\n      return _objectSpread({}, state, {\n        loading: false,\n        success: false,\n        fail: true\n      });\n\n    case ADD_PRODUCT_SUCCESS:\n      return _objectSpread({}, state, {\n        loading: false,\n        success: true,\n        fail: false,\n        modal: false,\n        product: [].concat(_toConsumableArray(state.product), [JSON.parse(action.result.data)[0]])\n      });\n\n    case EDIT_PRODUCT_REQUEST:\n      return _objectSpread({}, state, {\n        loading: true,\n        success: false,\n        fail: false\n      });\n\n    case EDIT_PRODUCT_FAIL:\n      return _objectSpread({}, state, {\n        loading: false,\n        success: false,\n        fail: true\n      });\n\n    case EDIT_PRODUCT_SUCCESS:\n      return _objectSpread({}, state, {\n        loading: false,\n        success: true,\n        fail: false,\n        modal: false,\n        product: {},\n        products: JSON.parse(action.result.data)\n      });\n\n    case DELETE_PRODUCT_REQUEST:\n      return _objectSpread({}, state, {\n        loading: true,\n        success: false,\n        fail: false\n      });\n\n    case DELETE_PRODUCT_FAIL:\n      return _objectSpread({}, state, {\n        loading: false,\n        success: false,\n        fail: true\n      });\n\n    case DELETE_PRODUCT_SUCCESS:\n      return _objectSpread({}, state, {\n        loading: false,\n        success: true,\n        fail: false,\n        modal: false,\n        product: {},\n        products: JSON.parse(action.result.data)\n      });\n\n    case SET_PRODUCT_MODAL:\n      console.log(\"DFh\");\n      state.product[action.key] = action.value;\n      return _objectSpread({}, state);\n\n    case TOGGLE_PRODUCT_MODAL:\n      var newModal = {};\n      newModal[action.modalType] = !state.modal[action.modalType];\n      var product = action.modalType === \"edit\" ? _objectSpread({}, state.product, action.obj) : _objectSpread({}, action.obj);\n      return _objectSpread({}, state, {\n        modal: _objectSpread({}, state.modal, newModal),\n        product: product\n      });\n\n    default:\n      return _objectSpread({}, state);\n  }\n});","map":{"version":3,"sources":["C:/Users/User/Desktop/barcode/src/redux/products/reducer.js"],"names":["GET_PRODUCTS_REQUEST","GET_PRODUCTS_FAIL","GET_PRODUCTS_SUCCESS","GET_PRODUCT_REQUEST","GET_PRODUCT_FAIL","GET_PRODUCT_SUCCESS","GET_BARCODE_TYPES_REQUEST","GET_BARCODE_TYPES_FAIL","GET_BARCODE_TYPES_SUCCESS","ADD_PRODUCT_REQUEST","ADD_PRODUCT_FAIL","ADD_PRODUCT_SUCCESS","EDIT_PRODUCT_REQUEST","EDIT_PRODUCT_FAIL","EDIT_PRODUCT_SUCCESS","DELETE_PRODUCT_REQUEST","DELETE_PRODUCT_FAIL","DELETE_PRODUCT_SUCCESS","SET_PRODUCT_MODAL","TOGGLE_PRODUCT_MODAL","INIT_STATE","products","product","modal","loading","success","fail","errors","state","action","type","PRODUCTs","JSON","parse","result","data","barcodeTypes","console","log","key","value","newModal","modalType","obj"],"mappings":"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","sourcesContent":["import {\r\n    GET_PRODUCTS_REQUEST, GET_PRODUCTS_FAIL, GET_PRODUCTS_SUCCESS,\r\n    GET_PRODUCT_REQUEST, GET_PRODUCT_FAIL, GET_PRODUCT_SUCCESS,\r\n    GET_BARCODE_TYPES_REQUEST,GET_BARCODE_TYPES_FAIL,GET_BARCODE_TYPES_SUCCESS,\r\n    ADD_PRODUCT_REQUEST, ADD_PRODUCT_FAIL, ADD_PRODUCT_SUCCESS,\r\n    EDIT_PRODUCT_REQUEST,EDIT_PRODUCT_FAIL,EDIT_PRODUCT_SUCCESS,\r\n    DELETE_PRODUCT_REQUEST,DELETE_PRODUCT_FAIL,DELETE_PRODUCT_SUCCESS,\r\n    SET_PRODUCT_MODAL,TOGGLE_PRODUCT_MODAL\r\n} from \"./actionTypes\";\r\n\r\n\r\nconst INIT_STATE = {\r\n    products: [],\r\n    product: {},\r\n    modal: {},\r\n    loading: false,\r\n    success: false,\r\n    fail: false,\r\n    errors: {}\r\n};\r\n\r\nexport default (state = INIT_STATE, action) => {\r\n    switch (action.type) {\r\n        case GET_PRODUCTS_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n                success: false,\r\n                fail: false,\r\n                errors: {},\r\n            };\r\n        case GET_PRODUCTS_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: false,\r\n                fail: true,\r\n            };\r\n        case GET_PRODUCTS_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: true,\r\n                fail: false,\r\n                PRODUCTs: JSON.parse(action.result.data),\r\n                errors: {},\r\n            };\r\n        case GET_PRODUCT_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n                success: false,\r\n                fail: false,\r\n                errors: {},\r\n            };\r\n        case GET_PRODUCT_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: false,\r\n                fail: true,\r\n            };\r\n        case GET_PRODUCT_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: true,\r\n                fail: false,\r\n                product: JSON.parse(action.result.data)[0],\r\n                errors: {},\r\n            };\r\n        case GET_BARCODE_TYPES_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n                success: false,\r\n                fail: false,\r\n                errors: {},\r\n            };\r\n        case GET_BARCODE_TYPES_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: false,\r\n                fail: true,\r\n            };\r\n        case GET_BARCODE_TYPES_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: true,\r\n                fail: false,\r\n                barcodeTypes: JSON.parse(action.result.data),\r\n                errors: {},\r\n            };\r\n        case ADD_PRODUCT_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n                success: false,\r\n                fail: false,\r\n            }\r\n        case ADD_PRODUCT_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: false,\r\n                fail: true,\r\n\r\n            };\r\n        case ADD_PRODUCT_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: true,\r\n                fail: false,\r\n                modal: false,\r\n                product: [\r\n                    ...state.product,\r\n                    JSON.parse(action.result.data)[0]\r\n\r\n                ]\r\n            };\r\n        case EDIT_PRODUCT_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n                success: false,\r\n                fail: false,\r\n            }\r\n        case EDIT_PRODUCT_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: false,\r\n                fail: true,\r\n\r\n            };\r\n        case EDIT_PRODUCT_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: true,\r\n                fail: false,\r\n                modal: false,\r\n                product: {},\r\n                products: JSON.parse(action.result.data)\r\n            };\r\n        case DELETE_PRODUCT_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n                success: false,\r\n                fail: false,\r\n            }\r\n        case DELETE_PRODUCT_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: false,\r\n                fail: true,\r\n\r\n            };\r\n        case DELETE_PRODUCT_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: true,\r\n                fail: false,\r\n                modal: false,\r\n                product: {},\r\n                products: JSON.parse(action.result.data)\r\n            };\r\n        case SET_PRODUCT_MODAL:\r\n            console.log(\"DFh\")\r\n            state.product[action.key] = action.value\r\n            return {\r\n                ...state,\r\n            }\r\n        case TOGGLE_PRODUCT_MODAL:\r\n            let newModal = {};\r\n            newModal[action.modalType] = !state.modal[action.modalType];\r\n            let product = (action.modalType===\"edit\")?{\r\n                ...state.product,\r\n                ...action.obj\r\n            }:{\r\n                ...action.obj\r\n            }\r\n            return {\r\n                ...state,\r\n                modal: {\r\n                    ...state.modal,\r\n                    ...newModal\r\n                },\r\n                product\r\n            }\r\n        default:\r\n            return {...state};\r\n    }\r\n};\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}