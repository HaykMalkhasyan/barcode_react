{"ast":null,"code":"import { GET_ITEMS_REQUEST, GET_ITEMS_FAIL, GET_ITEMS_SUCCESS, GET_ITEM_REQUEST, GET_ITEM_FAIL, GET_ITEM_SUCCESS, ADD_ITEM_REQUEST, ADD_ITEM_FAIL, ADD_ITEM_SUCCESS, EDIT_ITEM_REQUEST, EDIT_ITEM_FAIL, EDIT_ITEM_SUCCESS, DELETE_ITEM_REQUEST, DELETE_ITEM_FAIL, DELETE_ITEM_SUCCESS, SET_MODAL_VALUES } from \"./actionTypes\";\nvar cols = 'id,ITEMname,firstname,lastname';\nvar url = \"Items/Items\";\nexport var getItems = function getItems() {\n  return {\n    types: [GET_ITEMS_REQUEST, GET_ITEMS_FAIL, GET_ITEMS_SUCCESS],\n    promise: function promise(apiClient) {\n      return apiClient.get(url, JSON.stringify({\n        cols: cols\n      }));\n    }\n  };\n};\nexport var getItem = function getItem(id) {\n  return {\n    types: [GET_ITEM_REQUEST, GET_ITEM_FAIL, GET_ITEM_SUCCESS],\n    promise: function promise(apiClient) {\n      return apiClient.get(url, JSON.stringify({\n        param: {\n          id: id\n        }\n      }));\n    }\n  };\n};\nexport var addItem = function addItem(data) {\n  var types = [ADD_ITEM_REQUEST, ADD_ITEM_FAIL, ADD_ITEM_SUCCESS];\n\n  var promise = function promise(apiClient) {\n    return apiClient.post(url, JSON.stringify({\n      data: data,\n      cols: cols\n    }));\n  };\n\n  if (data.id) {\n    types = [EDIT_ITEM_REQUEST, EDIT_ITEM_FAIL, EDIT_ITEM_SUCCESS];\n\n    promise = function promise(apiClient) {\n      return apiClient.put(url, JSON.stringify({\n        data: data,\n        cols: cols,\n        id: data.id\n      }));\n    };\n  }\n\n  return {\n    types: types,\n    promise: promise\n  };\n};\nexport var deleteItem = function deleteItem(id) {\n  return {\n    types: [DELETE_ITEM_REQUEST, DELETE_ITEM_FAIL, DELETE_ITEM_SUCCESS],\n    promise: function promise(apiClient) {\n      return apiClient.delete(url, JSON.stringify({\n        id: id,\n        cols: cols\n      }));\n    }\n  };\n};\nexport var itemModal = function itemModal(type, modal) {\n  return {\n    type: type.toUpperCase() + '_MODAL',\n    modal: modal\n  };\n};\nexport var setModalValues = function setModalValues(value) {\n  return {\n    type: SET_MODAL_VALUES,\n    value: value\n  };\n};","map":{"version":3,"sources":["C:/Users/User/Desktop/barcode/src/redux/items/actions.js"],"names":["GET_ITEMS_REQUEST","GET_ITEMS_FAIL","GET_ITEMS_SUCCESS","GET_ITEM_REQUEST","GET_ITEM_FAIL","GET_ITEM_SUCCESS","ADD_ITEM_REQUEST","ADD_ITEM_FAIL","ADD_ITEM_SUCCESS","EDIT_ITEM_REQUEST","EDIT_ITEM_FAIL","EDIT_ITEM_SUCCESS","DELETE_ITEM_REQUEST","DELETE_ITEM_FAIL","DELETE_ITEM_SUCCESS","SET_MODAL_VALUES","cols","url","getItems","types","promise","apiClient","get","JSON","stringify","getItem","id","param","addItem","data","post","put","deleteItem","delete","itemModal","type","modal","toUpperCase","setModalValues","value"],"mappings":"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","sourcesContent":["import {\r\n    GET_ITEMS_REQUEST,GET_ITEMS_FAIL,GET_ITEMS_SUCCESS,\r\n    GET_ITEM_REQUEST,GET_ITEM_FAIL,GET_ITEM_SUCCESS,\r\n    ADD_ITEM_REQUEST,ADD_ITEM_FAIL,ADD_ITEM_SUCCESS,\r\n    EDIT_ITEM_REQUEST,EDIT_ITEM_FAIL,EDIT_ITEM_SUCCESS,\r\n    DELETE_ITEM_REQUEST,DELETE_ITEM_FAIL,DELETE_ITEM_SUCCESS,\r\n    SET_MODAL_VALUES\r\n} from \"./actionTypes\";\r\n\r\nlet cols =  'id,ITEMname,firstname,lastname';\r\nlet url = `Items/Items`;\r\n\r\nexport const getItems = () => {\r\n    return {\r\n        types: [GET_ITEMS_REQUEST,GET_ITEMS_FAIL,GET_ITEMS_SUCCESS],\r\n        promise: (apiClient) => apiClient.get(url, JSON.stringify({ cols }))\r\n    }\r\n};\r\n\r\nexport const getItem = ( id ) => {\r\n    return {\r\n        types: [GET_ITEM_REQUEST,GET_ITEM_FAIL,GET_ITEM_SUCCESS],\r\n        promise: (apiClient) => apiClient.get(url, JSON.stringify({ param:{id} }))\r\n    }\r\n};\r\n\r\nexport const addItem = (data) => {\r\n    let types = [ADD_ITEM_REQUEST,ADD_ITEM_FAIL,ADD_ITEM_SUCCESS];\r\n    let promise = (apiClient) => apiClient.post(url,JSON.stringify({data,cols}))\r\n    if(data.id){\r\n        types = [EDIT_ITEM_REQUEST,EDIT_ITEM_FAIL,EDIT_ITEM_SUCCESS];\r\n        promise = (apiClient) => apiClient.put(url,JSON.stringify({data,cols,id:data.id}));\r\n    }\r\n    return {\r\n        types: types,\r\n        promise: promise\r\n    }\r\n};\r\n\r\nexport const deleteItem = ( id ) => {\r\n    return {\r\n        types: [DELETE_ITEM_REQUEST,DELETE_ITEM_FAIL,DELETE_ITEM_SUCCESS],\r\n        promise: (apiClient) => apiClient.delete(url, JSON.stringify({ id,cols }))\r\n    }\r\n};\r\n\r\n\r\nexport const itemModal = (type,modal) => {\r\n    return {\r\n        type: type.toUpperCase()+'_MODAL',\r\n        modal\r\n    }\r\n}\r\n\r\nexport const setModalValues = (value) => {\r\n    return {\r\n        type: SET_MODAL_VALUES,\r\n        value\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}