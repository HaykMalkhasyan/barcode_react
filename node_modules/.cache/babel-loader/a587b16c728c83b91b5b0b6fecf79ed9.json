{"ast":null,"code":"import { GET_LANGUAGES_REQUEST, GET_LANGUAGES_FAIL, GET_LANGUAGES_SUCCESS, GET_TRANSLATIONS_REQUEST, GET_TRANSLATIONS_FAIL, GET_TRANSLATIONS_SUCCESS, SET_ACTIVE_LANGUAGE, SET_MODAL_LANGUAGE, TOGGLE_MODAL_LANGUAGE } from \"./actionTypes\";\nimport SessionStorage from \"../../services/SessionStorage\";\nexport var getLanguages = function getLanguages() {\n  return {\n    types: [GET_LANGUAGES_REQUEST, GET_LANGUAGES_FAIL, GET_LANGUAGES_SUCCESS],\n    promise: function promise(apiClient) {\n      return apiClient.gett(\"languages\");\n    }\n  };\n};\nexport var getTranslations = function getTranslations() {\n  return {\n    types: [GET_TRANSLATIONS_REQUEST, GET_TRANSLATIONS_FAIL, GET_TRANSLATIONS_SUCCESS],\n    promise: function promise(apiClient) {\n      return apiClient.gett(\"translations\");\n    }\n  };\n};\nexport var setTranslations = function setTranslations(key, value) {\n  var lang = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : SessionStorage.get('lang');\n};\nexport var setLanguage = function setLanguage(lang) {\n  SessionStorage.set(\"lang\", lang);\n  return {\n    type: SET_ACTIVE_LANGUAGE,\n    lang: lang\n  };\n};\nexport var setModalLanguage = function setModalLanguage(lang) {\n  return {\n    type: SET_MODAL_LANGUAGE,\n    lang: lang\n  };\n};\nexport var toggleModalLanguage = function toggleModalLanguage() {\n  return {\n    type: TOGGLE_MODAL_LANGUAGE\n  };\n};","map":{"version":3,"sources":["C:/Users/User/Desktop/barcode/src/redux/lang/actions.js"],"names":["GET_LANGUAGES_REQUEST","GET_LANGUAGES_FAIL","GET_LANGUAGES_SUCCESS","GET_TRANSLATIONS_REQUEST","GET_TRANSLATIONS_FAIL","GET_TRANSLATIONS_SUCCESS","SET_ACTIVE_LANGUAGE","SET_MODAL_LANGUAGE","TOGGLE_MODAL_LANGUAGE","SessionStorage","getLanguages","types","promise","apiClient","gett","getTranslations","setTranslations","key","value","lang","get","setLanguage","set","type","setModalLanguage","toggleModalLanguage"],"mappings":"AAAA,SACIA,qBADJ,EAC2BC,kBAD3B,EAC+CC,qBAD/C,EAEIC,wBAFJ,EAE8BC,qBAF9B,EAEqDC,wBAFrD,EAGIC,mBAHJ,EAGwBC,kBAHxB,EAG2CC,qBAH3C,QAIO,eAJP;AAKA,OAAOC,cAAP,MAA2B,+BAA3B;AAEA,OAAO,IAAMC,YAAY,GAAG,SAAfA,YAAe,GAAM;AAC9B,SAAO;AACHC,IAAAA,KAAK,EAAE,CAACX,qBAAD,EAAuBC,kBAAvB,EAA0CC,qBAA1C,CADJ;AAEHU,IAAAA,OAAO,EAAE,iBAACC,SAAD;AAAA,aAAeA,SAAS,CAACC,IAAV,aAAf;AAAA;AAFN,GAAP;AAIH,CALM;AAOP,OAAO,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,GAAM;AACjC,SAAO;AACHJ,IAAAA,KAAK,EAAE,CAACR,wBAAD,EAA0BC,qBAA1B,EAAgDC,wBAAhD,CADJ;AAEHO,IAAAA,OAAO,EAAE,iBAACC,SAAD;AAAA,aAAeA,SAAS,CAACC,IAAV,gBAAf;AAAA;AAFN,GAAP;AAIH,CALM;AAOP,OAAO,IAAME,eAAe,GAAE,SAAjBA,eAAiB,CAACC,GAAD,EAAMC,KAAN,EAAkD;AAAA,MAArCC,IAAqC,uEAA9BV,cAAc,CAACW,GAAf,CAAmB,MAAnB,CAA8B;AAE/E,CAFM;AAIP,OAAO,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAACF,IAAD,EAAS;AAChCV,EAAAA,cAAc,CAACa,GAAf,CAAmB,MAAnB,EAA2BH,IAA3B;AACA,SAAO;AACHI,IAAAA,IAAI,EAAEjB,mBADH;AAEHa,IAAAA,IAAI,EAAJA;AAFG,GAAP;AAIH,CANM;AAQP,OAAO,IAAMK,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACL,IAAD,EAAS;AACrC,SAAO;AACHI,IAAAA,IAAI,EAAEhB,kBADH;AAEHY,IAAAA,IAAI,EAAJA;AAFG,GAAP;AAIH,CALM;AAOP,OAAO,IAAMM,mBAAmB,GAAG,SAAtBA,mBAAsB,GAAK;AACpC,SAAO;AACHF,IAAAA,IAAI,EAAEf;AADH,GAAP;AAGH,CAJM","sourcesContent":["import {\r\n    GET_LANGUAGES_REQUEST, GET_LANGUAGES_FAIL, GET_LANGUAGES_SUCCESS,\r\n    GET_TRANSLATIONS_REQUEST, GET_TRANSLATIONS_FAIL, GET_TRANSLATIONS_SUCCESS,\r\n    SET_ACTIVE_LANGUAGE,SET_MODAL_LANGUAGE,TOGGLE_MODAL_LANGUAGE\r\n} from \"./actionTypes\";\r\nimport SessionStorage from \"../../services/SessionStorage\";\r\n\r\nexport const getLanguages = () => {\r\n    return {\r\n        types: [GET_LANGUAGES_REQUEST,GET_LANGUAGES_FAIL,GET_LANGUAGES_SUCCESS],\r\n        promise: (apiClient) => apiClient.gett(`languages`)\r\n    }\r\n};\r\n\r\nexport const getTranslations = () => {\r\n    return {\r\n        types: [GET_TRANSLATIONS_REQUEST,GET_TRANSLATIONS_FAIL,GET_TRANSLATIONS_SUCCESS],\r\n        promise: (apiClient) => apiClient.gett(`translations`)\r\n    }\r\n}\r\n\r\nexport const setTranslations =(key, value, lang = SessionStorage.get('lang')) =>{\r\n\r\n}\r\n\r\nexport const setLanguage = (lang) =>{\r\n    SessionStorage.set(\"lang\" ,lang)\r\n    return {\r\n        type: SET_ACTIVE_LANGUAGE,\r\n        lang\r\n    }\r\n};\r\n\r\nexport const setModalLanguage = (lang) =>{\r\n    return {\r\n        type: SET_MODAL_LANGUAGE,\r\n        lang\r\n    }\r\n};\r\n\r\nexport const toggleModalLanguage = () =>{\r\n    return {\r\n        type: TOGGLE_MODAL_LANGUAGE,\r\n    }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}