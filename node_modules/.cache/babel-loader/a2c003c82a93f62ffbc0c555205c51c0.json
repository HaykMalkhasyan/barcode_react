{"ast":null,"code":"import { GET_SUPPLIERS_REQUEST, GET_SUPPLIERS_FAIL, GET_SUPPLIERS_SUCCESS, GET_SUPPLIER_REQUEST, GET_SUPPLIER_FAIL, GET_SUPPLIER_SUCCESS, ADD_SUPPLIER_REQUEST, ADD_SUPPLIER_FAIL, ADD_SUPPLIER_SUCCESS, EDIT_SUPPLIER_REQUEST, EDIT_SUPPLIER_FAIL, EDIT_SUPPLIER_SUCCESS, DELETE_SUPPLIER_REQUEST, DELETE_SUPPLIER_FAIL, DELETE_SUPPLIER_SUCCESS, GET_BANKS_REQUEST, GET_BANKS_FAIL, GET_BANKS_SUCCESS, SET_SUPPLIER_MODAL, TOGGLE_SUPPLIER_MODAL, GET_Currency_REQUEST, GET_Currency_FAIL, GET_Currency_SUCCESS } from \"./actionTypes\";\nvar cols = 'id,name,type,hh,address,phone';\nexport var supplierActions = function supplierActions(type, data) {\n  switch (type) {\n    case \"get\":\n      return {\n        types: [GET_SUPPLIER_REQUEST, GET_SUPPLIER_FAIL, GET_SUPPLIER_SUCCESS],\n        promise: function promise(apiClient) {\n          return apiClient.gett(\"suppliers/\".concat(data.id), {\n            cols: cols\n          });\n        }\n      };\n\n    case \"getAll\":\n      return {\n        types: [GET_SUPPLIERS_REQUEST, GET_SUPPLIERS_FAIL, GET_SUPPLIERS_SUCCESS],\n        promise: function promise(apiClient) {\n          return apiClient.gett('suppliers/', {\n            cols: cols\n          });\n        }\n      };\n\n    case \"add\":\n      data.type = 0;\n      console.log(data);\n      return {\n        types: [ADD_SUPPLIER_REQUEST, ADD_SUPPLIER_FAIL, ADD_SUPPLIER_SUCCESS],\n        promise: function promise(apiClient) {\n          return apiClient.posttAdd(\"suppliers/\", data, {\n            cols: cols\n          });\n        }\n      };\n\n    case \"edit\":\n      return {\n        types: [EDIT_SUPPLIER_REQUEST, EDIT_SUPPLIER_FAIL, EDIT_SUPPLIER_SUCCESS],\n        promise: function promise(apiClient) {\n          return apiClient.putt(\"suppliers/\".concat(data.id), data, {\n            cols: cols\n          });\n        }\n      };\n\n    case \"delete\":\n      return {\n        types: [DELETE_SUPPLIER_REQUEST, DELETE_SUPPLIER_FAIL, DELETE_SUPPLIER_SUCCESS],\n        promise: function promise(apiClient) {\n          return apiClient.delete(\"suppliers/\".concat(data.id), {\n            cols: cols\n          });\n        }\n      };\n\n    default:\n      return;\n  }\n};\nexport var getBanks = function getBanks() {\n  return {\n    types: [GET_BANKS_REQUEST, GET_BANKS_FAIL, GET_BANKS_SUCCESS],\n    promise: function promise(apiClient) {\n      return apiClient.gett('bank/');\n    }\n  };\n};\nexport var getCurrency = function getCurrency() {\n  return {\n    types: [GET_Currency_REQUEST, GET_Currency_FAIL, GET_Currency_SUCCESS],\n    promise: function promise(apiClient) {\n      return apiClient.gett('currency/');\n    }\n  };\n};\nexport var setModalValues = function setModalValues(key, value, index, add) {\n  return {\n    type: SET_SUPPLIER_MODAL,\n    key: key,\n    value: value,\n    index: index,\n    add: add\n  };\n};\nexport var toggleModal = function toggleModal(modalType, id) {\n  var obj = {\n    \"id\": id\n  };\n  return {\n    type: TOGGLE_SUPPLIER_MODAL,\n    modalType: modalType,\n    obj: obj\n  };\n};","map":{"version":3,"sources":["C:/Users/User/Desktop/barcode/src/redux/suppliers/actions.js"],"names":["GET_SUPPLIERS_REQUEST","GET_SUPPLIERS_FAIL","GET_SUPPLIERS_SUCCESS","GET_SUPPLIER_REQUEST","GET_SUPPLIER_FAIL","GET_SUPPLIER_SUCCESS","ADD_SUPPLIER_REQUEST","ADD_SUPPLIER_FAIL","ADD_SUPPLIER_SUCCESS","EDIT_SUPPLIER_REQUEST","EDIT_SUPPLIER_FAIL","EDIT_SUPPLIER_SUCCESS","DELETE_SUPPLIER_REQUEST","DELETE_SUPPLIER_FAIL","DELETE_SUPPLIER_SUCCESS","GET_BANKS_REQUEST","GET_BANKS_FAIL","GET_BANKS_SUCCESS","SET_SUPPLIER_MODAL","TOGGLE_SUPPLIER_MODAL","GET_Currency_REQUEST","GET_Currency_FAIL","GET_Currency_SUCCESS","cols","supplierActions","type","data","types","promise","apiClient","gett","id","console","log","posttAdd","putt","delete","getBanks","getCurrency","setModalValues","key","value","index","add","toggleModal","modalType","obj"],"mappings":"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","sourcesContent":["import {\r\n    GET_SUPPLIERS_REQUEST,\r\n    GET_SUPPLIERS_FAIL,\r\n    GET_SUPPLIERS_SUCCESS,\r\n    GET_SUPPLIER_REQUEST,\r\n    GET_SUPPLIER_FAIL,\r\n    GET_SUPPLIER_SUCCESS,\r\n    ADD_SUPPLIER_REQUEST,\r\n    ADD_SUPPLIER_FAIL,\r\n    ADD_SUPPLIER_SUCCESS,\r\n    EDIT_SUPPLIER_REQUEST,\r\n    EDIT_SUPPLIER_FAIL,\r\n    EDIT_SUPPLIER_SUCCESS,\r\n    DELETE_SUPPLIER_REQUEST,\r\n    DELETE_SUPPLIER_FAIL,\r\n    DELETE_SUPPLIER_SUCCESS,\r\n    GET_BANKS_REQUEST,\r\n    GET_BANKS_FAIL,\r\n    GET_BANKS_SUCCESS,\r\n    SET_SUPPLIER_MODAL,\r\n    TOGGLE_SUPPLIER_MODAL,\r\n    GET_Currency_REQUEST,\r\n    GET_Currency_FAIL,\r\n    GET_Currency_SUCCESS\r\n} from \"./actionTypes\";\r\nlet cols =  'id,name,type,hh,address,phone';\r\n\r\nexport const supplierActions = (type,data) => {\r\n    switch(type) {\r\n        case \"get\":\r\n            return {\r\n                types: [GET_SUPPLIER_REQUEST,GET_SUPPLIER_FAIL,GET_SUPPLIER_SUCCESS],\r\n                promise: (apiClient) => apiClient.gett(`suppliers/${data.id}`, {cols} )\r\n            }\r\n        case \"getAll\":\r\n            return {\r\n                types: [GET_SUPPLIERS_REQUEST,GET_SUPPLIERS_FAIL,GET_SUPPLIERS_SUCCESS],\r\n                promise: (apiClient) => apiClient.gett('suppliers/', {cols})\r\n            }\r\n        case \"add\":\r\n            data.type = 0;\r\n            console.log(data);\r\n            return {\r\n                types: [ADD_SUPPLIER_REQUEST,ADD_SUPPLIER_FAIL,ADD_SUPPLIER_SUCCESS],\r\n                promise: (apiClient) => apiClient.posttAdd(`suppliers/`, data, {cols})\r\n            }\r\n        case \"edit\":\r\n            return {\r\n                types: [EDIT_SUPPLIER_REQUEST,EDIT_SUPPLIER_FAIL,EDIT_SUPPLIER_SUCCESS],\r\n                promise: (apiClient) => apiClient.putt(`suppliers/${data.id}`,data,{cols})\r\n            }\r\n        case \"delete\":\r\n            return {\r\n                types: [DELETE_SUPPLIER_REQUEST,DELETE_SUPPLIER_FAIL,DELETE_SUPPLIER_SUCCESS],\r\n                promise: (apiClient) => apiClient.delete(`suppliers/${data.id}`, {cols} )\r\n            }\r\n        default: return ;\r\n    }\r\n};\r\n\r\nexport const getBanks = () => {\r\n    return {\r\n        types: [GET_BANKS_REQUEST,GET_BANKS_FAIL,GET_BANKS_SUCCESS],\r\n        promise: (apiClient) => apiClient.gett('bank/')\r\n    }\r\n}\r\n\r\nexport const getCurrency = () => {\r\n    return {\r\n        types: [GET_Currency_REQUEST,GET_Currency_FAIL,GET_Currency_SUCCESS],\r\n        promise: (apiClient) => apiClient.gett('currency/')\r\n    }\r\n}\r\n\r\nexport const setModalValues = (key,value,index,add) => {\r\n    return {\r\n        type: SET_SUPPLIER_MODAL,\r\n        key,\r\n        value,\r\n        index,\r\n        add\r\n    }\r\n}\r\n\r\nexport const toggleModal = (modalType,id) => {\r\n    let obj = {\"id\":id};\r\n    return {\r\n        type: TOGGLE_SUPPLIER_MODAL,\r\n        modalType,\r\n        obj\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}