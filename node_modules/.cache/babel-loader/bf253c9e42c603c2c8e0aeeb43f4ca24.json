{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\barcode\\\\src\\\\containers\\\\pages\\\\users\\\\userModal.js\";\nimport React from \"react\";\nimport { Col, Row, FormGroup, Label, Button, ModalBody, ModalFooter, Input } from \"reactstrap\";\nimport Translate from \"../../../Translate\";\nimport jwt from \"jwt-simple\";\n\nvar UserModal = function UserModal(props) {\n  function handleClick() {\n    props.addUser(props.user);\n  }\n\n  return React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, React.createElement(ModalBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, React.createElement(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, React.createElement(Col, {\n    md: 6,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, React.createElement(FormGroup, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, React.createElement(Label, {\n    for: \"firstName\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, React.createElement(Translate, {\n    name: \"firstname\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  })), React.createElement(\"input\", {\n    className: \"form-control\",\n    type: \"text\",\n    id: \"firstName\",\n    onChange: function onChange(event) {\n      return props.setModalValues({\n        \"firstname\": event.target.value\n      });\n    },\n    value: props.user.firstname ? props.user.firstname : \"\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }))), React.createElement(Col, {\n    md: 6,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, React.createElement(FormGroup, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, React.createElement(Label, {\n    for: \"lastName\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, React.createElement(Translate, {\n    name: \"lastname\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  })), React.createElement(\"input\", {\n    className: \"form-control\",\n    type: \"text\",\n    id: \"lastName\",\n    onChange: function onChange(event) {\n      return props.setModalValues({\n        \"lastname\": event.target.value\n      });\n    },\n    value: props.user.lastname ? props.user.lastname : \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  })))), React.createElement(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, React.createElement(Col, {\n    md: 6,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, React.createElement(FormGroup, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, React.createElement(Label, {\n    for: \"username\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, React.createElement(Translate, {\n    name: \"username\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  })), React.createElement(\"input\", {\n    className: \"form-control\",\n    type: \"text\",\n    id: \"username\",\n    onChange: function onChange(event) {\n      return props.setModalValues({\n        \"username\": event.target.value\n      });\n    },\n    value: props.user.username ? props.user.username : \"\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }))), React.createElement(Col, {\n    md: 6,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, React.createElement(FormGroup, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, React.createElement(Label, {\n    for: \"password\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, React.createElement(Translate, {\n    name: \"password\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  })), React.createElement(\"input\", {\n    className: \"form-control\",\n    type: \"password\",\n    id: \"password\",\n    onChange: function onChange(event) {\n      return props.setModalValues({\n        \"password\": jwt.encode(event.target.value, \"password\")\n      });\n    },\n    value: props.user.password ? jwt.decode(props.user.password, \"password\") : \"\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  })))), React.createElement(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, React.createElement(Col, {\n    md: 6,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, React.createElement(FormGroup, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, React.createElement(Label, {\n    for: \"position\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, React.createElement(Translate, {\n    name: \"position\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  })), React.createElement(Input, {\n    type: \"select\",\n    id: \"position\",\n    defaultValue: props.user.position,\n    onChange: function onChange(event) {\n      return props.setModalValues({\n        \"position_id\": event.target.value\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, props.positions.map(function (item, key) {\n    return React.createElement(\"option\", {\n      value: item.id,\n      key: key,\n      selected: item.id === parseInt(props.user.position),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, item.name);\n  })))), React.createElement(Col, {\n    md: 6,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, React.createElement(FormGroup, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, React.createElement(Label, {\n    for: \"active\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, React.createElement(Translate, {\n    name: \"active\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  })), React.createElement(Input, {\n    type: \"select\",\n    id: \"active\",\n    defaultValue: 0,\n    onChange: function onChange(event) {\n      return props.setModalValues({\n        \"active\": event.target.value\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, React.createElement(\"option\", {\n    value: \"0\",\n    selected: 0 === props.user.active,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, \"\\u0531\\u0575\\u0578\"), React.createElement(\"option\", {\n    value: \"1\",\n    selected: 1 === props.user.active,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, \"\\u0548\\u0579\")))))), React.createElement(ModalFooter, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, React.createElement(Button, {\n    color: \"primary\",\n    type: \"submit\",\n    onClick: function onClick() {\n      return props.userActions(props.type, props.user);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, React.createElement(Translate, {\n    name: \"confirm\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }))));\n};\n\nexport default UserModal;","map":{"version":3,"sources":["C:/Users/User/Desktop/barcode/src/containers/pages/users/userModal.js"],"names":["React","Col","Row","FormGroup","Label","Button","ModalBody","ModalFooter","Input","Translate","jwt","UserModal","props","handleClick","addUser","user","event","setModalValues","target","value","firstname","lastname","username","encode","password","decode","position","positions","map","item","key","id","parseInt","name","active","userActions","type"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport {Col, Row, FormGroup, Label, Button, ModalBody, ModalFooter, Input} from \"reactstrap\";\r\nimport Translate from \"../../../Translate\";\r\nimport jwt from \"jwt-simple\";\r\n\r\nconst UserModal = (props) => {\r\n\r\n    function handleClick() {\r\n        props.addUser(props.user)\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <ModalBody>\r\n                <Row>\r\n                    <Col md={6}>\r\n                        <FormGroup>\r\n                            <Label for=\"firstName\"><Translate name=\"firstname\"/></Label>\r\n                            <input\r\n                                className=\"form-control\"\r\n                                type=\"text\"\r\n                                id=\"firstName\"\r\n                                onChange={event => props.setModalValues({\"firstname\":event.target.value})}\r\n                                value={props.user.firstname ? props.user.firstname : \"\"}\r\n                                required\r\n                            />\r\n                        </FormGroup>\r\n                    </Col>\r\n                    <Col md={6}>\r\n                        <FormGroup>\r\n                            <Label for=\"lastName\"><Translate name=\"lastname\"/></Label>\r\n                            <input\r\n                                className=\"form-control\"\r\n                                type=\"text\"\r\n                                id=\"lastName\"\r\n                                onChange={event => props.setModalValues({\"lastname\":event.target.value})}\r\n                                value={props.user.lastname ? props.user.lastname : \"\"}\r\n                            />\r\n                        </FormGroup>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col md={6}>\r\n                        <FormGroup>\r\n                            <Label for=\"username\"><Translate name=\"username\"/></Label>\r\n                            <input\r\n                                className=\"form-control\"\r\n                                type=\"text\"\r\n                                id=\"username\"\r\n                                onChange={event => props.setModalValues({\"username\":event.target.value})}\r\n                                value={props.user.username ? props.user.username : \"\"}\r\n                                required\r\n                            />\r\n                        </FormGroup>\r\n                    </Col>\r\n                    <Col md={6}>\r\n                        <FormGroup>\r\n                            <Label for=\"password\"><Translate name=\"password\"/></Label>\r\n                            <input\r\n                                className=\"form-control\"\r\n                                type=\"password\"\r\n                                id=\"password\"\r\n                                onChange={event => props.setModalValues({\"password\": jwt.encode(event.target.value, \"password\")})}\r\n                                value={props.user.password ? jwt.decode( props.user.password , \"password\" ) : \"\"}\r\n                                required\r\n                            />\r\n                        </FormGroup>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col md={6}>\r\n                        <FormGroup>\r\n                            <Label for=\"position\"><Translate name=\"position\"/></Label>\r\n                            <Input type=\"select\" id=\"position\" defaultValue={props.user.position}\r\n                                    onChange={event => props.setModalValues({\"position_id\":event.target.value})}>\r\n                                {props.positions.map((item, key) => {\r\n                                    return <option value={item.id} key={key} selected={item.id === parseInt(props.user.position)}>{item.name}</option>\r\n                                })}\r\n                            </Input>\r\n                        </FormGroup>\r\n                    </Col>\r\n                    <Col md={6}>\r\n                        <FormGroup>\r\n                            <Label for=\"active\"><Translate name=\"active\"/></Label>\r\n                            <Input type=\"select\" id=\"active\" defaultValue={0}\r\n                                    onChange={event => props.setModalValues({\"active\":event.target.value})}>\r\n                                <option value=\"0\" selected={0 === props.user.active}>Այո</option>\r\n                                <option value=\"1\" selected={1 === props.user.active}>Ոչ</option>\r\n                            </Input>\r\n                        </FormGroup>\r\n                    </Col>\r\n                </Row>\r\n\r\n            </ModalBody>\r\n            <ModalFooter>\r\n                <Button color=\"primary\" type=\"submit\" onClick={()=>props.userActions(props.type,props.user)}>\r\n                    <Translate name=\"confirm\"/>\r\n                </Button>\r\n            </ModalFooter>\r\n        </React.Fragment>\r\n    );\r\n\r\n};\r\n\r\nexport default UserModal;"]},"metadata":{},"sourceType":"module"}