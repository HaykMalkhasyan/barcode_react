{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\barcode\\\\src\\\\components\\\\buttons\\\\editButton.js\";\nimport React from \"react\";\nimport { Edit } from \"react-feather\";\nexport default function EditButton(props) {\n  console.log(props);\n\n  function toggle(type, id) {\n    props.userModal(type, !props.modal[type]);\n\n    if (id) {\n      props.getUser(id);\n    }\n  }\n\n  var unauthorized = props.perm ? props.perm.includes(\"edit\") : false;\n  return unauthorized ? React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }) : React.createElement(Edit, {\n    size: 18,\n    className: \"mr-2\",\n    onClick: function onClick() {\n      return toggle(\"edit\", props.id);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  });\n}","map":{"version":3,"sources":["C:/Users/User/Desktop/barcode/src/components/buttons/editButton.js"],"names":["React","Edit","EditButton","props","console","log","toggle","type","id","userModal","modal","getUser","unauthorized","perm","includes"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,IAAR,QAAmB,eAAnB;AAEA,eAAe,SAASC,UAAT,CAAoBC,KAApB,EAA2B;AACtCC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;;AACA,WAASG,MAAT,CAAgBC,IAAhB,EAAqBC,EAArB,EAAyB;AACrBL,IAAAA,KAAK,CAACM,SAAN,CAAgBF,IAAhB,EAAqB,CAACJ,KAAK,CAACO,KAAN,CAAYH,IAAZ,CAAtB;;AACA,QAAGC,EAAH,EAAM;AACFL,MAAAA,KAAK,CAACQ,OAAN,CAAcH,EAAd;AACH;AACJ;;AACD,MAAII,YAAY,GAAKT,KAAK,CAACU,IAAP,GAAaV,KAAK,CAACU,IAAN,CAAWC,QAAX,CAAoB,MAApB,CAAb,GAAyC,KAA7D;AACA,SAAOF,YAAY,GAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAH,GAAiB,oBAAC,IAAD;AAAM,IAAA,IAAI,EAAE,EAAZ;AAAgB,IAAA,SAAS,EAAC,MAA1B;AAAiC,IAAA,OAAO,EAAE;AAAA,aAAMN,MAAM,CAAC,MAAD,EAAQH,KAAK,CAACK,EAAd,CAAZ;AAAA,KAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAApC;AACH","sourcesContent":["import React from \"react\";\r\nimport {Edit} from \"react-feather\";\r\n\r\nexport default function EditButton(props) {\r\n    console.log(props)\r\n    function toggle(type,id) {\r\n        props.userModal(type,!props.modal[type])\r\n        if(id){\r\n            props.getUser(id)\r\n        }\r\n    }\r\n    let unauthorized  = (props.perm)?props.perm.includes(\"edit\"):false;\r\n    return unauthorized ? <div></div> : <Edit size={18} className=\"mr-2\" onClick={() => toggle(\"edit\",props.id)}/>;\r\n}\r\n"]},"metadata":{},"sourceType":"module"}