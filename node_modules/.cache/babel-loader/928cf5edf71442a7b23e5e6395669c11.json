{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\User\\\\Desktop\\\\barcode\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\barcode\\\\src\\\\containers\\\\pages\\\\group\\\\groupTable.js\";\nimport React, { useState } from 'react';\nimport { Card, CardBody, Col, Collapse, ListGroup, ListGroupItem, Row } from 'reactstrap';\nimport SubGroupMenu from \"./subGroupMenu\";\nimport { ChevronDown, ChevronRight } from \"react-feather\";\nimport PlusButton from \"../../../components/buttons/plusButton\";\nimport EditButton from \"../../../components/buttons/editButton\";\nimport DeleteButton from \"../../../components/buttons/deleteButton\";\n\nvar GroupTableItem = function GroupTableItem(props) {\n  console.log('data', props.data);\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isOpen = _useState2[0],\n      setIsOpen = _useState2[1];\n\n  var toggle = function toggle() {\n    return setIsOpen(!isOpen);\n  };\n\n  function Chevron(props) {\n    if (props.data && props.data.length > 0) {\n      if (!isOpen) {\n        return React.createElement(ChevronRight, {\n          size: 25,\n          className: \"mr-2\",\n          onClick: toggle,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 26\n          },\n          __self: this\n        });\n      }\n\n      return React.createElement(ChevronDown, {\n        size: 25,\n        className: \"mr-2\",\n        onClick: toggle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      });\n    }\n\n    return React.createElement(\"span\", {\n      className: \"mr-4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    });\n  }\n\n  return React.createElement(ListGroup, {\n    className: \"py-0 my-1 \",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, React.createElement(ListGroupItem, {\n    active: true,\n    className: \"rounded-0 justify-content-between\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, React.createElement(Row, {\n    className: \"todo-list-group-item\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, React.createElement(Col, {\n    sm: \"11\",\n    md: 10,\n    className: \"text-left\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, console.log('props.subGroups', props.subGroups), React.createElement(Chevron, {\n    data: props.subGroups,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }), props.data.name\n  /*[props.lang.active]*/\n  ), React.createElement(Col, {\n    sm: \"\",\n    md: 2,\n    className: \"text-right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, React.createElement(PlusButton, {\n    perm: props.perm,\n    color: \"#fff\",\n    onClick: function onClick() {\n      return props.toggleSubModal('add', 0, props.data.id);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }), React.createElement(EditButton, {\n    perm: props.perm,\n    onClick: function onClick() {\n      props.toggleModal('edit', props.data.id);\n      props.groupActions(\"get\", props.data);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }), React.createElement(DeleteButton, {\n    perm: props.perm,\n    onClick: function onClick() {\n      return props.toggleModal('delete', props.data.id);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  })))), React.createElement(Collapse, {\n    isOpen: isOpen,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, React.createElement(Card, {\n    className: \"my-1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, React.createElement(CardBody, {\n    className: \"py-0\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, React.createElement(SubGroupMenu, {\n    data: props.data.subGroup,\n    toggleSubModal: props.toggleSubModal,\n    handleOpen: props.handleOpen,\n    selectGroup: props.selectGroup,\n    actions: props.subGroupActions,\n    group_id: props.data.id,\n    selected: props.selected,\n    lang: props.lang,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  })))));\n};\n\nvar GroupTable = function GroupTable(props) {\n  if (Object.keys(props.groups).length > 0) {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, props.groups.map(function (key) {\n      return React.createElement(GroupTableItem, {\n        key: key,\n        subGroups: props.subGroups,\n        data: props.groups[key],\n        toggleModal: props.toggleModal,\n        toggleSubModal: props.toggleSubModal,\n        perm: props.perm,\n        handleOpen: props.handleOpen,\n        selectGroup: props.selectGroup,\n        selected: props.selected,\n        groupActions: props.groupActions,\n        subGroupActions: props.subGroupActions,\n        lang: props.lang,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      });\n    }));\n  } else {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    });\n  }\n};\n\nexport default GroupTable;","map":{"version":3,"sources":["C:/Users/User/Desktop/barcode/src/containers/pages/group/groupTable.js"],"names":["React","useState","Card","CardBody","Col","Collapse","ListGroup","ListGroupItem","Row","SubGroupMenu","ChevronDown","ChevronRight","PlusButton","EditButton","DeleteButton","GroupTableItem","props","console","log","data","isOpen","setIsOpen","toggle","Chevron","length","subGroups","name","perm","toggleSubModal","id","toggleModal","groupActions","subGroup","handleOpen","selectGroup","subGroupActions","selected","lang","GroupTable","Object","keys","groups","map","key"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\r\nimport {\r\n    Card,\r\n    CardBody,\r\n    Col,\r\n    Collapse,\r\n    ListGroup,\r\n    ListGroupItem,\r\n    Row\r\n} from 'reactstrap';\r\nimport SubGroupMenu from \"./subGroupMenu\"\r\n\r\nimport {ChevronDown, ChevronRight} from \"react-feather\";\r\nimport PlusButton from \"../../../components/buttons/plusButton\";\r\nimport EditButton from \"../../../components/buttons/editButton\";\r\nimport DeleteButton from \"../../../components/buttons/deleteButton\";\r\n\r\nconst GroupTableItem = props => {\r\n    console.log('data', props.data)\r\n    const [isOpen, setIsOpen] = useState(false);\r\n    const toggle = () => setIsOpen(!isOpen);\r\n\r\n    function Chevron(props) {\r\n        if (props.data && props.data.length > 0) {\r\n            if (!isOpen) {\r\n                return <ChevronRight size={25} className=\"mr-2\" onClick={toggle}/>\r\n            }\r\n            return <ChevronDown size={25} className=\"mr-2\" onClick={toggle}/>\r\n        }\r\n        return <span className=\"mr-4\"></span>\r\n    }\r\n\r\n    return (\r\n        <ListGroup className=\"py-0 my-1 \">\r\n            <ListGroupItem active className=\"rounded-0 justify-content-between\">\r\n                <Row className=\"todo-list-group-item\">\r\n                    <Col sm=\"11\" md={10} className='text-left'>\r\n                        {console.log('props.subGroups', props.subGroups)}\r\n                        <Chevron data={props.subGroups}/>\r\n                        {props.data.name/*[props.lang.active]*/}\r\n                    </Col>\r\n                    <Col sm=\"\" md={2} className='text-right'>\r\n                        <PlusButton perm={props.perm} color=\"#fff\"\r\n                                    onClick={() => props.toggleSubModal('add', 0, props.data.id)}/>\r\n                        <EditButton perm={props.perm} onClick={() => {\r\n                            props.toggleModal('edit', props.data.id);\r\n                            props.groupActions(\"get\", props.data)\r\n                        }}/>\r\n                        <DeleteButton perm={props.perm} onClick={() => props.toggleModal('delete', props.data.id)}/>\r\n                    </Col>\r\n                </Row>\r\n            </ListGroupItem>\r\n            <Collapse isOpen={isOpen}>\r\n                <Card className=\"my-1\">\r\n                    <CardBody className=\"py-0\">\r\n                        <SubGroupMenu\r\n                            data={props.data.subGroup}\r\n                            toggleSubModal={props.toggleSubModal}\r\n                            handleOpen={props.handleOpen}\r\n                            selectGroup={props.selectGroup}\r\n                            actions={props.subGroupActions}\r\n                            group_id={props.data.id}\r\n                            selected={props.selected}\r\n                            lang={props.lang}\r\n                        />\r\n\r\n                    </CardBody>\r\n                </Card>\r\n            </Collapse>\r\n        </ListGroup>\r\n\r\n    )\r\n\r\n}\r\nconst GroupTable = props => {\r\n    if (Object.keys(props.groups).length > 0) {\r\n        return <div>\r\n            {\r\n                props.groups.map(key =>\r\n                    <GroupTableItem\r\n                        key={key}\r\n                        subGroups={props.subGroups}\r\n                        data={props.groups[key]}\r\n                        toggleModal={props.toggleModal}\r\n                        toggleSubModal={props.toggleSubModal}\r\n                        perm={props.perm}\r\n                        handleOpen={props.handleOpen}\r\n                        selectGroup={props.selectGroup}\r\n                        selected={props.selected}\r\n                        groupActions={props.groupActions}\r\n                        subGroupActions={props.subGroupActions}\r\n                        lang={props.lang}\r\n                    />\r\n                )\r\n            }\r\n\r\n        </div>\r\n    } else {\r\n        return <div></div>\r\n    }\r\n\r\n}\r\n\r\nexport default GroupTable;"]},"metadata":{},"sourceType":"module"}