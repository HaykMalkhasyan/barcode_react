{"ast":null,"code":"import _toConsumableArray from \"C:\\\\Users\\\\User\\\\Desktop\\\\barcode\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"C:\\\\Users\\\\User\\\\Desktop\\\\barcode\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport { GET_POSITIONS_REQUEST, GET_POSITIONS_FAIL, GET_POSITIONS_SUCCESS, GET_POSITION_REQUEST, GET_POSITION_FAIL, GET_POSITION_SUCCESS, ADD_POSITION_REQUEST, ADD_POSITION_FAIL, ADD_POSITION_SUCCESS, EDIT_POSITION_REQUEST, EDIT_POSITION_FAIL, EDIT_POSITION_SUCCESS, DELETE_POSITION_REQUEST, DELETE_POSITION_FAIL, DELETE_POSITION_SUCCESS, ADD_MODAL, DELETE_MODAL, EDIT_MODAL, SET_MODAL_VALUES, HANDLE } from \"./actionTypes\";\nvar INIT_STATE = {\n  positions: [],\n  position: {},\n  modal: {},\n  loading: false,\n  success: false,\n  fail: false,\n  errors: {}\n};\nexport default (function () {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : INIT_STATE;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case GET_POSITIONS_REQUEST:\n      return _objectSpread({}, state, {\n        loading: true,\n        success: false,\n        fail: false,\n        errors: {}\n      });\n\n    case GET_POSITIONS_FAIL:\n      // // fakeObj{\n      // let data1 = [\n      //    {id:1,name:\"admin\"}, {id:2,name:\"user\"},\n      // ]\n      //\n      // return {\n      //     ...state,\n      //     loading: false,\n      //     success: true,\n      //     fail: false,\n      //     positions: data1,\n      //     errors: {},\n      // };\n      // //}\n      return _objectSpread({}, state, {\n        loading: false,\n        success: false,\n        fail: true\n      });\n\n    case GET_POSITIONS_SUCCESS:\n      console.log(action);\n      return _objectSpread({}, state, {\n        loading: false,\n        success: true,\n        fail: false,\n        positions: JSON.parse(action.result.data),\n        errors: {}\n      });\n\n    case GET_POSITION_REQUEST:\n      return _objectSpread({}, state, {\n        loading: true,\n        success: false,\n        fail: false,\n        errors: {}\n      });\n\n    case GET_POSITION_FAIL:\n      return _objectSpread({}, state, {\n        loading: false,\n        success: false,\n        fail: true\n      });\n\n    case GET_POSITION_SUCCESS:\n      console.log(action);\n      return _objectSpread({}, state, {\n        loading: false,\n        success: true,\n        fail: false,\n        position: JSON.parse(action.result.data),\n        errors: {}\n      });\n\n    case ADD_POSITION_REQUEST:\n      return _objectSpread({}, state, {\n        loading: true,\n        success: false,\n        fail: false\n      });\n\n    case ADD_POSITION_FAIL:\n      return _objectSpread({}, state, {\n        loading: false,\n        success: false,\n        fail: true\n      });\n\n    case ADD_POSITION_SUCCESS:\n      return _objectSpread({}, state, {\n        loading: false,\n        success: true,\n        fail: false,\n        modal: false,\n        positions: [].concat(_toConsumableArray(state.positions), [JSON.parse(action.result.data)])\n      });\n\n    case EDIT_POSITION_REQUEST:\n      return _objectSpread({}, state, {\n        loading: true,\n        success: false,\n        fail: false\n      });\n\n    case EDIT_POSITION_FAIL:\n      return _objectSpread({}, state, {\n        loading: false,\n        success: false,\n        fail: true\n      });\n\n    case EDIT_POSITION_SUCCESS:\n      return _objectSpread({}, state, {\n        loading: false,\n        success: true,\n        fail: false,\n        modal: false,\n        position: {},\n        positions: JSON.parse(action.result.data)\n      });\n\n    case DELETE_POSITION_REQUEST:\n      return _objectSpread({}, state, {\n        loading: true,\n        success: false,\n        fail: false\n      });\n\n    case DELETE_POSITION_FAIL:\n      return _objectSpread({}, state, {\n        loading: false,\n        success: false,\n        fail: true\n      });\n\n    case DELETE_POSITION_SUCCESS:\n      return _objectSpread({}, state, {\n        loading: false,\n        success: true,\n        fail: false,\n        modal: false,\n        position: {},\n        positions: JSON.parse(action.result.data)\n      });\n\n    case ADD_MODAL:\n      return _objectSpread({}, state, {\n        modal: {\n          add: action.modal,\n          edit: false,\n          delete: false\n        },\n        position: {}\n      });\n\n    case EDIT_MODAL:\n      return _objectSpread({}, state, {\n        modal: {\n          add: false,\n          edit: action.modal,\n          delete: false\n        }\n      });\n\n    case DELETE_MODAL:\n      return _objectSpread({}, state, {\n        modal: {\n          add: false,\n          edit: false,\n          delete: action.modal\n        } // user: {}\n\n      });\n\n    case SET_MODAL_VALUES:\n      state.position[action.key] = action.value;\n      return _objectSpread({}, state);\n\n    case HANDLE:\n      if (!state.position.perm) {\n        state.position.perm = {};\n      }\n\n      var perm = state.position.perm;\n\n      if (action.parentId) {\n        if (perm[action.parentId]) {\n          var index = perm[action.parentId].indexOf(action.id);\n\n          if (index !== -1) {\n            perm[action.parentId].splice(index, 1);\n\n            if (perm[action.parentId].length === 0) {\n              delete perm[action.parentId];\n            }\n          } else {\n            perm[action.parentId].push(action.id);\n          }\n        } else {\n          perm[action.parentId] = [action.id];\n        }\n      } else {\n        if (perm[action.id]) {\n          delete perm[action.id];\n        } else {\n          perm[action.id] = [];\n        }\n      }\n\n      return _objectSpread({}, state, {\n        position: {\n          id: state.position.id,\n          name: state.position.name,\n          perm: perm\n        }\n      });\n\n    default:\n      return _objectSpread({}, state);\n  }\n});","map":{"version":3,"sources":["C:/Users/User/Desktop/barcode/src/redux/positions/reducer.js"],"names":["GET_POSITIONS_REQUEST","GET_POSITIONS_FAIL","GET_POSITIONS_SUCCESS","GET_POSITION_REQUEST","GET_POSITION_FAIL","GET_POSITION_SUCCESS","ADD_POSITION_REQUEST","ADD_POSITION_FAIL","ADD_POSITION_SUCCESS","EDIT_POSITION_REQUEST","EDIT_POSITION_FAIL","EDIT_POSITION_SUCCESS","DELETE_POSITION_REQUEST","DELETE_POSITION_FAIL","DELETE_POSITION_SUCCESS","ADD_MODAL","DELETE_MODAL","EDIT_MODAL","SET_MODAL_VALUES","HANDLE","INIT_STATE","positions","position","modal","loading","success","fail","errors","state","action","type","console","log","JSON","parse","result","data","add","edit","delete","key","value","perm","parentId","index","indexOf","id","splice","length","push","name"],"mappings":"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","sourcesContent":["import {\r\n    GET_POSITIONS_REQUEST, GET_POSITIONS_FAIL, GET_POSITIONS_SUCCESS,\r\n    GET_POSITION_REQUEST, GET_POSITION_FAIL, GET_POSITION_SUCCESS,\r\n    ADD_POSITION_REQUEST, ADD_POSITION_FAIL, ADD_POSITION_SUCCESS,\r\n    EDIT_POSITION_REQUEST, EDIT_POSITION_FAIL, EDIT_POSITION_SUCCESS,\r\n    DELETE_POSITION_REQUEST, DELETE_POSITION_FAIL, DELETE_POSITION_SUCCESS,\r\n    ADD_MODAL, DELETE_MODAL, EDIT_MODAL, SET_MODAL_VALUES,\r\n    HANDLE\r\n} from \"./actionTypes\";\r\n\r\nconst INIT_STATE = {\r\n    positions: [],\r\n    position: {},\r\n    modal: {},\r\n    loading: false,\r\n    success: false,\r\n    fail: false,\r\n    errors: {}\r\n};\r\n\r\nexport default (state = INIT_STATE, action) => {\r\n    switch (action.type) {\r\n        case GET_POSITIONS_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n                success: false,\r\n                fail: false,\r\n                errors: {},\r\n            };\r\n        case GET_POSITIONS_FAIL:\r\n            // // fakeObj{\r\n            // let data1 = [\r\n            //    {id:1,name:\"admin\"}, {id:2,name:\"user\"},\r\n            // ]\r\n            //\r\n            // return {\r\n            //     ...state,\r\n            //     loading: false,\r\n            //     success: true,\r\n            //     fail: false,\r\n            //     positions: data1,\r\n            //     errors: {},\r\n            // };\r\n            // //}\r\n\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: false,\r\n                fail: true,\r\n            };\r\n        case GET_POSITIONS_SUCCESS:\r\n            console.log(action)\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: true,\r\n                fail: false,\r\n                positions: JSON.parse(action.result.data),\r\n                errors: {},\r\n            };\r\n        case GET_POSITION_REQUEST:\r\n\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n                success: false,\r\n                fail: false,\r\n                errors: {},\r\n            };\r\n        case GET_POSITION_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: false,\r\n                fail: true,\r\n            };\r\n        case GET_POSITION_SUCCESS:\r\n            console.log(action)\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: true,\r\n                fail: false,\r\n                position: JSON.parse(action.result.data),\r\n                errors: {},\r\n            };\r\n        case ADD_POSITION_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n                success: false,\r\n                fail: false,\r\n            }\r\n        case ADD_POSITION_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: false,\r\n                fail: true,\r\n\r\n            };\r\n        case ADD_POSITION_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: true,\r\n                fail: false,\r\n                modal: false,\r\n                positions: [\r\n                    ...state.positions,\r\n                    JSON.parse(action.result.data)\r\n\r\n                ]\r\n            };\r\n        case EDIT_POSITION_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n                success: false,\r\n                fail: false,\r\n            }\r\n        case EDIT_POSITION_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: false,\r\n                fail: true,\r\n\r\n            };\r\n        case EDIT_POSITION_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: true,\r\n                fail: false,\r\n                modal: false,\r\n                position: {},\r\n                positions: JSON.parse(action.result.data)\r\n            };\r\n        case DELETE_POSITION_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n                success: false,\r\n                fail: false,\r\n            }\r\n        case DELETE_POSITION_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: false,\r\n                fail: true,\r\n\r\n            };\r\n        case DELETE_POSITION_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: true,\r\n                fail: false,\r\n                modal: false,\r\n                position: {},\r\n                positions: JSON.parse(action.result.data)\r\n            };\r\n        case ADD_MODAL:\r\n            return {\r\n                ...state,\r\n                modal: {\r\n                    add: action.modal,\r\n                    edit: false,\r\n                    delete: false\r\n                },\r\n                position: {}\r\n            };\r\n        case EDIT_MODAL:\r\n            return {\r\n                ...state,\r\n                modal: {\r\n                    add: false,\r\n                    edit: action.modal,\r\n                    delete: false\r\n                },\r\n            };\r\n        case DELETE_MODAL:\r\n            return {\r\n                ...state,\r\n                modal: {\r\n                    add: false,\r\n                    edit: false,\r\n                    delete: action.modal\r\n                },\r\n                // user: {}\r\n            };\r\n        case SET_MODAL_VALUES:\r\n            state.position[action.key] = action.value\r\n            return {\r\n                ...state,\r\n            };\r\n        case HANDLE:\r\n            if (!state.position.perm) {\r\n                state.position.perm = {}\r\n            }\r\n            let perm = state.position.perm;\r\n            if (action.parentId) {\r\n                if (perm[action.parentId]) {\r\n                    let index = perm[action.parentId].indexOf(action.id);\r\n                    if (index !== -1) {\r\n                        perm[action.parentId].splice(index, 1);\r\n                        if (perm[action.parentId].length === 0) {\r\n                            delete perm[action.parentId];\r\n                        }\r\n                    } else {\r\n                        perm[action.parentId].push(action.id)\r\n                    }\r\n                } else {\r\n                    perm[action.parentId] = [action.id]\r\n                }\r\n            } else {\r\n                if (perm[action.id]) {\r\n                    delete perm[action.id];\r\n                } else {\r\n                    perm[action.id] = [];\r\n                }\r\n\r\n            }\r\n            return {\r\n                ...state,\r\n                position: {\r\n                    id: state.position.id,\r\n                    name: state.position.name,\r\n                    perm: perm\r\n                }\r\n            }\r\n\r\n        default:\r\n            return {...state};\r\n    }\r\n};\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}