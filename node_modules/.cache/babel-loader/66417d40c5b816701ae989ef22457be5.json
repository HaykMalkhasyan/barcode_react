{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\User\\\\Desktop\\\\barcode\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\User\\\\Desktop\\\\barcode\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\User\\\\Desktop\\\\barcode\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\User\\\\Desktop\\\\barcode\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\User\\\\Desktop\\\\barcode\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\barcode\\\\src\\\\containers\\\\pages\\\\import\\\\importPage.js\";\nimport React, { Component } from \"react\";\nimport { Col, Card, CardBody, CardHeader, Row } from \"reactstrap\";\nimport UploadButton from \"../../../components/buttons/upploadBtnUI\";\nimport AttachFileIcon from '@material-ui/icons/AttachFile';\nimport CustomizedSnackbars from \"../../../components/snachbarsUI/snachbarsUi\";\n\nvar ImportPage =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ImportPage, _Component);\n\n  function ImportPage() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, ImportPage);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ImportPage)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      exel: false,\n      error: false,\n      errorType: null\n    };\n\n    _this.importExelHandler = function (event) {\n      var file = event.target.files[0];\n\n      if (file.type === 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet') {\n        _this.setState({\n          exel: event.target.files[0]\n        });\n      } else {\n        _this.setState({\n          error: 'file type is not supported, make sure your file is Excel',\n          errorType: 'error'\n        });\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(ImportPage, [{\n    key: \"render\",\n    value: function render() {\n      console.log(this.state.exel);\n      return React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, React.createElement(Col, {\n        sm: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, React.createElement(Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, React.createElement(CardHeader, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, React.createElement(UploadButton, {\n        icon: React.createElement(AttachFileIcon, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 37\n          },\n          __self: this\n        }),\n        variant: 'contained',\n        color: 'primary',\n        multiple: false,\n        onChange: this.importExelHandler,\n        accept: '\".csv, application/vnd.openxmlformats-officedocument.spreadsheetml.sheet, application/vnd.ms-excel',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      })), React.createElement(CardBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, this.state.exel !== false ? React.createElement(\"img\", {\n        src: URL.createObjectURL(this.state.exel),\n        alt: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }) : 'empty'), React.createElement(CustomizedSnackbars, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return ImportPage;\n}(Component);\n\nexport default ImportPage;","map":{"version":3,"sources":["C:/Users/User/Desktop/barcode/src/containers/pages/import/importPage.js"],"names":["React","Component","Col","Card","CardBody","CardHeader","Row","UploadButton","AttachFileIcon","CustomizedSnackbars","ImportPage","state","exel","error","errorType","importExelHandler","event","file","target","files","type","setState","console","log","URL","createObjectURL"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAAQC,GAAR,EAAaC,IAAb,EAAmBC,QAAnB,EAA6BC,UAA7B,EAAyCC,GAAzC,QAAmD,YAAnD;AACA,OAAOC,YAAP,MAAyB,0CAAzB;AACA,OAAOC,cAAP,MAA2B,+BAA3B;AACA,OAAOC,mBAAP,MAAgC,6CAAhC;;IAEMC,U;;;;;;;;;;;;;;;;;UACFC,K,GAAQ;AACJC,MAAAA,IAAI,EAAE,KADF;AAEJC,MAAAA,KAAK,EAAE,KAFH;AAGJC,MAAAA,SAAS,EAAE;AAHP,K;;UAMRC,iB,GAAoB,UAAAC,KAAK,EAAI;AACzB,UAAIC,IAAI,GAAGD,KAAK,CAACE,MAAN,CAAaC,KAAb,CAAmB,CAAnB,CAAX;;AACA,UAAIF,IAAI,CAACG,IAAL,KAAc,mEAAlB,EAAuF;AACnF,cAAKC,QAAL,CAAc;AACVT,UAAAA,IAAI,EAAEI,KAAK,CAACE,MAAN,CAAaC,KAAb,CAAmB,CAAnB;AADI,SAAd;AAGH,OAJD,MAIO;AACH,cAAKE,QAAL,CAAc;AACVR,UAAAA,KAAK,EAAE,0DADG;AAEVC,UAAAA,SAAS,EAAE;AAFD,SAAd;AAIH;AAEJ,K;;;;;;;6BAEQ;AACbQ,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKZ,KAAL,CAAWC,IAAvB;AACQ,aACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,GAAD;AAAK,QAAA,EAAE,EAAE,EAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,YAAD;AACI,QAAA,IAAI,EAAE,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADV;AAEI,QAAA,OAAO,EAAE,WAFb;AAGI,QAAA,KAAK,EAAE,SAHX;AAII,QAAA,QAAQ,EAAE,KAJd;AAKI,QAAA,QAAQ,EAAE,KAAKG,iBALnB;AAMI,QAAA,MAAM,EAAE,oGANZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CADJ,EAWI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEQ,KAAKJ,KAAL,CAAWC,IAAX,KAAoB,KAApB,GACI;AAAK,QAAA,GAAG,EAAEY,GAAG,CAACC,eAAJ,CAAoB,KAAKd,KAAL,CAAWC,IAA/B,CAAV;AAAgD,QAAA,GAAG,EAAC,EAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,GAGI,OALZ,CAXJ,EAmBI,oBAAC,mBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAnBJ,CADJ,CADJ,CADJ;AA2BH;;;;EAnDoBX,S;;AAsDzB,eAAeS,UAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport {Col, Card, CardBody, CardHeader, Row} from \"reactstrap\";\r\nimport UploadButton from \"../../../components/buttons/upploadBtnUI\";\r\nimport AttachFileIcon from '@material-ui/icons/AttachFile';\r\nimport CustomizedSnackbars from \"../../../components/snachbarsUI/snachbarsUi\";\r\n\r\nclass ImportPage extends Component{\r\n    state = {\r\n        exel: false,\r\n        error: false,\r\n        errorType: null\r\n    }\r\n\r\n    importExelHandler = event => {\r\n        let file = event.target.files[0];\r\n        if (file.type === 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet') {\r\n            this.setState({\r\n                exel: event.target.files[0]\r\n            })\r\n        } else {\r\n            this.setState({\r\n                error: 'file type is not supported, make sure your file is Excel',\r\n                errorType: 'error'\r\n            })\r\n        }\r\n\r\n    }\r\n\r\n    render() {\r\nconsole.log(this.state.exel)\r\n        return (\r\n            <Row>\r\n                <Col sm={12}>\r\n                    <Card>\r\n                        <CardHeader>\r\n                            <UploadButton\r\n                                icon={<AttachFileIcon/>}\r\n                                variant={'contained'}\r\n                                color={'primary'}\r\n                                multiple={false}\r\n                                onChange={this.importExelHandler}\r\n                                accept={'\".csv, application/vnd.openxmlformats-officedocument.spreadsheetml.sheet, application/vnd.ms-excel'}\r\n                            />\r\n                        </CardHeader>\r\n                        <CardBody>\r\n                            {\r\n                                this.state.exel !== false ?\r\n                                    <img src={URL.createObjectURL(this.state.exel)} alt=\"\"/>\r\n                                    :\r\n                                    'empty'\r\n                            }\r\n                        </CardBody>\r\n                        <CustomizedSnackbars/>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ImportPage"]},"metadata":{},"sourceType":"module"}