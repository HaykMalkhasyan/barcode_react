{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\User\\\\Desktop\\\\barcode\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\barcode\\\\src\\\\components\\\\selectWithSearchUI\\\\selectWithSearch.js\";\n\nimport React, { useState } from 'react';\nimport { Dropdown, DropdownToggle, DropdownMenu, DropdownItem, ButtonGroup, Input } from 'reactstrap';\nimport Translate from \"../../Translate\";\nimport KeyboardArrowDownIcon from '@material-ui/icons/KeyboardArrowDown';\n\nvar SearchSelectUI = function SearchSelectUI(props) {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      dropdownOpen = _useState2[0],\n      setDropdownOpen = _useState2[1];\n\n  var toggle = function toggle() {\n    return setDropdownOpen(function (prevState) {\n      return !prevState;\n    });\n  };\n\n  var name = React.createElement(Translate, {\n    name: props.defaultValue,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  });\n  console.log(props.defaultValue);\n  return React.createElement(ButtonGroup, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, React.createElement(Input, {\n    type: props.type,\n    name: props.name,\n    id: props.id,\n    disabled: true,\n    defaultValue: props.defaultValue,\n    style: {\n      borderRadius: '5px 0 0 5px',\n      height: '40px',\n      boxSizing: 'border-box'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }), React.createElement(Dropdown, {\n    isOpen: dropdownOpen,\n    toggle: toggle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, React.createElement(DropdownToggle, {\n    style: {\n      borderRadius: ' 0 5px 5px 0',\n      padding: '6px 0',\n      height: '40px',\n      boxSizing: 'border-box'\n    },\n    color: 'primary',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, React.createElement(KeyboardArrowDownIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  })), React.createElement(DropdownMenu, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, props.data ? props.data.map(function (item) {\n    return React.createElement(DropdownItem, {\n      onClick: props.onClick.bind(_this, props.name, item),\n      key: item.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(Translate, {\n      name: item.name,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }));\n  }) : React.createElement(DropdownItem, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, React.createElement(Translate, {\n    name: 'empty',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  })))));\n};\n\nexport default SearchSelectUI;","map":{"version":3,"sources":["C:/Users/User/Desktop/barcode/src/components/selectWithSearchUI/selectWithSearch.js"],"names":["React","useState","Dropdown","DropdownToggle","DropdownMenu","DropdownItem","ButtonGroup","Input","Translate","KeyboardArrowDownIcon","SearchSelectUI","props","dropdownOpen","setDropdownOpen","toggle","prevState","name","defaultValue","console","log","type","id","borderRadius","height","boxSizing","padding","data","map","item","onClick","bind"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,SAAQC,QAAR,EAAkBC,cAAlB,EAAkCC,YAAlC,EAAgDC,YAAhD,EAA8DC,WAA9D,EAA2EC,KAA3E,QAAuF,YAAvF;AACA,OAAOC,SAAP,MAAsB,iBAAtB;AACA,OAAOC,qBAAP,MAAkC,sCAAlC;;AAEA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAACC,KAAD,EAAW;AAAA,kBACUV,QAAQ,CAAC,KAAD,CADlB;AAAA;AAAA,MACvBW,YADuB;AAAA,MACTC,eADS;;AAG9B,MAAMC,MAAM,GAAG,SAATA,MAAS;AAAA,WAAMD,eAAe,CAAC,UAAAE,SAAS;AAAA,aAAI,CAACA,SAAL;AAAA,KAAV,CAArB;AAAA,GAAf;;AAEA,MAAIC,IAAI,GAAG,oBAAC,SAAD;AAAW,IAAA,IAAI,EAAEL,KAAK,CAACM,YAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAX;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYR,KAAK,CAACM,YAAlB;AAEA,SACI,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,KAAD;AACI,IAAA,IAAI,EAAEN,KAAK,CAACS,IADhB;AAEI,IAAA,IAAI,EAAET,KAAK,CAACK,IAFhB;AAGI,IAAA,EAAE,EAAEL,KAAK,CAACU,EAHd;AAII,IAAA,QAAQ,EAAE,IAJd;AAKI,IAAA,YAAY,EAAEV,KAAK,CAACM,YALxB;AAMI,IAAA,KAAK,EAAE;AACHK,MAAAA,YAAY,EAAE,aADX;AAEHC,MAAAA,MAAM,EAAE,MAFL;AAGHC,MAAAA,SAAS,EAAE;AAHR,KANX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAaI,oBAAC,QAAD;AACI,IAAA,MAAM,EAAEZ,YADZ;AAEI,IAAA,MAAM,EAAEE,MAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAII,oBAAC,cAAD;AACI,IAAA,KAAK,EAAE;AACHQ,MAAAA,YAAY,EAAE,cADX;AAEHG,MAAAA,OAAO,EAAE,OAFN;AAGHF,MAAAA,MAAM,EAAE,MAHL;AAIHC,MAAAA,SAAS,EAAE;AAJR,KADX;AAOI,IAAA,KAAK,EAAE,SAPX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KASI,oBAAC,qBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATJ,CAJJ,EAeI,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEQb,KAAK,CAACe,IAAN,GACIf,KAAK,CAACe,IAAN,CAAWC,GAAX,CACI,UAAAC,IAAI,EAAI;AAEJ,WACI,oBAAC,YAAD;AACI,MAAA,OAAO,EAAEjB,KAAK,CAACkB,OAAN,CAAcC,IAAd,CAAmB,KAAnB,EAAyBnB,KAAK,CAACK,IAA/B,EAAqCY,IAArC,CADb;AAEI,MAAA,GAAG,EAAEA,IAAI,CAACP,EAFd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAII,oBAAC,SAAD;AAAW,MAAA,IAAI,EAAEO,IAAI,CAACZ,IAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJJ,CADJ;AAQH,GAXL,CADJ,GAeI,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,SAAD;AAAW,IAAA,IAAI,EAAE,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAjBZ,CAfJ,CAbJ,CADJ;AAuDH,CA/DD;;AAiEA,eAAeN,cAAf","sourcesContent":["import React, {useState} from 'react';\r\nimport {Dropdown, DropdownToggle, DropdownMenu, DropdownItem, ButtonGroup, Input} from 'reactstrap';\r\nimport Translate from \"../../Translate\";\r\nimport KeyboardArrowDownIcon from '@material-ui/icons/KeyboardArrowDown';\r\n\r\nconst SearchSelectUI = (props) => {\r\n    const [dropdownOpen, setDropdownOpen] = useState(false);\r\n\r\n    const toggle = () => setDropdownOpen(prevState => !prevState);\r\n\r\n    let name = <Translate name={props.defaultValue}/>\r\n    console.log(props.defaultValue)\r\n\r\n    return (\r\n        <ButtonGroup>\r\n            <Input\r\n                type={props.type}\r\n                name={props.name}\r\n                id={props.id}\r\n                disabled={true}\r\n                defaultValue={props.defaultValue}\r\n                style={{\r\n                    borderRadius: '5px 0 0 5px',\r\n                    height: '40px',\r\n                    boxSizing: 'border-box'\r\n                }}\r\n            />\r\n            <Dropdown\r\n                isOpen={dropdownOpen}\r\n                toggle={toggle}\r\n            >\r\n                <DropdownToggle\r\n                    style={{\r\n                        borderRadius: ' 0 5px 5px 0',\r\n                        padding: '6px 0',\r\n                        height: '40px',\r\n                        boxSizing: 'border-box'\r\n                    }}\r\n                    color={'primary'}\r\n                >\r\n                    <KeyboardArrowDownIcon/>\r\n                </DropdownToggle>\r\n                <DropdownMenu>\r\n                    {\r\n                        props.data ?\r\n                            props.data.map(\r\n                                item => {\r\n\r\n                                    return (\r\n                                        <DropdownItem\r\n                                            onClick={props.onClick.bind(this, props.name, item)}\r\n                                            key={item.id}\r\n                                        >\r\n                                            <Translate name={item.name}/>\r\n                                        </DropdownItem>\r\n                                    )\r\n                                }\r\n                            )\r\n                            :\r\n                            <DropdownItem>\r\n                                <Translate name={'empty'}/>\r\n                            </DropdownItem>\r\n\r\n                    }\r\n                </DropdownMenu>\r\n            </Dropdown>\r\n        </ButtonGroup>\r\n    );\r\n}\r\n\r\nexport default SearchSelectUI;"]},"metadata":{},"sourceType":"module"}