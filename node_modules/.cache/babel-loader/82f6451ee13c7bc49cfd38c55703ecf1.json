{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\User\\\\Desktop\\\\barcode\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport { GET_GROUPS_REQUEST, GET_GROUPS_FAIL, GET_GROUPS_SUCCESS, GET_GROUP_REQUEST, GET_GROUP_FAIL, GET_GROUP_SUCCESS, ADD_GROUP_REQUEST, ADD_GROUP_FAIL, ADD_GROUP_SUCCESS, EDIT_GROUP_REQUEST, EDIT_GROUP_FAIL, EDIT_GROUP_SUCCESS, DELETE_GROUP_REQUEST, DELETE_GROUP_FAIL, DELETE_GROUP_SUCCESS, GET_SUB_GROUP_REQUEST, GET_SUB_GROUP_FAIL, GET_SUB_GROUP_SUCCESS, ADD_SUB_GROUP_REQUEST, ADD_SUB_GROUP_FAIL, ADD_SUB_GROUP_SUCCESS, EDIT_SUB_GROUP_REQUEST, EDIT_SUB_GROUP_FAIL, EDIT_SUB_GROUP_SUCCESS, DELETE_SUB_GROUP_REQUEST, DELETE_SUB_GROUP_FAIL, DELETE_SUB_GROUP_SUCCESS, SET_GROUP_MODAL, TOGGLE_GROUP_MODAL, TOGGLE_SUB_GROUP_MODAL, OPEN_MENU, SELECT_GROUP, GET_SUB_GROUPS_REQUEST, GET_SUB_GROUPS_FAIL, GET_SUB_GROUPS_SUCCESS, SELECT_GROUPS_REQUEST, SELECT_GROUPS_FAIL, SELECT_GROUPS_SUCCESS, SET_TOGGLE_SUB_MODAL_VALUE, SET_SUB_MODAL_NAME_VALUE, TOGGLE_SUB_MODAL, START_MOVING_GROUP } from \"./actionTypes\";\nimport { IsRequiredField, Put, IsRequiredFields, Pushend, changeElement, RemoveItem } from \"../../utility/utils\";\nimport { openMenu, editElement, deleteElement } from \"./functions\";\nvar INIT_STATE = {\n  groups: [],\n  group: {},\n  subGroups: [],\n  subGroup: {},\n  modal: {},\n  subModal: {},\n  required: [\"name\"],\n  selected: {},\n  loading: false,\n  success: false,\n  fail: false,\n  errors: {},\n  movingGroupStatus: false,\n  movingGroup: {}\n};\nexport default (function () {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : INIT_STATE;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case START_MOVING_GROUP:\n      return _objectSpread({}, state, {\n        movingGroupStatus: true\n      });\n\n    case TOGGLE_SUB_MODAL:\n      return _objectSpread({}, state, {\n        subModal: {}\n      });\n\n    case SET_TOGGLE_SUB_MODAL_VALUE:\n      return action.subGroup ? _objectSpread({}, state, {\n        subModal: action.subModal,\n        subGroup: action.subGroup\n      }) : _objectSpread({}, state, {\n        subModal: action.subModal\n      });\n\n    case SET_SUB_MODAL_NAME_VALUE:\n      return _objectSpread({}, state, {\n        subGroup: action.subGroup\n      });\n\n    case SELECT_GROUPS_REQUEST:\n      return _objectSpread({}, state, {\n        loading: true,\n        success: false,\n        fail: false,\n        modal: {},\n        subModal: {},\n        errors: {}\n      });\n\n    case SELECT_GROUPS_FAIL:\n      return _objectSpread({}, state, {\n        loading: false,\n        success: false,\n        modal: {},\n        subModal: {},\n        fail: true\n      });\n\n    case SELECT_GROUPS_SUCCESS:\n      return _objectSpread({}, state, {\n        loading: false,\n        success: true,\n        fail: false,\n        modal: {},\n        subModal: {},\n        group: action.result,\n        errors: {}\n      });\n\n    case GET_GROUPS_REQUEST:\n      return _objectSpread({}, state, {\n        loading: true,\n        success: false,\n        fail: false,\n        modal: {},\n        subModal: {},\n        errors: {}\n      });\n\n    case GET_GROUPS_FAIL:\n      return _objectSpread({}, state, {\n        loading: false,\n        success: false,\n        modal: {},\n        subModal: {},\n        fail: true\n      });\n\n    case GET_GROUPS_SUCCESS:\n      return _objectSpread({}, state, {\n        loading: false,\n        success: true,\n        fail: false,\n        modal: {},\n        subModal: {},\n        groups: action.result.results,\n        group: action.result.results[0],\n        errors: {}\n      });\n\n    case GET_GROUP_REQUEST:\n      return _objectSpread({}, state, {\n        loading: true,\n        success: false,\n        fail: false,\n        errors: {}\n      });\n\n    case GET_GROUP_FAIL:\n      return _objectSpread({}, state, {\n        loading: false,\n        success: false,\n        fail: true\n      });\n\n    case GET_GROUP_SUCCESS:\n      // console.log('ggg',action.result[Object.keys(action.result)[0]])\n      return _objectSpread({}, state, {\n        loading: false,\n        success: true,\n        fail: false,\n        group: action.result,\n        errors: {}\n      });\n\n    case ADD_GROUP_REQUEST:\n      return _objectSpread({}, state, {\n        loading: true,\n        success: false,\n        fail: false,\n        errors: IsRequiredFields(state.required, state.group, state.errors)\n      });\n\n    case ADD_GROUP_FAIL:\n      return _objectSpread({}, state, {\n        loading: false,\n        success: false,\n        fail: true\n      });\n\n    case ADD_GROUP_SUCCESS:\n      return _objectSpread({}, state, {\n        loading: false,\n        success: true,\n        fail: false,\n        modal: {},\n        groups: Pushend(state.groups, action.result)\n      });\n\n    case EDIT_GROUP_REQUEST:\n      return _objectSpread({}, state, {\n        loading: true,\n        success: false,\n        fail: false,\n        errors: IsRequiredFields(state.required, state.group, state.errors)\n      });\n\n    case EDIT_GROUP_FAIL:\n      return _objectSpread({}, state, {\n        loading: false,\n        success: false,\n        fail: true\n      });\n\n    case EDIT_GROUP_SUCCESS:\n      return _objectSpread({}, state, {\n        groups: changeElement(state.groups, action.result),\n        modal: {},\n        loading: false,\n        success: true,\n        fail: false\n      });\n\n    case DELETE_GROUP_REQUEST:\n      return _objectSpread({}, state, {\n        loading: true,\n        success: false,\n        fail: false\n      });\n\n    case DELETE_GROUP_FAIL:\n      return _objectSpread({}, state, {\n        loading: false,\n        success: false,\n        fail: true\n      });\n\n    case DELETE_GROUP_SUCCESS:\n      return _objectSpread({}, state, {\n        groups: RemoveItem(state.groups, action.data),\n        modal: {},\n        loading: false,\n        success: true,\n        fail: false,\n        group: {}\n      });\n\n    case GET_SUB_GROUP_REQUEST:\n      return _objectSpread({}, state, {\n        loading: true,\n        success: false,\n        fail: false,\n        errors: {}\n      });\n\n    case GET_SUB_GROUP_FAIL:\n      return _objectSpread({}, state, {\n        loading: false,\n        success: false,\n        fail: true\n      });\n\n    case GET_SUB_GROUP_SUCCESS:\n      return _objectSpread({}, state, {\n        loading: false,\n        success: true,\n        fail: false,\n        subGroup: action.result,\n        errors: {}\n      });\n\n    case GET_SUB_GROUPS_REQUEST:\n      return _objectSpread({}, state, {\n        loading: true,\n        success: false,\n        fail: false,\n        errors: {}\n      });\n\n    case GET_SUB_GROUPS_FAIL:\n      return _objectSpread({}, state, {\n        loading: false,\n        success: false,\n        fail: true\n      });\n\n    case GET_SUB_GROUPS_SUCCESS:\n      return _objectSpread({}, state, {\n        loading: false,\n        success: true,\n        fail: false,\n        subGroups: action.result.results,\n        errors: {}\n      });\n\n    case ADD_SUB_GROUP_REQUEST:\n      return _objectSpread({}, state, {\n        loading: true,\n        success: false,\n        fail: false,\n        errors: IsRequiredFields(state.required, state.group, state.errors)\n      });\n\n    case ADD_SUB_GROUP_FAIL:\n      return _objectSpread({}, state, {\n        loading: false,\n        success: false,\n        fail: true\n      });\n\n    case ADD_SUB_GROUP_SUCCESS:\n      return _objectSpread({}, state, {\n        subGroups: Pushend(state.subGroups, action.result),\n        subModal: {},\n        loading: false,\n        success: true,\n        fail: false\n      });\n\n    case EDIT_SUB_GROUP_REQUEST:\n      return _objectSpread({}, state, {\n        loading: true,\n        success: false,\n        fail: false,\n        errors: IsRequiredFields(state.required, state.group, state.errors)\n      });\n\n    case EDIT_SUB_GROUP_FAIL:\n      return _objectSpread({}, state, {\n        loading: false,\n        success: false,\n        fail: true\n      });\n\n    case EDIT_SUB_GROUP_SUCCESS:\n      return _objectSpread({}, state, {\n        loading: false,\n        success: true,\n        fail: false,\n        subModal: {},\n        subGroups: Put(state.subGroups, action.result, 'id')\n      });\n\n    case DELETE_SUB_GROUP_REQUEST:\n      return _objectSpread({}, state, {\n        loading: true,\n        success: false,\n        fail: false\n      });\n\n    case DELETE_SUB_GROUP_FAIL:\n      return _objectSpread({}, state, {\n        loading: false,\n        success: false,\n        fail: true\n      });\n\n    case DELETE_SUB_GROUP_SUCCESS:\n      return _objectSpread({}, state, {\n        loading: false,\n        success: true,\n        fail: false,\n        subGroups: RemoveItem(state.subGroups, {\n          id: action.data\n        })\n      });\n\n    case SET_GROUP_MODAL:\n      state.group[action.key] = action.value;\n      return _objectSpread({}, state, {\n        errors: IsRequiredField(state.required, action, state.errors)\n      });\n\n    case TOGGLE_GROUP_MODAL:\n      state.modal[action.modalType] = !state.modal[action.modalType];\n\n      if (action.obj) {\n        if (action.modalType === \"edit\") {\n          state.group[action.obj.key] = action.obj.value;\n        } else {\n          state.group = action.obj;\n        }\n      }\n\n      return _objectSpread({}, state, {\n        errors: {},\n        subModal: {}\n      });\n\n    case TOGGLE_SUB_GROUP_MODAL:\n      state.subModal[action.modalType] = !state.subModal[action.modalType];\n      var obj = action.obj;\n\n      if (obj) {\n        if (action.modalType === \"edit\") {\n          state.subGroup = _objectSpread({}, state.subGroup, obj);\n        } else {\n          state.subGroup = obj;\n        }\n      }\n\n      return _objectSpread({}, state, {\n        errors: {},\n        modal: {}\n      });\n\n    case OPEN_MENU:\n      state.groups[action.group_id].subGroup = openMenu(state.groups[action.group_id].subGroup, action.id, \"open\");\n      return _objectSpread({}, state, {\n        groups: state.groups\n      });\n\n    case SELECT_GROUP:\n      state.selected[action.group_id] = action.value;\n      return _objectSpread({}, state);\n\n    default:\n      return _objectSpread({}, state);\n  }\n});","map":{"version":3,"sources":["C:/Users/User/Desktop/barcode/src/redux/group/reducer.js"],"names":["GET_GROUPS_REQUEST","GET_GROUPS_FAIL","GET_GROUPS_SUCCESS","GET_GROUP_REQUEST","GET_GROUP_FAIL","GET_GROUP_SUCCESS","ADD_GROUP_REQUEST","ADD_GROUP_FAIL","ADD_GROUP_SUCCESS","EDIT_GROUP_REQUEST","EDIT_GROUP_FAIL","EDIT_GROUP_SUCCESS","DELETE_GROUP_REQUEST","DELETE_GROUP_FAIL","DELETE_GROUP_SUCCESS","GET_SUB_GROUP_REQUEST","GET_SUB_GROUP_FAIL","GET_SUB_GROUP_SUCCESS","ADD_SUB_GROUP_REQUEST","ADD_SUB_GROUP_FAIL","ADD_SUB_GROUP_SUCCESS","EDIT_SUB_GROUP_REQUEST","EDIT_SUB_GROUP_FAIL","EDIT_SUB_GROUP_SUCCESS","DELETE_SUB_GROUP_REQUEST","DELETE_SUB_GROUP_FAIL","DELETE_SUB_GROUP_SUCCESS","SET_GROUP_MODAL","TOGGLE_GROUP_MODAL","TOGGLE_SUB_GROUP_MODAL","OPEN_MENU","SELECT_GROUP","GET_SUB_GROUPS_REQUEST","GET_SUB_GROUPS_FAIL","GET_SUB_GROUPS_SUCCESS","SELECT_GROUPS_REQUEST","SELECT_GROUPS_FAIL","SELECT_GROUPS_SUCCESS","SET_TOGGLE_SUB_MODAL_VALUE","SET_SUB_MODAL_NAME_VALUE","TOGGLE_SUB_MODAL","START_MOVING_GROUP","IsRequiredField","Put","IsRequiredFields","Pushend","changeElement","RemoveItem","openMenu","editElement","deleteElement","INIT_STATE","groups","group","subGroups","subGroup","modal","subModal","required","selected","loading","success","fail","errors","movingGroupStatus","movingGroup","state","action","type","result","results","data","id","key","value","modalType","obj","group_id"],"mappings":"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","sourcesContent":["import {\r\n    GET_GROUPS_REQUEST,\r\n    GET_GROUPS_FAIL,\r\n    GET_GROUPS_SUCCESS,\r\n    GET_GROUP_REQUEST,\r\n    GET_GROUP_FAIL,\r\n    GET_GROUP_SUCCESS,\r\n    ADD_GROUP_REQUEST,\r\n    ADD_GROUP_FAIL,\r\n    ADD_GROUP_SUCCESS,\r\n    EDIT_GROUP_REQUEST,\r\n    EDIT_GROUP_FAIL,\r\n    EDIT_GROUP_SUCCESS,\r\n    DELETE_GROUP_REQUEST,\r\n    DELETE_GROUP_FAIL,\r\n    DELETE_GROUP_SUCCESS,\r\n    GET_SUB_GROUP_REQUEST,\r\n    GET_SUB_GROUP_FAIL,\r\n    GET_SUB_GROUP_SUCCESS,\r\n    ADD_SUB_GROUP_REQUEST,\r\n    ADD_SUB_GROUP_FAIL,\r\n    ADD_SUB_GROUP_SUCCESS,\r\n    EDIT_SUB_GROUP_REQUEST,\r\n    EDIT_SUB_GROUP_FAIL,\r\n    EDIT_SUB_GROUP_SUCCESS,\r\n    DELETE_SUB_GROUP_REQUEST,\r\n    DELETE_SUB_GROUP_FAIL,\r\n    DELETE_SUB_GROUP_SUCCESS,\r\n    SET_GROUP_MODAL,\r\n    TOGGLE_GROUP_MODAL,\r\n    TOGGLE_SUB_GROUP_MODAL,\r\n    OPEN_MENU,\r\n    SELECT_GROUP,\r\n    GET_SUB_GROUPS_REQUEST,\r\n    GET_SUB_GROUPS_FAIL,\r\n    GET_SUB_GROUPS_SUCCESS,\r\n    SELECT_GROUPS_REQUEST,\r\n    SELECT_GROUPS_FAIL,\r\n    SELECT_GROUPS_SUCCESS,\r\n    SET_TOGGLE_SUB_MODAL_VALUE,\r\n    SET_SUB_MODAL_NAME_VALUE, TOGGLE_SUB_MODAL, START_MOVING_GROUP\r\n} from \"./actionTypes\";\r\nimport {IsRequiredField, Put, IsRequiredFields, Pushend, changeElement, RemoveItem} from \"../../utility/utils\";\r\nimport {openMenu, editElement, deleteElement} from \"./functions\";\r\n\r\nconst INIT_STATE = {\r\n    groups: [],\r\n    group: {},\r\n    subGroups: [],\r\n    subGroup: {},\r\n    modal: {},\r\n    subModal: {},\r\n    required: [\"name\"],\r\n    selected: {},\r\n    loading: false,\r\n    success: false,\r\n    fail: false,\r\n    errors: {},\r\n    movingGroupStatus: false,\r\n    movingGroup: {}\r\n};\r\n\r\nexport default (state = INIT_STATE, action) => {\r\n    switch (action.type) {\r\n        case START_MOVING_GROUP:\r\n            return {\r\n                ...state,\r\n                movingGroupStatus: true\r\n            }\r\n        case TOGGLE_SUB_MODAL:\r\n            return {\r\n                ...state,\r\n                subModal: {}\r\n            }\r\n        case SET_TOGGLE_SUB_MODAL_VALUE:\r\n            return action.subGroup ?\r\n                {\r\n                    ...state,\r\n                    subModal: action.subModal,\r\n                    subGroup: action.subGroup\r\n                }\r\n                :\r\n                {\r\n                    ...state,\r\n                    subModal: action.subModal,\r\n                }\r\n        case SET_SUB_MODAL_NAME_VALUE:\r\n            return {\r\n                ...state,\r\n                subGroup: action.subGroup\r\n            }\r\n        case SELECT_GROUPS_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n                success: false,\r\n                fail: false,\r\n                modal: {},\r\n                subModal: {},\r\n                errors: {},\r\n            };\r\n        case SELECT_GROUPS_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: false,\r\n                modal: {},\r\n                subModal: {},\r\n                fail: true,\r\n            };\r\n        case SELECT_GROUPS_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: true,\r\n                fail: false,\r\n                modal: {},\r\n                subModal: {},\r\n                group: action.result,\r\n                errors: {},\r\n            };\r\n        case GET_GROUPS_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n                success: false,\r\n                fail: false,\r\n                modal: {},\r\n                subModal: {},\r\n                errors: {},\r\n            };\r\n        case GET_GROUPS_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: false,\r\n                modal: {},\r\n                subModal: {},\r\n                fail: true,\r\n            };\r\n        case GET_GROUPS_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: true,\r\n                fail: false,\r\n                modal: {},\r\n                subModal: {},\r\n                groups: action.result.results,\r\n                group: action.result.results[0],\r\n                errors: {},\r\n            };\r\n        case GET_GROUP_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n                success: false,\r\n                fail: false,\r\n                errors: {},\r\n            };\r\n        case GET_GROUP_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: false,\r\n                fail: true,\r\n            };\r\n        case GET_GROUP_SUCCESS:\r\n            // console.log('ggg',action.result[Object.keys(action.result)[0]])\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: true,\r\n                fail: false,\r\n                group: action.result,\r\n                errors: {},\r\n            };\r\n        case ADD_GROUP_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n                success: false,\r\n                fail: false,\r\n                errors: IsRequiredFields(state.required, state.group, state.errors)\r\n            }\r\n        case ADD_GROUP_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: false,\r\n                fail: true,\r\n\r\n            };\r\n        case ADD_GROUP_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: true,\r\n                fail: false,\r\n                modal: {},\r\n                groups: Pushend(state.groups, action.result)\r\n            };\r\n        case EDIT_GROUP_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n                success: false,\r\n                fail: false,\r\n                errors: IsRequiredFields(state.required, state.group, state.errors)\r\n            }\r\n        case EDIT_GROUP_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: false,\r\n                fail: true,\r\n\r\n            };\r\n        case EDIT_GROUP_SUCCESS:\r\n            return {\r\n                ...state,\r\n                groups: changeElement(state.groups, action.result),\r\n                modal: {},\r\n                loading: false,\r\n                success: true,\r\n                fail: false,\r\n            };\r\n        case DELETE_GROUP_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n                success: false,\r\n                fail: false,\r\n            }\r\n        case DELETE_GROUP_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: false,\r\n                fail: true,\r\n\r\n            };\r\n        case DELETE_GROUP_SUCCESS:\r\n            return {\r\n                ...state,\r\n                groups: RemoveItem(state.groups, action.data),\r\n                modal: {},\r\n                loading: false,\r\n                success: true,\r\n                fail: false,\r\n                group: {}\r\n            };\r\n        case GET_SUB_GROUP_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n                success: false,\r\n                fail: false,\r\n                errors: {},\r\n            };\r\n        case GET_SUB_GROUP_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: false,\r\n                fail: true,\r\n            };\r\n        case GET_SUB_GROUP_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: true,\r\n                fail: false,\r\n                subGroup: action.result,\r\n                errors: {},\r\n            };\r\n        case GET_SUB_GROUPS_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n                success: false,\r\n                fail: false,\r\n                errors: {},\r\n            };\r\n        case GET_SUB_GROUPS_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: false,\r\n                fail: true,\r\n            };\r\n        case GET_SUB_GROUPS_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: true,\r\n                fail: false,\r\n                subGroups: action.result.results,\r\n                errors: {},\r\n            };\r\n        case ADD_SUB_GROUP_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n                success: false,\r\n                fail: false,\r\n                errors: IsRequiredFields(state.required, state.group, state.errors)\r\n            }\r\n        case ADD_SUB_GROUP_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: false,\r\n                fail: true,\r\n\r\n            };\r\n        case ADD_SUB_GROUP_SUCCESS:\r\n            return {\r\n                ...state,\r\n                subGroups: Pushend(state.subGroups, action.result),\r\n                subModal: {},\r\n                loading: false,\r\n                success: true,\r\n                fail: false\r\n            };\r\n        case EDIT_SUB_GROUP_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n                success: false,\r\n                fail: false,\r\n                errors: IsRequiredFields(state.required, state.group, state.errors)\r\n            }\r\n        case EDIT_SUB_GROUP_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: false,\r\n                fail: true,\r\n\r\n            };\r\n        case EDIT_SUB_GROUP_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: true,\r\n                fail: false,\r\n                subModal: {},\r\n                subGroups: Put(state.subGroups, action.result, 'id')\r\n            };\r\n        case DELETE_SUB_GROUP_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n                success: false,\r\n                fail: false,\r\n            }\r\n        case DELETE_SUB_GROUP_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: false,\r\n                fail: true,\r\n\r\n            };\r\n        case DELETE_SUB_GROUP_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: true,\r\n                fail: false,\r\n                subGroups: RemoveItem(state.subGroups, {id: action.data})\r\n            };\r\n\r\n        case SET_GROUP_MODAL:\r\n            state.group[action.key] = action.value;\r\n            return {\r\n                ...state,\r\n                errors: IsRequiredField(state.required, action, state.errors)\r\n            };\r\n        case TOGGLE_GROUP_MODAL:\r\n            state.modal[action.modalType] = !state.modal[action.modalType];\r\n            if (action.obj) {\r\n                if (action.modalType === \"edit\") {\r\n                    state.group[action.obj.key] = action.obj.value\r\n                } else {\r\n                    state.group = action.obj\r\n                }\r\n            }\r\n\r\n            return {\r\n                ...state,\r\n                errors: {},\r\n                subModal: {}\r\n            }\r\n        case TOGGLE_SUB_GROUP_MODAL:\r\n            state.subModal[action.modalType] = !state.subModal[action.modalType];\r\n            let obj = action.obj\r\n            if (obj) {\r\n                if (action.modalType === \"edit\") {\r\n                    state.subGroup = {\r\n                        ...state.subGroup,\r\n                        ...obj\r\n                    }\r\n                } else {\r\n                    state.subGroup = obj\r\n                }\r\n            }\r\n\r\n            return {\r\n                ...state,\r\n                errors: {},\r\n                modal: {}\r\n            }\r\n        case OPEN_MENU:\r\n            state.groups[action.group_id].subGroup = openMenu(state.groups[action.group_id].subGroup, action.id, \"open\");\r\n            return {\r\n                ...state,\r\n                groups: state.groups\r\n            }\r\n        case SELECT_GROUP:\r\n            state.selected[action.group_id] = action.value\r\n            return {\r\n                ...state,\r\n            }\r\n        default:\r\n            return {...state};\r\n    }\r\n};\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}