{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\User\\\\Desktop\\\\barcode\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\User\\\\Desktop\\\\barcode\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nvar _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\barcode\\\\src\\\\Translate.js\";\nimport React, { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport { setTranslations, checkTranslation, getTranslations } from './redux/lang/actions';\nimport SessionStorage from \"./services/SessionStorage\";\n\nvar Translate = function Translate(props) {\n  useEffect(function () {\n    props.getTranslations();\n  }, []);\n\n  var contentRender =\n  /*#__PURE__*/\n  function () {\n    var _ref = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee(name) {\n      var _iteratorNormalCompletion, _didIteratorError, _iteratorError, _iterator, _step, item;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (!(name !== undefined)) {\n                _context.next = 35;\n                break;\n              }\n\n              if (!(props.translations.length > 0)) {\n                _context.next = 32;\n                break;\n              }\n\n              _iteratorNormalCompletion = true;\n              _didIteratorError = false;\n              _iteratorError = undefined;\n              _context.prev = 5;\n              _iterator = props.translations[Symbol.iterator]();\n\n            case 7:\n              if (_iteratorNormalCompletion = (_step = _iterator.next()).done) {\n                _context.next = 14;\n                break;\n              }\n\n              item = _step.value;\n\n              if (!(item.key === name.toLowerCase())) {\n                _context.next = 11;\n                break;\n              }\n\n              return _context.abrupt(\"return\", item.value);\n\n            case 11:\n              _iteratorNormalCompletion = true;\n              _context.next = 7;\n              break;\n\n            case 14:\n              _context.next = 20;\n              break;\n\n            case 16:\n              _context.prev = 16;\n              _context.t0 = _context[\"catch\"](5);\n              _didIteratorError = true;\n              _iteratorError = _context.t0;\n\n            case 20:\n              _context.prev = 20;\n              _context.prev = 21;\n\n              if (!_iteratorNormalCompletion && _iterator.return != null) {\n                _iterator.return();\n              }\n\n            case 23:\n              _context.prev = 23;\n\n              if (!_didIteratorError) {\n                _context.next = 26;\n                break;\n              }\n\n              throw _iteratorError;\n\n            case 26:\n              return _context.finish(23);\n\n            case 27:\n              return _context.finish(20);\n\n            case 28:\n              props.checkTranslation({\n                key: name.toLowerCase(),\n                value: name,\n                language: SessionStorage.get('lang') || \"am\"\n              });\n              return _context.abrupt(\"return\", name);\n\n            case 32:\n              _context.next = 34;\n              return props.checkTranslation({\n                key: name.toLowerCase(),\n                value: name,\n                language: SessionStorage.get('lang') || \"am\"\n              });\n\n            case 34:\n              return _context.abrupt(\"return\", name);\n\n            case 35:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[5, 16, 20, 28], [21,, 23, 27]]);\n    }));\n\n    return function contentRender(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  return React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, contentRender(props.name));\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return bindActionCreators({\n    setTranslations: setTranslations,\n    checkTranslation: checkTranslation,\n    getTranslations: getTranslations\n  }, dispatch);\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    translations: state.languages.translations,\n    status: state.languages.status\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Translate);","map":{"version":3,"sources":["C:/Users/User/Desktop/barcode/src/Translate.js"],"names":["React","useEffect","connect","bindActionCreators","setTranslations","checkTranslation","getTranslations","SessionStorage","Translate","props","contentRender","name","undefined","translations","length","item","key","toLowerCase","value","language","get","mapDispatchToProps","dispatch","mapStateToProps","state","languages","status"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,kBAAR,QAAiC,OAAjC;AACA,SAAQC,eAAR,EAAyBC,gBAAzB,EAA2CC,eAA3C,QAAiE,sBAAjE;AACA,OAAOC,cAAP,MAA2B,2BAA3B;;AAGA,IAAMC,SAAS,GAAG,SAAZA,SAAY,CAAAC,KAAK,EAAI;AAEvBR,EAAAA,SAAS,CACL,YAAM;AACFQ,IAAAA,KAAK,CAACH,eAAN;AACH,GAHI,EAGF,EAHE,CAAT;;AAOA,MAAMI,aAAa;AAAA;AAAA;AAAA;AAAA;AAAA,6BAAG,iBAAMC,IAAN;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,oBACdA,IAAI,KAAKC,SADK;AAAA;AAAA;AAAA;;AAAA,oBAEVH,KAAK,CAACI,YAAN,CAAmBC,MAAnB,GAA4B,CAFlB;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,0BAGOL,KAAK,CAACI,YAHb;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAGDE,cAAAA,IAHC;;AAAA,oBAIFA,IAAI,CAACC,GAAL,KAAaL,IAAI,CAACM,WAAL,EAJX;AAAA;AAAA;AAAA;;AAAA,+CAKKF,IAAI,CAACG,KALV;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAQVT,cAAAA,KAAK,CAACJ,gBAAN,CAAuB;AAACW,gBAAAA,GAAG,EAAEL,IAAI,CAACM,WAAL,EAAN;AAA0BC,gBAAAA,KAAK,EAAEP,IAAjC;AAAuCQ,gBAAAA,QAAQ,EAAEZ,cAAc,CAACa,GAAf,CAAmB,MAAnB,KAA8B;AAA/E,eAAvB;AARU,+CASHT,IATG;;AAAA;AAAA;AAAA,qBAWJF,KAAK,CAACJ,gBAAN,CAAuB;AAACW,gBAAAA,GAAG,EAAEL,IAAI,CAACM,WAAL,EAAN;AAA0BC,gBAAAA,KAAK,EAAEP,IAAjC;AAAuCQ,gBAAAA,QAAQ,EAAEZ,cAAc,CAACa,GAAf,CAAmB,MAAnB,KAA8B;AAA/E,eAAvB,CAXI;;AAAA;AAAA,+CAYHT,IAZG;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAbD,aAAa;AAAA;AAAA;AAAA,KAAnB;;AAgBA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACSA,aAAa,CAACD,KAAK,CAACE,IAAP,CADtB,CADJ;AAMH,CA/BD;;AAiCA,IAAMU,kBAAkB,GAAG,SAArBA,kBAAqB,CAAAC,QAAQ,EAAI;AACnC,SAAOnB,kBAAkB,CACrB;AACIC,IAAAA,eAAe,EAAfA,eADJ;AAEIC,IAAAA,gBAAgB,EAAhBA,gBAFJ;AAGIC,IAAAA,eAAe,EAAfA;AAHJ,GADqB,EAMrBgB,QANqB,CAAzB;AAQH,CATD;;AAWA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAAAC,KAAK,EAAI;AAC7B,SAAO;AACHX,IAAAA,YAAY,EAAEW,KAAK,CAACC,SAAN,CAAgBZ,YAD3B;AAEHa,IAAAA,MAAM,EAAEF,KAAK,CAACC,SAAN,CAAgBC;AAFrB,GAAP;AAIH,CALD;;AAOA,eAAexB,OAAO,CAACqB,eAAD,EAAkBF,kBAAlB,CAAP,CAA6Cb,SAA7C,CAAf","sourcesContent":["import React, {useEffect} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {bindActionCreators} from \"redux\";\r\nimport {setTranslations, checkTranslation, getTranslations} from './redux/lang/actions'\r\nimport SessionStorage from \"./services/SessionStorage\";\r\n\r\n\r\nconst Translate = props => {\r\n\r\n    useEffect(\r\n        () => {\r\n            props.getTranslations()\r\n        }, []\r\n    )\r\n\r\n\r\n    const contentRender = async name => {\r\n        if (name !== undefined) {\r\n            if (props.translations.length > 0) {\r\n                for (let item of props.translations) {\r\n                    if (item.key === name.toLowerCase()) {\r\n                        return item.value\r\n                    }\r\n                }\r\n                props.checkTranslation({key: name.toLowerCase(), value: name, language: SessionStorage.get('lang') || \"am\"})\r\n                return name;\r\n            } else {\r\n                await props.checkTranslation({key: name.toLowerCase(), value: name, language: SessionStorage.get('lang') || \"am\"})\r\n                return name\r\n            }\r\n        }\r\n    }\r\n    return (\r\n        <span>\r\n                {contentRender(props.name)}\r\n        </span>\r\n    );\r\n\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return bindActionCreators(\r\n        {\r\n            setTranslations,\r\n            checkTranslation,\r\n            getTranslations\r\n        },\r\n        dispatch\r\n    );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        translations: state.languages.translations,\r\n        status: state.languages.status\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Translate);"]},"metadata":{},"sourceType":"module"}