{"ast":null,"code":"import SessionStorage from '../services/SessionStorage'; // import history from \"../history\";\n\nexport var saveSession = function saveSession(key, value) {\n  var withUser = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n  var options = {\n    path: '/',\n    expires: new Date(Date.now())\n  }; // history.push(\"/index\")\n\n  SessionStorage.set(key, value, options);\n};\nexport var getSession = function getSession(key) {\n  var result = SessionStorage.get(key);\n  return result;\n}; //\n// export const saveUserDataSession = (data) => {\n//     const now = new Date();\n//     const time = now.getTime();\n//     const expireTime = time + 1000 * 36000;\n//     now.setTime(expireTime);\n//     const rememberOptions = {\n//         path: '/',\n//         expires: new Date(now * 1000 + (30 * 24 * 3600 * 1000))\n//     };\n//     SessionStorage.set('userData', data, rememberOptions);\n// };\n//\n// export const destroySession = () => {\n//     const options = {\n//         path: '/'\n//     };\n//\n//     SessionStorage.remove('token', options);\n//     SessionStorage.remove('tokenExpiresAt', options);\n//     SessionStorage.remove('refreshToken', options);\n//     SessionStorage.remove('user', options);\n//     SessionStorage.remove('sessionId', options);\n// };\n//\n// export const destroyTokenSession = () => {\n//     const options = {\n//         path: '/'\n//     };\n//     SessionStorage.remove('token', options);\n//     SessionStorage.remove('tokenExpiresAt', options);\n//     SessionStorage.remove('refreshToken', options);\n// };","map":{"version":3,"sources":["C:/Users/User/Desktop/barcode/src/utility/session.js"],"names":["SessionStorage","saveSession","key","value","withUser","options","path","expires","Date","now","set","getSession","result","get"],"mappings":"AAAA,OAAOA,cAAP,MAA2B,4BAA3B,C,CACA;;AAEA,OAAO,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAACC,GAAD,EAAKC,KAAL,EAAgC;AAAA,MAApBC,QAAoB,uEAAT,IAAS;AACvD,MAAMC,OAAO,GAAG;AACZC,IAAAA,IAAI,EAAE,GADM;AAEZC,IAAAA,OAAO,EAAE,IAAIC,IAAJ,CAAUA,IAAI,CAACC,GAAL,EAAV;AAFG,GAAhB,CADuD,CAKvD;;AACAT,EAAAA,cAAc,CAACU,GAAf,CAAmBR,GAAnB,EAAwBC,KAAxB,EAA+BE,OAA/B;AAGH,CATM;AAWP,OAAO,IAAMM,UAAU,GAAG,SAAbA,UAAa,CAACT,GAAD,EAAS;AAC/B,MAAIU,MAAM,GAAGZ,cAAc,CAACa,GAAf,CAAmBX,GAAnB,CAAb;AAEA,SAAOU,MAAP;AACH,CAJM,C,CAKP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import SessionStorage from '../services/SessionStorage';\r\n// import history from \"../history\";\r\n\r\nexport const saveSession = (key,value, withUser = true) => {\r\n    const options = {\r\n        path: '/',\r\n        expires: new Date( Date.now()),\r\n    };\r\n    // history.push(\"/index\")\r\n    SessionStorage.set(key, value, options);\r\n\r\n\r\n};\r\n\r\nexport const getSession = (key) => {\r\n    let result = SessionStorage.get(key);\r\n\r\n    return result;\r\n}\r\n//\r\n// export const saveUserDataSession = (data) => {\r\n//     const now = new Date();\r\n//     const time = now.getTime();\r\n//     const expireTime = time + 1000 * 36000;\r\n//     now.setTime(expireTime);\r\n//     const rememberOptions = {\r\n//         path: '/',\r\n//         expires: new Date(now * 1000 + (30 * 24 * 3600 * 1000))\r\n//     };\r\n//     SessionStorage.set('userData', data, rememberOptions);\r\n// };\r\n//\r\n// export const destroySession = () => {\r\n//     const options = {\r\n//         path: '/'\r\n//     };\r\n//\r\n//     SessionStorage.remove('token', options);\r\n//     SessionStorage.remove('tokenExpiresAt', options);\r\n//     SessionStorage.remove('refreshToken', options);\r\n//     SessionStorage.remove('user', options);\r\n//     SessionStorage.remove('sessionId', options);\r\n// };\r\n//\r\n// export const destroyTokenSession = () => {\r\n//     const options = {\r\n//         path: '/'\r\n//     };\r\n//     SessionStorage.remove('token', options);\r\n//     SessionStorage.remove('tokenExpiresAt', options);\r\n//     SessionStorage.remove('refreshToken', options);\r\n// };\r\n\r\n"]},"metadata":{},"sourceType":"module"}