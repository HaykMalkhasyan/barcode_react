{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\User\\\\Desktop\\\\barcode\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\barcode\\\\src\\\\containers\\\\pages\\\\products\\\\modal\\\\productModal.js\";\nimport React, { useState } from \"react\";\nimport { Button, Col, CustomInput, Form, FormGroup, Input, Label, Modal, ModalBody, ModalFooter, ModalHeader, Row } from \"reactstrap\";\nimport Translate from \"../../../../Translate\";\nimport TabComponent from \"./tab/productTab\";\nimport photo6 from \"../../../../assets/images/empty_product.svg\";\nimport LocalizeTab from \"../../../localize/localizeTab\";\nimport SearchSelectUI from \"../../../../components/selectWithSearchUI/selectWithSearch\";\n\nvar ProductModal = function ProductModal(props) {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 1),\n      img = _useState2[0];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      mainImg = _useState4[0],\n      setMainImg = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      creatProductStatus = _useState6[0],\n      setCreateProductStatus = _useState6[1];\n\n  var onMeasurementHandler = function onMeasurementHandler(name, data) {\n    props.setMeasurementValue(name, data);\n  };\n\n  var createProduct = function createProduct() {\n    var prod = props.product;\n\n    if (prod.sku && prod.name && prod.points && prod.measurement && prod.groups && prod.suppliers && prod.barcode && prod.description) {\n      setCreateProductStatus(false);\n      props.productActions(props.type, props.product);\n    } else {\n      setCreateProductStatus('You have not filled in all the fields');\n    }\n  };\n\n  var setValueHandler = function setValueHandler() {\n    if (props.product.measurement) {\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = props.measurementData[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var item = _step.value;\n\n          if (item.id === props.product.measurement) {\n            return item.name;\n          }\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator.return != null) {\n            _iterator.return();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n    }\n\n    return 'select the unit of measurement';\n  };\n\n  var onPointHandler = function onPointHandler(event) {\n    props.setPointsValue(event.target.name, event.target.value);\n  };\n\n  var mImageRender = function mImageRender() {\n    if (mainImg && props.product.upImages) {\n      var _iteratorNormalCompletion2 = true;\n      var _didIteratorError2 = false;\n      var _iteratorError2 = undefined;\n\n      try {\n        for (var _iterator2 = props.product.upImages[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n          var item = _step2.value;\n\n          if (item === mainImg.name) {\n            return URL.createObjectURL(mainImg);\n          }\n        }\n      } catch (err) {\n        _didIteratorError2 = true;\n        _iteratorError2 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion2 && _iterator2.return != null) {\n            _iterator2.return();\n          }\n        } finally {\n          if (_didIteratorError2) {\n            throw _iteratorError2;\n          }\n        }\n      }\n\n      return photo6;\n    } else {\n      return photo6;\n    }\n  };\n\n  function modalBodyContent() {\n    if (props.type === \"delete\") {\n      return React.createElement(ModalBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, \"\\u0534\\u0578\\u0582\\u0584 \\u0570\\u0561\\u0574\\u0578\\u0566\\u057E\\u0561\\u056E \\u0565\\u055E\\u0584 \\u057B\\u0576\\u057B\\u0565\\u056C\");\n    } else {\n      return React.createElement(ModalBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, React.createElement(Col, {\n        md: \"12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"px-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, React.createElement(Form, {\n        className: \"form-horizontal\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"form-body\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, React.createElement(Col, {\n        md: \"4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        className: \"img-fluid\",\n        src: mainImg ? mImageRender() : photo6,\n        alt: \"Timeline 2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }))), React.createElement(Col, {\n        md: \"8\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, React.createElement(FormGroup, {\n        row: true,\n        className: \"py-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, React.createElement(Label, {\n        sm: 4,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }), React.createElement(Col, {\n        sm: 8,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, React.createElement(LocalizeTab, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }))), React.createElement(FormGroup, {\n        row: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"sku\",\n        sm: 4,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, React.createElement(Translate, {\n        name: \"sku\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      })), React.createElement(Col, {\n        sm: 8,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, React.createElement(Input, {\n        type: \"text\",\n        id: \"sku\",\n        value: props.product.sku ? props.product.sku || '' : '',\n        onChange: function onChange(event) {\n          return props.setModalValues(\"sku\", event.target.value);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }))), React.createElement(FormGroup, {\n        row: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"name\",\n        sm: 4,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }, React.createElement(Translate, {\n        name: \"name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      })), React.createElement(Col, {\n        sm: 8,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }, React.createElement(Input, {\n        type: \"text\",\n        id: \"name\",\n        value: props.product.name ? props.product.name || '' : '',\n        onChange: function onChange(event) {\n          return props.setModalValues(\"name\", event.target.value);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }))), React.createElement(FormGroup, {\n        row: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"points\",\n        sm: 4,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }, React.createElement(Translate, {\n        name: \"points\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      })), React.createElement(Col, {\n        sm: 8,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      }, React.createElement(Input, {\n        type: \"number\",\n        min: 0,\n        id: \"points\",\n        name: \"points\",\n        value: props.product.points ? props.product.points : '',\n        onChange: function onChange(event) {\n          return onPointHandler(event);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }))), React.createElement(FormGroup, {\n        row: true,\n        className: \"justify-content-end\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"measurement\",\n        sm: 4,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        },\n        __self: this\n      }, React.createElement(Translate, {\n        name: \"measurement\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        },\n        __self: this\n      })), React.createElement(Col, {\n        sm: 8,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163\n        },\n        __self: this\n      }, React.createElement(SearchSelectUI, {\n        id: 'measurement',\n        name: 'measurement',\n        label: 'measurement',\n        data: props.measurementData,\n        onClick: onMeasurementHandler,\n        defaultValue: setValueHandler(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166\n        },\n        __self: this\n      }))), React.createElement(FormGroup, {\n        row: true,\n        style: {\n          marginBottom: '14px',\n          justifyContent: 'flex-end'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"active\",\n        sm: 'auto',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179\n        },\n        __self: this\n      }, React.createElement(Translate, {\n        name: \"active\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179\n        },\n        __self: this\n      })), React.createElement(Col, {\n        sm: 'auto',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180\n        },\n        __self: this\n      }, React.createElement(CustomInput, {\n        type: \"checkbox\",\n        id: \"active\",\n        defaultChecked: true,\n        onChange: function onChange(event) {\n          return props.setModalValues(\"active\", props.product.hasOwnProperty('active') ? !props.product.active : false);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181\n        },\n        __self: this\n      }))))), React.createElement(TabComponent, Object.assign({\n        mainIMg: setMainImg\n      }, props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192\n        },\n        __self: this\n      }))))))));\n    }\n  }\n\n  return React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209\n    },\n    __self: this\n  }, React.createElement(Modal, {\n    isOpen: props.modal[props.type],\n    toggle: function toggle() {\n      return props.toggleModal(props.type);\n    },\n    size: \"lg\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210\n    },\n    __self: this\n  }, React.createElement(ModalHeader, {\n    toggle: function toggle() {\n      return props.toggleModal(props.type);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211\n    },\n    __self: this\n  }, React.createElement(Translate, {\n    name: \"addProduct\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211\n    },\n    __self: this\n  })), modalBodyContent(), React.createElement(ModalFooter, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213\n    },\n    __self: this\n  }, creatProductStatus ? React.createElement(\"span\", {\n    className: \"danger font-small-1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216\n    },\n    __self: this\n  }, React.createElement(Translate, {\n    name: creatProductStatus,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217\n    },\n    __self: this\n  })) : null, React.createElement(Button, {\n    color: \"primary\",\n    outline: true,\n    type: \"submit\",\n    onClick: createProduct,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222\n    },\n    __self: this\n  }, React.createElement(Translate, {\n    name: \"confirm\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224\n    },\n    __self: this\n  })))));\n};\n\nexport default ProductModal;","map":{"version":3,"sources":["C:/Users/User/Desktop/barcode/src/containers/pages/products/modal/productModal.js"],"names":["React","useState","Button","Col","CustomInput","Form","FormGroup","Input","Label","Modal","ModalBody","ModalFooter","ModalHeader","Row","Translate","TabComponent","LocalizeTab","SearchSelectUI","ProductModal","props","img","mainImg","setMainImg","creatProductStatus","setCreateProductStatus","onMeasurementHandler","name","data","setMeasurementValue","createProduct","prod","product","sku","points","measurement","groups","suppliers","barcode","description","productActions","type","setValueHandler","measurementData","item","id","onPointHandler","event","setPointsValue","target","value","mImageRender","upImages","URL","createObjectURL","photo6","modalBodyContent","setModalValues","marginBottom","justifyContent","hasOwnProperty","active","modal","toggleModal"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,SACIC,MADJ,EAEIC,GAFJ,EAGIC,WAHJ,EAIIC,IAJJ,EAKIC,SALJ,EAMIC,KANJ,EAOIC,KAPJ,EAQIC,KARJ,EASIC,SATJ,EAUIC,WAVJ,EAWIC,WAXJ,EAYIC,GAZJ,QAaO,YAbP;AAcA,OAAOC,SAAP,MAAsB,uBAAtB;AACA,OAAOC,YAAP,MAAyB,kBAAzB;;AAEA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,cAAP,MAA2B,4DAA3B;;AAEA,IAAMC,YAAY,GAAG,SAAfA,YAAe,CAACC,KAAD,EAAW;AAAA,kBACdlB,QAAQ,CAAC,KAAD,CADM;AAAA;AAAA,MACrBmB,GADqB;;AAAA,mBAEEnB,QAAQ,CAAC,KAAD,CAFV;AAAA;AAAA,MAErBoB,OAFqB;AAAA,MAEZC,UAFY;;AAAA,mBAGyBrB,QAAQ,CAAC,KAAD,CAHjC;AAAA;AAAA,MAGrBsB,kBAHqB;AAAA,MAGDC,sBAHC;;AAK5B,MAAMC,oBAAoB,GAAG,SAAvBA,oBAAuB,CAACC,IAAD,EAAOC,IAAP,EAAgB;AACzCR,IAAAA,KAAK,CAACS,mBAAN,CAA0BF,IAA1B,EAAgCC,IAAhC;AACH,GAFD;;AAIA,MAAME,aAAa,GAAG,SAAhBA,aAAgB,GAAM;AACxB,QAAIC,IAAI,GAAGX,KAAK,CAACY,OAAjB;;AACA,QAAID,IAAI,CAACE,GAAL,IAAYF,IAAI,CAACJ,IAAjB,IAAyBI,IAAI,CAACG,MAA9B,IAAwCH,IAAI,CAACI,WAA7C,IAA4DJ,IAAI,CAACK,MAAjE,IAA2EL,IAAI,CAACM,SAAhF,IAA6FN,IAAI,CAACO,OAAlG,IAA6GP,IAAI,CAACQ,WAAtH,EAAmI;AAC/Hd,MAAAA,sBAAsB,CAAC,KAAD,CAAtB;AACAL,MAAAA,KAAK,CAACoB,cAAN,CAAqBpB,KAAK,CAACqB,IAA3B,EAAiCrB,KAAK,CAACY,OAAvC;AACH,KAHD,MAGO;AACHP,MAAAA,sBAAsB,CAAC,uCAAD,CAAtB;AACH;AACJ,GARD;;AAUA,MAAMiB,eAAe,GAAG,SAAlBA,eAAkB,GAAM;AAC1B,QAAItB,KAAK,CAACY,OAAN,CAAcG,WAAlB,EAA+B;AAAA;AAAA;AAAA;;AAAA;AAC3B,6BAAiBf,KAAK,CAACuB,eAAvB,8HAAwC;AAAA,cAA/BC,IAA+B;;AACpC,cAAIA,IAAI,CAACC,EAAL,KAAYzB,KAAK,CAACY,OAAN,CAAcG,WAA9B,EAA2C;AACvC,mBAAOS,IAAI,CAACjB,IAAZ;AACH;AACJ;AAL0B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAM9B;;AACD,WAAO,gCAAP;AACH,GATD;;AAUA,MAAMmB,cAAc,GAAG,SAAjBA,cAAiB,CAAAC,KAAK,EAAI;AAC5B3B,IAAAA,KAAK,CAAC4B,cAAN,CAAqBD,KAAK,CAACE,MAAN,CAAatB,IAAlC,EAAwCoB,KAAK,CAACE,MAAN,CAAaC,KAArD;AACH,GAFD;;AAIA,MAAMC,YAAY,GAAG,SAAfA,YAAe,GAAM;AACvB,QAAI7B,OAAO,IAAIF,KAAK,CAACY,OAAN,CAAcoB,QAA7B,EAAuC;AAAA;AAAA;AAAA;;AAAA;AACnC,8BAAiBhC,KAAK,CAACY,OAAN,CAAcoB,QAA/B,mIAAyC;AAAA,cAAhCR,IAAgC;;AACrC,cAAIA,IAAI,KAAKtB,OAAO,CAACK,IAArB,EAA2B;AACvB,mBAAO0B,GAAG,CAACC,eAAJ,CAAoBhC,OAApB,CAAP;AACH;AACJ;AALkC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAMnC,aAAOiC,MAAP;AACH,KAPD,MAOO;AACH,aAAOA,MAAP;AACH;AACJ,GAXD;;AAaA,WAASC,gBAAT,GAA4B;AACxB,QAAIpC,KAAK,CAACqB,IAAN,KAAe,QAAnB,EAA6B;AACzB,aACI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uIADJ;AAIH,KALD,MAKO;AACH,aACI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,GAAD;AAAK,QAAA,EAAE,EAAC,IAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,IAAD;AAAM,QAAA,SAAS,EAAC,iBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,GAAD;AAAK,QAAA,EAAE,EAAC,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AACI,QAAA,SAAS,EAAC,WADd;AAEI,QAAA,GAAG,EACCnB,OAAO,GACH6B,YAAY,EADT,GAGHI,MANZ;AAQI,QAAA,GAAG,EAAC,YARR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CADJ,CADJ,EA6BI,oBAAC,GAAD;AAAK,QAAA,EAAE,EAAC,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,SAAD;AAAW,QAAA,GAAG,MAAd;AAAe,QAAA,SAAS,EAAC,MAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,KAAD;AAAO,QAAA,EAAE,EAAE,CAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAEI,oBAAC,GAAD;AAAK,QAAA,EAAE,EAAE,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CAFJ,CADJ,EAQI,oBAAC,SAAD;AAAW,QAAA,GAAG,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,KAAD;AAAO,QAAA,GAAG,EAAC,KAAX;AAAiB,QAAA,EAAE,EAAE,CAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAwB,oBAAC,SAAD;AAAW,QAAA,IAAI,EAAE,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAxB,CADJ,EAEI,oBAAC,GAAD;AAAK,QAAA,EAAE,EAAE,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,KAAD;AACI,QAAA,IAAI,EAAC,MADT;AAEI,QAAA,EAAE,EAAC,KAFP;AAGI,QAAA,KAAK,EAAEnC,KAAK,CAACY,OAAN,CAAcC,GAAd,GAAoBb,KAAK,CAACY,OAAN,CAAcC,GAAd,IAAqB,EAAzC,GAA8C,EAHzD;AAII,QAAA,QAAQ,EAAE,kBAAAc,KAAK;AAAA,iBAAI3B,KAAK,CAACqC,cAAN,CAAqB,KAArB,EAA4BV,KAAK,CAACE,MAAN,CAAaC,KAAzC,CAAJ;AAAA,SAJnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CAFJ,CARJ,EAoBI,oBAAC,SAAD;AAAW,QAAA,GAAG,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,KAAD;AAAO,QAAA,GAAG,EAAC,MAAX;AAAkB,QAAA,EAAE,EAAE,CAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAyB,oBAAC,SAAD;AAAW,QAAA,IAAI,EAAE,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAzB,CADJ,EAEI,oBAAC,GAAD;AAAK,QAAA,EAAE,EAAE,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,KAAD;AACI,QAAA,IAAI,EAAC,MADT;AAEI,QAAA,EAAE,EAAC,MAFP;AAGI,QAAA,KAAK,EAAE9B,KAAK,CAACY,OAAN,CAAcL,IAAd,GAAqBP,KAAK,CAACY,OAAN,CAAcL,IAAd,IAAsB,EAA3C,GAAgD,EAH3D;AAII,QAAA,QAAQ,EAAE,kBAAAoB,KAAK;AAAA,iBAAI3B,KAAK,CAACqC,cAAN,CAAqB,MAArB,EAA6BV,KAAK,CAACE,MAAN,CAAaC,KAA1C,CAAJ;AAAA,SAJnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CAFJ,CApBJ,EAgCI,oBAAC,SAAD;AAAW,QAAA,GAAG,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,KAAD;AAAO,QAAA,GAAG,EAAC,QAAX;AAAoB,QAAA,EAAE,EAAE,CAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA2B,oBAAC,SAAD;AAAW,QAAA,IAAI,EAAE,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAA3B,CADJ,EAEI,oBAAC,GAAD;AAAK,QAAA,EAAE,EAAE,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,KAAD;AACI,QAAA,IAAI,EAAC,QADT;AAEI,QAAA,GAAG,EAAE,CAFT;AAGI,QAAA,EAAE,EAAC,QAHP;AAII,QAAA,IAAI,EAAC,QAJT;AAKI,QAAA,KAAK,EAAE9B,KAAK,CAACY,OAAN,CAAcE,MAAd,GAAuBd,KAAK,CAACY,OAAN,CAAcE,MAArC,GAA8C,EALzD;AAMI,QAAA,QAAQ,EAAE,kBAAAa,KAAK;AAAA,iBAAID,cAAc,CAACC,KAAD,CAAlB;AAAA,SANnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CAFJ,CAhCJ,EA8CI,oBAAC,SAAD;AACI,QAAA,GAAG,MADP;AAEI,QAAA,SAAS,EAAC,qBAFd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAII,oBAAC,KAAD;AAAO,QAAA,GAAG,EAAC,aAAX;AAAyB,QAAA,EAAE,EAAE,CAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAgC,oBAAC,SAAD;AAC5B,QAAA,IAAI,EAAE,aADsB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAhC,CAJJ,EAMI,oBAAC,GAAD;AACI,QAAA,EAAE,EAAE,CADR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAGI,oBAAC,cAAD;AACI,QAAA,EAAE,EAAE,aADR;AAEI,QAAA,IAAI,EAAE,aAFV;AAGI,QAAA,KAAK,EAAE,aAHX;AAII,QAAA,IAAI,EAAE3B,KAAK,CAACuB,eAJhB;AAKI,QAAA,OAAO,EAAEjB,oBALb;AAMI,QAAA,YAAY,EAAEgB,eAAe,EANjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHJ,CANJ,CA9CJ,EAkEI,oBAAC,SAAD;AAAW,QAAA,GAAG,MAAd;AACW,QAAA,KAAK,EAAE;AAACgB,UAAAA,YAAY,EAAE,MAAf;AAAuBC,UAAAA,cAAc,EAAE;AAAvC,SADlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEI,oBAAC,KAAD;AAAO,QAAA,GAAG,EAAC,QAAX;AAAoB,QAAA,EAAE,EAAE,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAgC,oBAAC,SAAD;AAAW,QAAA,IAAI,EAAE,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAhC,CAFJ,EAGI,oBAAC,GAAD;AAAK,QAAA,EAAE,EAAE,MAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,WAAD;AACI,QAAA,IAAI,EAAC,UADT;AAEI,QAAA,EAAE,EAAC,QAFP;AAGI,QAAA,cAAc,MAHlB;AAII,QAAA,QAAQ,EAAE,kBAAAZ,KAAK;AAAA,iBAAI3B,KAAK,CAACqC,cAAN,CAAqB,QAArB,EAA+BrC,KAAK,CAACY,OAAN,CAAc4B,cAAd,CAA6B,QAA7B,IAA0C,CAACxC,KAAK,CAACY,OAAN,CAAc6B,MAAzD,GAAmE,KAAlG,CAAJ;AAAA,SAJnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CAHJ,CAlEJ,CA7BJ,CADJ,EA+GI,oBAAC,YAAD;AAAc,QAAA,OAAO,EAAEtC;AAAvB,SAAuCH,KAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SA/GJ,CADJ,CADJ,CADJ,CADJ,CADJ,CADJ;AAiIH;AAEJ;;AAED,SACI,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,KAAD;AAAO,IAAA,MAAM,EAAEA,KAAK,CAAC0C,KAAN,CAAY1C,KAAK,CAACqB,IAAlB,CAAf;AAAwC,IAAA,MAAM,EAAE;AAAA,aAAMrB,KAAK,CAAC2C,WAAN,CAAkB3C,KAAK,CAACqB,IAAxB,CAAN;AAAA,KAAhD;AAAqF,IAAA,IAAI,EAAC,IAA1F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,WAAD;AAAa,IAAA,MAAM,EAAE;AAAA,aAAMrB,KAAK,CAAC2C,WAAN,CAAkB3C,KAAK,CAACqB,IAAxB,CAAN;AAAA,KAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA0D,oBAAC,SAAD;AAAW,IAAA,IAAI,EAAC,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAA1D,CADJ,EAEKe,gBAAgB,EAFrB,EAGI,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEQhC,kBAAkB,GACd;AAAM,IAAA,SAAS,EAAC,qBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,SAAD;AAAW,IAAA,IAAI,EAAEA,kBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADc,GAKd,IAPZ,EASI,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,SAAd;AAAwB,IAAA,OAAO,MAA/B;AAAgC,IAAA,IAAI,EAAC,QAArC;AACQ,IAAA,OAAO,EAAEM,aADjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEI,oBAAC,SAAD;AAAW,IAAA,IAAI,EAAC,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CATJ,CAHJ,CADJ,CADJ;AAwBH,CAlND;;AAoNA,eAAeX,YAAf","sourcesContent":["import React, {useState} from \"react\";\r\nimport {\r\n    Button,\r\n    Col,\r\n    CustomInput,\r\n    Form,\r\n    FormGroup,\r\n    Input,\r\n    Label,\r\n    Modal,\r\n    ModalBody,\r\n    ModalFooter,\r\n    ModalHeader,\r\n    Row\r\n} from \"reactstrap\";\r\nimport Translate from \"../../../../Translate\";\r\nimport TabComponent from \"./tab/productTab\";\r\nimport photo6 from \"../../../../assets/images/empty_product.svg\";\r\nimport LocalizeTab from \"../../../localize/localizeTab\";\r\nimport SearchSelectUI from \"../../../../components/selectWithSearchUI/selectWithSearch\";\r\n\r\nconst ProductModal = (props) => {\r\n    const [img] = useState(false)\r\n    const [mainImg, setMainImg] = useState(false)\r\n    const [creatProductStatus, setCreateProductStatus] = useState(false)\r\n\r\n    const onMeasurementHandler = (name, data) => {\r\n        props.setMeasurementValue(name, data)\r\n    }\r\n\r\n    const createProduct = () => {\r\n        let prod = props.product;\r\n        if (prod.sku && prod.name && prod.points && prod.measurement && prod.groups && prod.suppliers && prod.barcode && prod.description) {\r\n            setCreateProductStatus(false);\r\n            props.productActions(props.type, props.product)\r\n        } else {\r\n            setCreateProductStatus('You have not filled in all the fields')\r\n        }\r\n    }\r\n\r\n    const setValueHandler = () => {\r\n        if (props.product.measurement) {\r\n            for (let item of props.measurementData) {\r\n                if (item.id === props.product.measurement) {\r\n                    return item.name;\r\n                }\r\n            }\r\n        }\r\n        return 'select the unit of measurement'\r\n    }\r\n    const onPointHandler = event => {\r\n        props.setPointsValue(event.target.name, event.target.value)\r\n    }\r\n\r\n    const mImageRender = () => {\r\n        if (mainImg && props.product.upImages) {\r\n            for (let item of props.product.upImages) {\r\n                if (item === mainImg.name) {\r\n                    return URL.createObjectURL(mainImg)\r\n                }\r\n            }\r\n            return photo6\r\n        } else {\r\n            return photo6\r\n        }\r\n    }\r\n\r\n    function modalBodyContent() {\r\n        if (props.type === \"delete\") {\r\n            return (\r\n                <ModalBody>Դուք համոզված ե՞ք ջնջել</ModalBody>\r\n            )\r\n\r\n        } else {\r\n            return (\r\n                <ModalBody>\r\n                    <Row>\r\n                        <Col md=\"12\">\r\n                            <div className=\"px-3\">\r\n                                <Form className=\"form-horizontal\">\r\n                                    <div className=\"form-body\">\r\n                                        <Row>\r\n                                            <Col md=\"4\">\r\n                                                <FormGroup>\r\n                                                    <img\r\n                                                        className=\"img-fluid\"\r\n                                                        src={\r\n                                                            mainImg ?\r\n                                                                mImageRender()\r\n                                                                :\r\n                                                                photo6\r\n                                                        }\r\n                                                        alt=\"Timeline 2\"\r\n                                                    />\r\n                                                    {/*<CustomInput*/}\r\n                                                    {/*    type=\"file\"*/}\r\n                                                    {/*    id=\"images\"*/}\r\n                                                    {/*    className=\"form-control-file\"*/}\r\n                                                    {/*    value={props.product.images ? props.product.images || '' : ''}*/}\r\n                                                    {/*    multiple=\"multiple\"*/}\r\n                                                    {/*    onChange={event => {*/}\r\n                                                    {/*        setImg(event.target.files[0])*/}\r\n                                                    {/*        props.uploadImages(\"products\", event);*/}\r\n                                                    {/*        props.setModalValues(\"images\", event.target.value)*/}\r\n                                                    {/*    }}*/}\r\n                                                    {/*/>*/}\r\n\r\n\r\n                                                </FormGroup>\r\n                                            </Col>\r\n                                            <Col md=\"8\">\r\n                                                <FormGroup row className=\"py-3\">\r\n                                                    <Label sm={4}></Label>\r\n                                                    <Col sm={8}>\r\n                                                        <LocalizeTab/>\r\n                                                    </Col>\r\n                                                </FormGroup>\r\n\r\n                                                <FormGroup row>\r\n                                                    <Label for=\"sku\" sm={4}><Translate name={\"sku\"}/></Label>\r\n                                                    <Col sm={8}>\r\n                                                        <Input\r\n                                                            type=\"text\"\r\n                                                            id=\"sku\"\r\n                                                            value={props.product.sku ? props.product.sku || '' : ''}\r\n                                                            onChange={event => props.setModalValues(\"sku\", event.target.value)}\r\n                                                        />\r\n                                                    </Col>\r\n                                                </FormGroup>\r\n\r\n                                                <FormGroup row>\r\n                                                    <Label for=\"name\" sm={4}><Translate name={\"name\"}/></Label>\r\n                                                    <Col sm={8}>\r\n                                                        <Input\r\n                                                            type=\"text\"\r\n                                                            id=\"name\"\r\n                                                            value={props.product.name ? props.product.name || '' : ''}\r\n                                                            onChange={event => props.setModalValues(\"name\", event.target.value)}\r\n                                                        />\r\n                                                    </Col>\r\n                                                </FormGroup>\r\n\r\n                                                <FormGroup row>\r\n                                                    <Label for=\"points\" sm={4}><Translate name={\"points\"}/></Label>\r\n                                                    <Col sm={8}>\r\n                                                        <Input\r\n                                                            type=\"number\"\r\n                                                            min={0}\r\n                                                            id=\"points\"\r\n                                                            name=\"points\"\r\n                                                            value={props.product.points ? props.product.points : ''}\r\n                                                            onChange={event => onPointHandler(event)}\r\n                                                        />\r\n                                                    </Col>\r\n                                                </FormGroup>\r\n\r\n                                                <FormGroup\r\n                                                    row\r\n                                                    className=\"justify-content-end\"\r\n                                                >\r\n                                                    <Label for=\"measurement\" sm={4}><Translate\r\n                                                        name={\"measurement\"}/></Label>\r\n                                                    <Col\r\n                                                        sm={8}\r\n                                                    >\r\n                                                        <SearchSelectUI\r\n                                                            id={'measurement'}\r\n                                                            name={'measurement'}\r\n                                                            label={'measurement'}\r\n                                                            data={props.measurementData}\r\n                                                            onClick={onMeasurementHandler}\r\n                                                            defaultValue={setValueHandler()}\r\n                                                        />\r\n                                                    </Col>\r\n                                                </FormGroup>\r\n\r\n                                                <FormGroup row\r\n                                                           style={{marginBottom: '14px', justifyContent: 'flex-end'}}>\r\n                                                    <Label for=\"active\" sm={'auto'}><Translate name={\"active\"}/></Label>\r\n                                                    <Col sm={'auto'}>\r\n                                                        <CustomInput\r\n                                                            type=\"checkbox\"\r\n                                                            id=\"active\"\r\n                                                            defaultChecked\r\n                                                            onChange={event => props.setModalValues(\"active\", props.product.hasOwnProperty('active') ? (!props.product.active) : false)}\r\n                                                        />\r\n                                                    </Col>\r\n                                                </FormGroup>\r\n                                            </Col>\r\n\r\n                                        </Row>\r\n                                        <TabComponent mainIMg={setMainImg} {...props}/>\r\n                                    </div>\r\n                                </Form>\r\n                            </div>\r\n                        </Col>\r\n\r\n                    </Row>\r\n\r\n\r\n                </ModalBody>\r\n            )\r\n\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Modal isOpen={props.modal[props.type]} toggle={() => props.toggleModal(props.type)} size=\"lg\">\r\n                <ModalHeader toggle={() => props.toggleModal(props.type)}><Translate name=\"addProduct\"/></ModalHeader>\r\n                {modalBodyContent()}\r\n                <ModalFooter>\r\n                    {\r\n                        creatProductStatus ?\r\n                            <span className='danger font-small-1'>\r\n                                <Translate name={creatProductStatus}/>\r\n                            </span>\r\n                            :\r\n                            null\r\n                    }\r\n                    <Button color=\"primary\" outline type=\"submit\"\r\n                            onClick={createProduct}>\r\n                        <Translate name=\"confirm\"/>\r\n                    </Button>\r\n                </ModalFooter>\r\n            </Modal>\r\n\r\n        </React.Fragment>\r\n    );\r\n\r\n};\r\n\r\nexport default ProductModal;"]},"metadata":{},"sourceType":"module"}