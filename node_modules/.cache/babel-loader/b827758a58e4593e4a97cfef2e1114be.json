{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\User\\\\Desktop\\\\barcode\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport { GET_PRODUCTS_REQUEST, GET_PRODUCTS_FAIL, GET_PRODUCTS_SUCCESS, GET_PRODUCT_REQUEST, GET_PRODUCT_FAIL, GET_PRODUCT_SUCCESS, ADD_PRODUCT_REQUEST, ADD_PRODUCT_FAIL, ADD_PRODUCT_SUCCESS, EDIT_PRODUCT_REQUEST, EDIT_PRODUCT_FAIL, EDIT_PRODUCT_SUCCESS, DELETE_PRODUCT_REQUEST, DELETE_PRODUCT_FAIL, DELETE_PRODUCT_SUCCESS, GET_BARCODE_TYPES_REQUEST, GET_BARCODE_TYPES_FAIL, GET_BARCODE_TYPES_SUCCESS, ADD_BARCODE, DELETE_BARCODE, SET_PRODUCT_MODAL, TOGGLE_PRODUCT_MODAL, SET_BARCODE, ADD_MEASUREMENT_VALUE, ADD_POINTS_VALUE, ADD_UPLOAD_IMAGES, ADD_VALUE, ADD_RESULT, SEARCH_ERROR, SELECT_GROUP, SELECT_ID_IN_ARRAY, CLASSIFIERS_TOGGLE_MODAL, CREATE_CLASSIFIERS_ERROR, CREATE_CLASSIFIERS_SUCCESS } from \"./actionTypes\";\nimport { Pushend\n/*IsRequiredFields,*/\n, Remove } from \"../../utility/utils\";\nvar INIT_STATE = {\n  products: [],\n  product: {},\n  barcodeTypes: [],\n  modal: {},\n  loading: false,\n  success: false,\n  fail: false,\n  errors: {},\n  types: [{\n    id: 0,\n    name: 'EAN-13'\n  }, {\n    id: 1,\n    name: 'EAN-8'\n  }, {\n    id: 2,\n    name: \"EAN-5\"\n  }, {\n    id: 3,\n    name: \"CODE128\"\n  }],\n  measurementData: [{\n    id: 1,\n    name: 'kilograms'\n  }, {\n    id: 2,\n    name: 'kilometers'\n  }, {\n    id: 3,\n    name: 'cubic meter'\n  }, {\n    id: 4,\n    name: 'square meter'\n  }, {\n    id: 5,\n    name: 'grams'\n  }, {\n    id: 6,\n    name: 'milligrams'\n  }, {\n    id: 7,\n    name: 'liters'\n  }],\n  searchProduct: {\n    sku: '',\n    name: '',\n    suppliers: '',\n    barcode: '',\n    description: '',\n    active: ''\n  },\n  searchProductResult: [],\n  searchErrorName: null,\n  group: null,\n  elemsIdInArray: null,\n  classifiersModal: false,\n  advancedSearchConfig: {\n    image: false,\n    hasActive: false,\n    hasSuppliers: false\n  },\n  createError: false\n};\nexport default (function () {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : INIT_STATE;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case CREATE_CLASSIFIERS_ERROR:\n      return _objectSpread({}, state, {\n        createError: true\n      });\n\n    case CREATE_CLASSIFIERS_SUCCESS:\n      return _objectSpread({}, state, {\n        advancedSearchConfig: action.data,\n        createError: false,\n        classifiersModal: false,\n        group: null,\n        elemsIdInArray: null\n      });\n\n    case CLASSIFIERS_TOGGLE_MODAL:\n      delete state.advancedSearchConfig.classifiers;\n      return _objectSpread({}, state, {\n        classifiersModal: !state.classifiersModal,\n        createError: false,\n        group: null,\n        elemsIdInArray: null\n      });\n\n    case SELECT_ID_IN_ARRAY:\n      return _objectSpread({}, state, {\n        elemsIdInArray: action.elemsIdInArray\n      });\n\n    case SELECT_GROUP:\n      return _objectSpread({}, state, {\n        group: action.group\n      });\n\n    case SEARCH_ERROR:\n      return _objectSpread({}, state, {\n        searchErrorName: action.name\n      });\n\n    case ADD_RESULT:\n      return _objectSpread({}, state, {\n        searchProductResult: action.result,\n        searchErrorName: action.result.length > 0 ? null : state.searchErrorName\n      });\n\n    case ADD_VALUE:\n      return _objectSpread({}, state, {\n        searchProduct: action.data\n      });\n\n    case ADD_UPLOAD_IMAGES:\n      return _objectSpread({}, state, {\n        product: action.product\n      });\n\n    case ADD_POINTS_VALUE:\n      return _objectSpread({}, state, {\n        product: action.data\n      });\n\n    case ADD_MEASUREMENT_VALUE:\n      return _objectSpread({}, state, {\n        product: action.product\n      });\n\n    case SET_BARCODE:\n      return _objectSpread({}, state, {\n        product: action.product\n      });\n\n    case GET_PRODUCTS_REQUEST:\n      return _objectSpread({}, state, {\n        loading: true,\n        success: false,\n        fail: false,\n        errors: {}\n      });\n\n    case GET_PRODUCTS_FAIL:\n      return _objectSpread({}, state, {\n        loading: false,\n        success: false,\n        fail: true\n      });\n\n    case GET_PRODUCTS_SUCCESS:\n      return _objectSpread({}, state, {\n        loading: false,\n        success: true,\n        fail: false,\n        products: action.result.results,\n        errors: {}\n      });\n\n    case GET_PRODUCT_REQUEST:\n      return _objectSpread({}, state, {\n        loading: true,\n        success: false,\n        fail: false,\n        errors: {}\n      });\n\n    case GET_PRODUCT_FAIL:\n      return _objectSpread({}, state, {\n        loading: false,\n        success: false,\n        fail: true\n      });\n\n    case GET_PRODUCT_SUCCESS:\n      return _objectSpread({}, state, {\n        loading: false,\n        success: true,\n        fail: false,\n        product: action.result,\n        errors: {}\n      });\n\n    case GET_BARCODE_TYPES_REQUEST:\n      return _objectSpread({}, state, {\n        loading: true,\n        success: false,\n        fail: false,\n        errors: {}\n      });\n\n    case GET_BARCODE_TYPES_FAIL:\n      return _objectSpread({}, state, {\n        loading: false,\n        success: false,\n        fail: true\n      });\n\n    case GET_BARCODE_TYPES_SUCCESS:\n      return _objectSpread({}, state, {\n        loading: false,\n        success: true,\n        fail: false,\n        barcodeTypes: action.result.results,\n        errors: {}\n      });\n\n    case ADD_PRODUCT_REQUEST:\n      return _objectSpread({}, state, {\n        loading: true,\n        success: false,\n        fail: false\n      });\n\n    case ADD_PRODUCT_FAIL:\n      return _objectSpread({}, state, {\n        loading: false,\n        success: false,\n        fail: true\n      });\n\n    case ADD_PRODUCT_SUCCESS:\n      return _objectSpread({}, state, {\n        loading: false,\n        success: true,\n        fail: false,\n        modal: false,\n        products: Pushend(state.products, action.result),\n        product: {}\n      });\n\n    case EDIT_PRODUCT_REQUEST:\n      return _objectSpread({}, state, {\n        loading: true,\n        success: false,\n        fail: false\n      });\n\n    case EDIT_PRODUCT_FAIL:\n      return _objectSpread({}, state, {\n        loading: false,\n        success: false,\n        fail: true\n      });\n\n    case EDIT_PRODUCT_SUCCESS:\n      return _objectSpread({}, state, {\n        loading: false,\n        success: true,\n        fail: false,\n        modal: false,\n        product: {},\n        products: JSON.parse(action.result.data)\n      });\n\n    case DELETE_PRODUCT_REQUEST:\n      return _objectSpread({}, state, {\n        loading: true,\n        success: false,\n        fail: false\n      });\n\n    case DELETE_PRODUCT_FAIL:\n      return _objectSpread({}, state, {\n        loading: false,\n        success: false,\n        fail: true\n      });\n\n    case DELETE_PRODUCT_SUCCESS:\n      return _objectSpread({}, state, {\n        loading: false,\n        success: true,\n        fail: false,\n        modal: false,\n        product: {},\n        products: Remove(state.products, action.data, 'id')\n      });\n\n    case SET_PRODUCT_MODAL:\n      state.product[action.key] = action.value;\n      return _objectSpread({}, state);\n\n    case ADD_BARCODE:\n      if (!state.product.barcode) {\n        state.product.barcode = [];\n      }\n\n      state.product.barcode.push(_objectSpread({}, action.code));\n      return _objectSpread({}, state);\n\n    case DELETE_BARCODE:\n      state.product.barcode = Remove(state.product.barcode, {\n        barcode: action.code\n      }, 'barcode');\n      return _objectSpread({}, state);\n\n    case TOGGLE_PRODUCT_MODAL:\n      var newModal = {};\n      newModal[action.modalType] = !state.modal[action.modalType];\n      var product = action.modalType === \"edit\" ? _objectSpread({}, state.product, action.obj) : _objectSpread({}, action.obj);\n      return _objectSpread({}, state, {\n        modal: _objectSpread({}, state.modal, newModal),\n        product: product\n      });\n\n    default:\n      return _objectSpread({}, state);\n  }\n});","map":{"version":3,"sources":["C:/Users/User/Desktop/barcode/src/redux/products/reducer.js"],"names":["GET_PRODUCTS_REQUEST","GET_PRODUCTS_FAIL","GET_PRODUCTS_SUCCESS","GET_PRODUCT_REQUEST","GET_PRODUCT_FAIL","GET_PRODUCT_SUCCESS","ADD_PRODUCT_REQUEST","ADD_PRODUCT_FAIL","ADD_PRODUCT_SUCCESS","EDIT_PRODUCT_REQUEST","EDIT_PRODUCT_FAIL","EDIT_PRODUCT_SUCCESS","DELETE_PRODUCT_REQUEST","DELETE_PRODUCT_FAIL","DELETE_PRODUCT_SUCCESS","GET_BARCODE_TYPES_REQUEST","GET_BARCODE_TYPES_FAIL","GET_BARCODE_TYPES_SUCCESS","ADD_BARCODE","DELETE_BARCODE","SET_PRODUCT_MODAL","TOGGLE_PRODUCT_MODAL","SET_BARCODE","ADD_MEASUREMENT_VALUE","ADD_POINTS_VALUE","ADD_UPLOAD_IMAGES","ADD_VALUE","ADD_RESULT","SEARCH_ERROR","SELECT_GROUP","SELECT_ID_IN_ARRAY","CLASSIFIERS_TOGGLE_MODAL","CREATE_CLASSIFIERS_ERROR","CREATE_CLASSIFIERS_SUCCESS","Pushend","Remove","INIT_STATE","products","product","barcodeTypes","modal","loading","success","fail","errors","types","id","name","measurementData","searchProduct","sku","suppliers","barcode","description","active","searchProductResult","searchErrorName","group","elemsIdInArray","classifiersModal","advancedSearchConfig","image","hasActive","hasSuppliers","createError","state","action","type","data","classifiers","result","length","results","JSON","parse","key","value","push","code","newModal","modalType","obj"],"mappings":"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","sourcesContent":["import {\r\n    GET_PRODUCTS_REQUEST,\r\n    GET_PRODUCTS_FAIL,\r\n    GET_PRODUCTS_SUCCESS,\r\n    GET_PRODUCT_REQUEST,\r\n    GET_PRODUCT_FAIL,\r\n    GET_PRODUCT_SUCCESS,\r\n    ADD_PRODUCT_REQUEST,\r\n    ADD_PRODUCT_FAIL,\r\n    ADD_PRODUCT_SUCCESS,\r\n    EDIT_PRODUCT_REQUEST,\r\n    EDIT_PRODUCT_FAIL,\r\n    EDIT_PRODUCT_SUCCESS,\r\n    DELETE_PRODUCT_REQUEST,\r\n    DELETE_PRODUCT_FAIL,\r\n    DELETE_PRODUCT_SUCCESS,\r\n    GET_BARCODE_TYPES_REQUEST,\r\n    GET_BARCODE_TYPES_FAIL,\r\n    GET_BARCODE_TYPES_SUCCESS,\r\n    ADD_BARCODE,\r\n    DELETE_BARCODE,\r\n    SET_PRODUCT_MODAL,\r\n    TOGGLE_PRODUCT_MODAL,\r\n    SET_BARCODE,\r\n    ADD_MEASUREMENT_VALUE,\r\n    ADD_POINTS_VALUE,\r\n    ADD_UPLOAD_IMAGES,\r\n    ADD_VALUE,\r\n    ADD_RESULT,\r\n    SEARCH_ERROR,\r\n    SELECT_GROUP,\r\n    SELECT_ID_IN_ARRAY,\r\n    CLASSIFIERS_TOGGLE_MODAL,\r\n    CREATE_CLASSIFIERS_ERROR, CREATE_CLASSIFIERS_SUCCESS\r\n} from \"./actionTypes\";\r\nimport {Pushend,/*IsRequiredFields,*/Remove} from \"../../utility/utils\";\r\n\r\n\r\nconst INIT_STATE = {\r\n    products: [],\r\n    product: {},\r\n    barcodeTypes: [],\r\n    modal: {},\r\n    loading: false,\r\n    success: false,\r\n    fail: false,\r\n    errors: {},\r\n    types: [\r\n        {id: 0, name: 'EAN-13'},\r\n        {id: 1, name: 'EAN-8'},\r\n        {id: 2, name: \"EAN-5\"},\r\n        {id: 3, name: \"CODE128\"},\r\n    ],\r\n    measurementData: [\r\n        {id: 1, name: 'kilograms'},\r\n        {id: 2, name: 'kilometers'},\r\n        {id: 3, name: 'cubic meter'},\r\n        {id: 4, name: 'square meter'},\r\n        {id: 5, name: 'grams'},\r\n        {id: 6, name: 'milligrams'},\r\n        {id: 7, name: 'liters'},\r\n    ],\r\n    searchProduct: {\r\n        sku: '',\r\n        name: '',\r\n        suppliers: '',\r\n        barcode: '',\r\n        description: '',\r\n        active: ''\r\n    },\r\n    searchProductResult: [],\r\n    searchErrorName: null,\r\n    group: null,\r\n    elemsIdInArray: null,\r\n    classifiersModal: false,\r\n    advancedSearchConfig: {\r\n        image: false,\r\n        hasActive: false,\r\n        hasSuppliers: false\r\n    },\r\n    createError: false,\r\n};\r\n\r\nexport default (state = INIT_STATE, action) => {\r\n\r\n    switch (action.type) {\r\n        case CREATE_CLASSIFIERS_ERROR:\r\n            return {\r\n                ...state,\r\n                createError: true\r\n            }\r\n        case CREATE_CLASSIFIERS_SUCCESS:\r\n            return {\r\n                ...state,\r\n                advancedSearchConfig: action.data,\r\n                createError: false,\r\n                classifiersModal: false,\r\n                group: null,\r\n                elemsIdInArray: null\r\n            }\r\n        case CLASSIFIERS_TOGGLE_MODAL:\r\n            delete state.advancedSearchConfig.classifiers;\r\n            return {\r\n                ...state,\r\n                classifiersModal: !state.classifiersModal,\r\n                createError: false,\r\n                group: null,\r\n                elemsIdInArray: null,\r\n            }\r\n        case SELECT_ID_IN_ARRAY:\r\n            return {\r\n                ...state,\r\n                elemsIdInArray: action.elemsIdInArray\r\n            }\r\n        case SELECT_GROUP:\r\n            return {\r\n                ...state,\r\n                group: action.group,\r\n            }\r\n        case SEARCH_ERROR:\r\n            return {\r\n                ...state,\r\n                searchErrorName: action.name\r\n            }\r\n        case ADD_RESULT:\r\n            return {\r\n                ...state,\r\n                searchProductResult: action.result,\r\n                searchErrorName: action.result.length > 0 ? null : state.searchErrorName\r\n            }\r\n        case ADD_VALUE:\r\n            return {\r\n                ...state,\r\n                searchProduct: action.data,\r\n            }\r\n        case ADD_UPLOAD_IMAGES:\r\n            return {\r\n                ...state,\r\n                product: action.product\r\n            }\r\n        case ADD_POINTS_VALUE:\r\n            return {\r\n                ...state,\r\n                product: action.data\r\n            }\r\n        case ADD_MEASUREMENT_VALUE:\r\n            return {\r\n                ...state,\r\n                product: action.product\r\n            }\r\n        case SET_BARCODE:\r\n            return {\r\n                ...state,\r\n                product: action.product\r\n            }\r\n        case GET_PRODUCTS_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n                success: false,\r\n                fail: false,\r\n                errors: {},\r\n            };\r\n        case GET_PRODUCTS_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: false,\r\n                fail: true,\r\n            };\r\n        case GET_PRODUCTS_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: true,\r\n                fail: false,\r\n                products: action.result.results,\r\n                errors: {},\r\n            };\r\n        case GET_PRODUCT_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n                success: false,\r\n                fail: false,\r\n                errors: {},\r\n            };\r\n        case GET_PRODUCT_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: false,\r\n                fail: true,\r\n            };\r\n        case GET_PRODUCT_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: true,\r\n                fail: false,\r\n                product: action.result,\r\n                errors: {},\r\n            };\r\n        case GET_BARCODE_TYPES_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n                success: false,\r\n                fail: false,\r\n                errors: {},\r\n            };\r\n        case GET_BARCODE_TYPES_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: false,\r\n                fail: true,\r\n            };\r\n        case GET_BARCODE_TYPES_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: true,\r\n                fail: false,\r\n                barcodeTypes: action.result.results,\r\n                errors: {},\r\n            };\r\n        case ADD_PRODUCT_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n                success: false,\r\n                fail: false,\r\n            }\r\n        case ADD_PRODUCT_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: false,\r\n                fail: true,\r\n\r\n            };\r\n        case ADD_PRODUCT_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: true,\r\n                fail: false,\r\n                modal: false,\r\n                products: Pushend(state.products, action.result),\r\n                product: {}\r\n            };\r\n        case EDIT_PRODUCT_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n                success: false,\r\n                fail: false,\r\n            }\r\n        case EDIT_PRODUCT_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: false,\r\n                fail: true,\r\n\r\n            };\r\n        case EDIT_PRODUCT_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: true,\r\n                fail: false,\r\n                modal: false,\r\n                product: {},\r\n                products: JSON.parse(action.result.data)\r\n            };\r\n        case DELETE_PRODUCT_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n                success: false,\r\n                fail: false,\r\n            }\r\n        case DELETE_PRODUCT_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: false,\r\n                fail: true,\r\n\r\n            };\r\n        case DELETE_PRODUCT_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: true,\r\n                fail: false,\r\n                modal: false,\r\n                product: {},\r\n                products: Remove(state.products, action.data, 'id')\r\n            };\r\n        case SET_PRODUCT_MODAL:\r\n            state.product[action.key] = action.value\r\n            return {\r\n                ...state,\r\n            }\r\n        case ADD_BARCODE:\r\n            if(!state.product.barcode){\r\n                state.product.barcode=[];\r\n            }\r\n            state.product.barcode.push({...action.code})\r\n            return {\r\n                ...state,\r\n            }\r\n        case DELETE_BARCODE:\r\n            state.product.barcode=Remove(state.product.barcode,{barcode:action.code},'barcode')\r\n            return {\r\n                ...state,\r\n            }\r\n        case TOGGLE_PRODUCT_MODAL:\r\n            let newModal = {};\r\n            newModal[action.modalType] = !state.modal[action.modalType];\r\n            let product = (action.modalType===\"edit\")?{\r\n                ...state.product,\r\n                ...action.obj\r\n            }:{\r\n                ...action.obj\r\n            }\r\n            return {\r\n                ...state,\r\n                modal: {\r\n                    ...state.modal,\r\n                    ...newModal\r\n                },\r\n                product\r\n            }\r\n        default:\r\n            return {...state};\r\n    }\r\n};\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}