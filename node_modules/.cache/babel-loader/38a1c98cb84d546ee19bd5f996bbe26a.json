{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\User\\\\Desktop\\\\barcode\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport { saveSession, getSession, destroySession } from \"../../utility/session\";\nimport { LOGIN_EMPTY, LOGIN_REQUEST, LOGIN_REQUEST_FAIL, LOGIN_REQUEST_SUCCESS, LOGOUT_REQUEST, LOGOUT_REQUEST_FAIL, LOGOUT_REQUEST_SUCCESS, PASSWORD_EMPTY } from \"./actionTypes\";\nimport { DELETE_USER_SUCCESS } from \"../users/actionTypes\";\nimport SessionStorage from \"../../services/SessionStorage\";\nvar INIT_STATE = {\n  user: getSession('user'),\n  acces_token: getSession('access'),\n  refresh_token: getSession('refresh'),\n  loading: false,\n  success: false,\n  fail: false,\n  errors: {},\n  authError: false,\n  emptyLogin: null,\n  emptyPassword: null\n};\nexport default (function () {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : INIT_STATE;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case LOGIN_EMPTY:\n      return _objectSpread({}, state, {\n        emptyLogin: action.status\n      });\n\n    case PASSWORD_EMPTY:\n      return _objectSpread({}, state, {\n        emptyPassword: action.status\n      });\n\n    case LOGIN_REQUEST:\n      return _objectSpread({}, state, {\n        loading: true,\n        success: false,\n        fail: false,\n        errors: {}\n      });\n\n    case LOGIN_REQUEST_FAIL:\n      return _objectSpread({}, state, {\n        loading: false,\n        success: false,\n        fail: true,\n        authError: true\n      });\n\n    case LOGIN_REQUEST_SUCCESS:\n      var data = action.result;\n      saveSession('auth', data);\n      return _objectSpread({}, state, {\n        authError: false,\n        emptyLogin: null,\n        emptyPassword: null,\n        loading: false,\n        success: true,\n        fail: false,\n        user: data.user,\n        access_token: data.access,\n        access_refresh_token: data.refresh,\n        errors: {}\n      });\n\n    case LOGOUT_REQUEST:\n      return _objectSpread({}, state, {\n        logout: _objectSpread({}, state.logout, {\n          loading: true,\n          success: false,\n          fail: false\n        })\n      });\n\n    case LOGOUT_REQUEST_SUCCESS:\n      destroySession();\n      return _objectSpread({}, state, {\n        logout: _objectSpread({}, state.logout, {\n          loading: false,\n          success: true,\n          fail: false\n        }),\n        user: null,\n        access_token: null,\n        refresh_token: null\n      });\n\n    case DELETE_USER_SUCCESS:\n      var getUser = SessionStorage.get('user');\n      console.log(getUser);\n\n      if (getUser.user_id === action.result.id && getUser.firstname === action.result.first_name && getUser.lastname === action.result.last_name) {\n        console.log(getUser);\n        destroySession();\n        return _objectSpread({}, state, {\n          logout: _objectSpread({}, state.logout, {\n            loading: false,\n            success: true,\n            fail: false\n          }),\n          user: null,\n          access_token: null,\n          refresh_token: null\n        });\n      } else {\n        return true;\n      }\n\n    case LOGOUT_REQUEST_FAIL:\n      return _objectSpread({}, state, {\n        logout: _objectSpread({}, state.logout, {\n          loading: false,\n          success: false,\n          fail: true\n        })\n      });\n\n    default:\n      return _objectSpread({}, state);\n  }\n});","map":{"version":3,"sources":["C:/Users/User/Desktop/barcode/src/redux/auth/reducer.js"],"names":["saveSession","getSession","destroySession","LOGIN_EMPTY","LOGIN_REQUEST","LOGIN_REQUEST_FAIL","LOGIN_REQUEST_SUCCESS","LOGOUT_REQUEST","LOGOUT_REQUEST_FAIL","LOGOUT_REQUEST_SUCCESS","PASSWORD_EMPTY","DELETE_USER_SUCCESS","SessionStorage","INIT_STATE","user","acces_token","refresh_token","loading","success","fail","errors","authError","emptyLogin","emptyPassword","state","action","type","status","data","result","access_token","access","access_refresh_token","refresh","logout","getUser","get","console","log","user_id","id","firstname","first_name","lastname","last_name"],"mappings":"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","sourcesContent":["import { saveSession,getSession,destroySession } from \"../../utility/session\";\r\n\r\nimport {\r\n    LOGIN_EMPTY,\r\n    LOGIN_REQUEST,\r\n    LOGIN_REQUEST_FAIL,\r\n    LOGIN_REQUEST_SUCCESS,\r\n    LOGOUT_REQUEST,\r\n    LOGOUT_REQUEST_FAIL,\r\n    LOGOUT_REQUEST_SUCCESS, PASSWORD_EMPTY\r\n} from \"./actionTypes\";\r\nimport {DELETE_USER_SUCCESS} from \"../users/actionTypes\";\r\nimport SessionStorage from \"../../services/SessionStorage\";\r\n\r\n\r\nconst INIT_STATE = {\r\n    user: getSession('user'),\r\n    acces_token: getSession('access'),\r\n    refresh_token: getSession('refresh'),\r\n    loading: false,\r\n    success: false,\r\n    fail: false,\r\n    errors: {},\r\n    authError: false,\r\n    emptyLogin: null,\r\n    emptyPassword: null\r\n};\r\n\r\nexport default (state = INIT_STATE, action) => {\r\n    switch (action.type) {\r\n        case LOGIN_EMPTY:\r\n            return {\r\n                ...state, emptyLogin: action.status\r\n            }\r\n        case PASSWORD_EMPTY:\r\n            return {\r\n                ...state, emptyPassword: action.status\r\n            }\r\n        case LOGIN_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n                success: false,\r\n                fail: false,\r\n                errors: {},\r\n            };\r\n        case LOGIN_REQUEST_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: false,\r\n                fail: true,\r\n                authError: true\r\n            };\r\n        case LOGIN_REQUEST_SUCCESS:\r\n            let data = action.result\r\n            saveSession('auth',data);\r\n            return {\r\n                ...state,\r\n                authError: false,\r\n                emptyLogin: null,\r\n                emptyPassword: null,\r\n                loading: false,\r\n                success: true,\r\n                fail: false,\r\n                user: data.user,\r\n                access_token: data.access,\r\n                access_refresh_token: data.refresh,\r\n                errors: {},\r\n            };\r\n        case LOGOUT_REQUEST:\r\n            return {\r\n                ...state,\r\n                logout: {\r\n                    ...state.logout,\r\n                    loading: true,\r\n                    success: false,\r\n                    fail: false,\r\n                }\r\n            };\r\n        case LOGOUT_REQUEST_SUCCESS:\r\n            destroySession();\r\n            return {\r\n                ...state,\r\n                logout: {\r\n                    ...state.logout,\r\n                    loading: false,\r\n                    success: true,\r\n                    fail: false,\r\n                },\r\n                user: null,\r\n                access_token: null,\r\n                refresh_token: null\r\n            };\r\n        case DELETE_USER_SUCCESS:\r\n            let getUser = SessionStorage.get('user');\r\n            console.log(getUser);\r\n            if (getUser.user_id === action.result.id && getUser.firstname === action.result.first_name && getUser.lastname === action.result.last_name) {\r\n                console.log(getUser);\r\n                destroySession();\r\n                return {\r\n                    ...state,\r\n                    logout: {\r\n                        ...state.logout,\r\n                        loading: false,\r\n                        success: true,\r\n                        fail: false,\r\n                    },\r\n                    user: null,\r\n                    access_token: null,\r\n                    refresh_token: null\r\n                }\r\n            } else {\r\n                return true;\r\n            }\r\n        case LOGOUT_REQUEST_FAIL:\r\n            return {\r\n                ...state,\r\n                logout: {\r\n                    ...state.logout,\r\n                    loading: false,\r\n                    success: false,\r\n                    fail: true,\r\n                },\r\n            };\r\n\r\n        default:\r\n            return {...state};\r\n    }\r\n};\r\n\r\n"]},"metadata":{},"sourceType":"module"}