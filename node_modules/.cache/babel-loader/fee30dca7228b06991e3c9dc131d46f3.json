{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\User\\\\Desktop\\\\barcode\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nimport _objectSpread from \"C:\\\\Users\\\\User\\\\Desktop\\\\barcode\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport { GET_SUPPLIERS_REQUEST, GET_SUPPLIERS_FAIL, GET_SUPPLIERS_SUCCESS, GET_SUPPLIER_REQUEST, GET_SUPPLIER_FAIL, GET_SUPPLIER_SUCCESS, ADD_SUPPLIER_REQUEST, ADD_SUPPLIER_FAIL, ADD_SUPPLIER_SUCCESS, EDIT_SUPPLIER_REQUEST, EDIT_SUPPLIER_FAIL, EDIT_SUPPLIER_SUCCESS, DELETE_SUPPLIER_REQUEST, DELETE_SUPPLIER_FAIL, DELETE_SUPPLIER_SUCCESS, GET_BANKS_REQUEST, GET_BANKS_FAIL, GET_BANKS_SUCCESS, SET_SUPPLIER_MODAL, TOGGLE_SUPPLIER_MODAL, GET_Currency_REQUEST, GET_Currency_FAIL, GET_Currency_SUCCESS, SUPPLIERS_ADD_MODAL } from \"./actionTypes\";\nimport { IsRequiredField, IsRequiredFields } from \"../../utility/utils\";\nvar INIT_STATE = {\n  suppliers: [],\n  supplier: {},\n  banks: [],\n  currency: [],\n  modal: {},\n  required: [\"name\"],\n  loading: false,\n  success: false,\n  fail: false,\n  errors: {},\n  tin: {},\n\n  /*---------------------------------*/\n  isOpen: false,\n  setSupplier: {\n    name: '',\n    hh: '',\n    hvhh: ''\n  }\n};\nexport default (function () {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : INIT_STATE;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case GET_SUPPLIERS_REQUEST:\n      return _objectSpread({}, state, {\n        loading: true,\n        success: false,\n        modal: {},\n        fail: false,\n        errors: {}\n      });\n\n    case GET_SUPPLIERS_FAIL:\n      return _objectSpread({}, state, {\n        loading: false,\n        success: false,\n        modal: {},\n        fail: true\n      });\n\n    case GET_SUPPLIERS_SUCCESS:\n      console.log(action.result.results);\n      return _objectSpread({}, state, {\n        loading: false,\n        success: true,\n        fail: false,\n        suppliers: action.result.results,\n        modal: {},\n        errors: {}\n      });\n\n    case GET_SUPPLIER_REQUEST:\n      return _objectSpread({}, state, {\n        loading: true,\n        success: false,\n        fail: false,\n        errors: {}\n      });\n\n    case GET_SUPPLIER_FAIL:\n      return _objectSpread({}, state, {\n        loading: false,\n        success: false,\n        fail: true\n      });\n\n    case GET_SUPPLIER_SUCCESS:\n      return _objectSpread({}, state, {\n        loading: false,\n        success: true,\n        fail: false,\n        supplier: Object.values(JSON.parse(action.result.data))[0],\n        errors: {}\n      });\n\n    case ADD_SUPPLIER_REQUEST:\n      return _objectSpread({}, state, {\n        loading: true,\n        success: false,\n        fail: false,\n        errors: IsRequiredFields(state.required, state.supplier, state.errors)\n      });\n\n    case ADD_SUPPLIER_FAIL:\n      return _objectSpread({}, state, {\n        loading: false,\n        success: false,\n        fail: true\n      });\n\n    case ADD_SUPPLIER_SUCCESS:\n      return _objectSpread({}, state, {\n        loading: false,\n        success: true,\n        fail: false,\n        modal: {},\n        suppliers: _objectSpread({}, JSON.parse(action.result.data), state.suppliers)\n      });\n\n    case EDIT_SUPPLIER_REQUEST:\n      return _objectSpread({}, state, {\n        loading: true,\n        success: false,\n        fail: false,\n        errors: IsRequiredFields(state.required, state.supplier, state.errors)\n      });\n\n    case EDIT_SUPPLIER_FAIL:\n      return _objectSpread({}, state, {\n        loading: false,\n        success: false,\n        fail: true\n      });\n\n    case EDIT_SUPPLIER_SUCCESS:\n      for (var _i = 0, _Object$entries = Object.entries(JSON.parse(action.result.data)); _i < _Object$entries.length; _i++) {\n        var _ref3 = _Object$entries[_i];\n\n        var _ref2 = _slicedToArray(_ref3, 2);\n\n        var key = _ref2[0];\n        var value = _ref2[1];\n        state.suppliers[key] = value;\n      }\n\n      return _objectSpread({}, state, {\n        loading: false,\n        success: true,\n        fail: false,\n        modal: {},\n        supplier: {},\n        suppliers: _objectSpread({}, state.suppliers)\n      });\n\n    case DELETE_SUPPLIER_REQUEST:\n      return _objectSpread({}, state, {\n        loading: true,\n        success: false,\n        fail: false\n      });\n\n    case DELETE_SUPPLIER_FAIL:\n      return _objectSpread({}, state, {\n        loading: false,\n        success: false,\n        fail: true\n      });\n\n    case DELETE_SUPPLIER_SUCCESS:\n      delete state.suppliers[JSON.parse(action.result.data)];\n      return _objectSpread({}, state, {\n        loading: false,\n        success: true,\n        fail: false,\n        modal: {},\n        supplier: {},\n        suppliers: state.suppliers\n      });\n\n    case GET_BANKS_REQUEST:\n      return _objectSpread({}, state, {\n        loading: true,\n        success: false,\n        modal: {},\n        fail: false,\n        errors: {}\n      });\n\n    case GET_BANKS_FAIL:\n      return _objectSpread({}, state, {\n        loading: false,\n        success: false,\n        modal: {},\n        fail: true\n      });\n\n    case GET_BANKS_SUCCESS:\n      return _objectSpread({}, state, {\n        banks: action.result.results,\n        modal: {},\n        loading: false,\n        success: true,\n        fail: false,\n        errors: {}\n      });\n\n    case GET_Currency_REQUEST:\n      return _objectSpread({}, state, {\n        loading: true,\n        success: false,\n        modal: {},\n        fail: false,\n        errors: {}\n      });\n\n    case GET_Currency_FAIL:\n      return _objectSpread({}, state, {\n        loading: false,\n        success: false,\n        modal: {},\n        fail: true\n      });\n\n    case GET_Currency_SUCCESS:\n      return _objectSpread({}, state, {\n        currency: action.result.results,\n        modal: {},\n        loading: false,\n        success: true,\n        fail: false,\n        errors: {}\n      });\n\n    case SET_SUPPLIER_MODAL:\n      if (typeof action.index !== 'undefined') {\n        if (!state.supplier[action.key]) {\n          state.supplier[action.key] = [];\n        }\n\n        if (typeof action.add === 'undefined') {\n          state.supplier[action.key][action.index] = action.value;\n        } else if (action.add) {\n          state.supplier[action.key][action.index + 1] = action.value;\n        } else {\n          state.supplier[action.key].splice(action.index, 1);\n        }\n      } else {\n        state.supplier[action.key] = action.value;\n      }\n\n      return _objectSpread({}, state, {\n        errors: IsRequiredField(state.required, action, state.errors)\n      });\n\n    case TOGGLE_SUPPLIER_MODAL:\n      state.modal[action.modalType] = !state.modal[action.modalType];\n\n      if (action.obj) {\n        if (action.modalType === \"edit\") {\n          state.supplier[action.obj.key] = action.obj.value;\n        } else {\n          state.supplier = action.obj;\n        }\n      }\n\n      return _objectSpread({}, state, {\n        errors: {}\n      });\n\n    /*---------------------------------*/\n\n    case SUPPLIERS_ADD_MODAL:\n      return _objectSpread({}, state, {\n        isOpen: !state.isOpen\n      });\n\n    default:\n      return _objectSpread({}, state);\n  }\n});","map":{"version":3,"sources":["C:/Users/User/Desktop/barcode/src/redux/suppliers/reducer.js"],"names":["GET_SUPPLIERS_REQUEST","GET_SUPPLIERS_FAIL","GET_SUPPLIERS_SUCCESS","GET_SUPPLIER_REQUEST","GET_SUPPLIER_FAIL","GET_SUPPLIER_SUCCESS","ADD_SUPPLIER_REQUEST","ADD_SUPPLIER_FAIL","ADD_SUPPLIER_SUCCESS","EDIT_SUPPLIER_REQUEST","EDIT_SUPPLIER_FAIL","EDIT_SUPPLIER_SUCCESS","DELETE_SUPPLIER_REQUEST","DELETE_SUPPLIER_FAIL","DELETE_SUPPLIER_SUCCESS","GET_BANKS_REQUEST","GET_BANKS_FAIL","GET_BANKS_SUCCESS","SET_SUPPLIER_MODAL","TOGGLE_SUPPLIER_MODAL","GET_Currency_REQUEST","GET_Currency_FAIL","GET_Currency_SUCCESS","SUPPLIERS_ADD_MODAL","IsRequiredField","IsRequiredFields","INIT_STATE","suppliers","supplier","banks","currency","modal","required","loading","success","fail","errors","tin","isOpen","setSupplier","name","hh","hvhh","state","action","type","console","log","result","results","Object","values","JSON","parse","data","entries","key","value","index","add","splice","modalType","obj"],"mappings":"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","sourcesContent":["import {\r\n    GET_SUPPLIERS_REQUEST,\r\n    GET_SUPPLIERS_FAIL,\r\n    GET_SUPPLIERS_SUCCESS,\r\n    GET_SUPPLIER_REQUEST,\r\n    GET_SUPPLIER_FAIL,\r\n    GET_SUPPLIER_SUCCESS,\r\n    ADD_SUPPLIER_REQUEST,\r\n    ADD_SUPPLIER_FAIL,\r\n    ADD_SUPPLIER_SUCCESS,\r\n    EDIT_SUPPLIER_REQUEST,\r\n    EDIT_SUPPLIER_FAIL,\r\n    EDIT_SUPPLIER_SUCCESS,\r\n    DELETE_SUPPLIER_REQUEST,\r\n    DELETE_SUPPLIER_FAIL,\r\n    DELETE_SUPPLIER_SUCCESS,\r\n    GET_BANKS_REQUEST,\r\n    GET_BANKS_FAIL,\r\n    GET_BANKS_SUCCESS,\r\n    SET_SUPPLIER_MODAL,\r\n    TOGGLE_SUPPLIER_MODAL,\r\n    GET_Currency_REQUEST,\r\n    GET_Currency_FAIL,\r\n    GET_Currency_SUCCESS, SUPPLIERS_ADD_MODAL\r\n} from \"./actionTypes\";\r\nimport {IsRequiredField, IsRequiredFields} from \"../../utility/utils\";\r\n\r\n\r\nconst INIT_STATE = {\r\n    suppliers: [],\r\n    supplier: {},\r\n    banks: [],\r\n    currency: [],\r\n    modal: {},\r\n    required: [\r\n        \"name\",\r\n    ],\r\n    loading: false,\r\n    success: false,\r\n    fail: false,\r\n    errors: {},\r\n    tin: {},\r\n    /*---------------------------------*/\r\n    isOpen: false,\r\n    setSupplier: {\r\n        name: '',\r\n        hh: '',\r\n        hvhh: '',\r\n        \r\n    }\r\n};\r\n\r\n\r\nexport default (state = INIT_STATE, action) => {\r\n    switch (action.type) {\r\n        case GET_SUPPLIERS_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n                success: false,\r\n                modal: {},\r\n                fail: false,\r\n                errors: {},\r\n            };\r\n        case GET_SUPPLIERS_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: false,\r\n                modal: {},\r\n                fail: true,\r\n            };\r\n        case GET_SUPPLIERS_SUCCESS:\r\n            console.log(action.result.results)\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: true,\r\n                fail: false,\r\n                suppliers: action.result.results,\r\n                modal: {},\r\n                errors: {},\r\n            };\r\n        case GET_SUPPLIER_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n                success: false,\r\n                fail: false,\r\n                errors: {},\r\n            };\r\n        case GET_SUPPLIER_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: false,\r\n                fail: true,\r\n            };\r\n        case GET_SUPPLIER_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: true,\r\n                fail: false,\r\n                supplier: Object.values(JSON.parse(action.result.data))[0],\r\n                errors: {},\r\n            };\r\n        case ADD_SUPPLIER_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n                success: false,\r\n                fail: false,\r\n                errors: IsRequiredFields(state.required, state.supplier, state.errors)\r\n            }\r\n        case ADD_SUPPLIER_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: false,\r\n                fail: true,\r\n\r\n            };\r\n        case ADD_SUPPLIER_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: true,\r\n                fail: false,\r\n                modal: {},\r\n                suppliers: {\r\n                    ...JSON.parse(action.result.data),\r\n                    ...state.suppliers,\r\n                }\r\n            };\r\n        case EDIT_SUPPLIER_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n                success: false,\r\n                fail: false,\r\n                errors: IsRequiredFields(state.required, state.supplier, state.errors)\r\n            }\r\n        case EDIT_SUPPLIER_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: false,\r\n                fail: true,\r\n\r\n            };\r\n        case EDIT_SUPPLIER_SUCCESS:\r\n            for (let [key, value] of Object.entries(JSON.parse(action.result.data))) {\r\n                state.suppliers[key] = value;\r\n            }\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: true,\r\n                fail: false,\r\n                modal: {},\r\n                supplier: {},\r\n                suppliers: {\r\n                    ...state.suppliers,\r\n                }\r\n            };\r\n        case DELETE_SUPPLIER_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n                success: false,\r\n                fail: false,\r\n            }\r\n        case DELETE_SUPPLIER_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: false,\r\n                fail: true,\r\n\r\n            };\r\n        case DELETE_SUPPLIER_SUCCESS:\r\n            delete state.suppliers[JSON.parse(action.result.data)]\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: true,\r\n                fail: false,\r\n                modal: {},\r\n                supplier: {},\r\n                suppliers: state.suppliers\r\n            };\r\n        case GET_BANKS_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n                success: false,\r\n                modal: {},\r\n                fail: false,\r\n                errors: {},\r\n            };\r\n        case GET_BANKS_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: false,\r\n                modal: {},\r\n                fail: true,\r\n            };\r\n        case GET_BANKS_SUCCESS:\r\n            return {\r\n                ...state,\r\n                banks: action.result.results,\r\n                modal: {},\r\n                loading: false,\r\n                success: true,\r\n                fail: false,\r\n                errors: {},\r\n            };\r\n        case GET_Currency_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n                success: false,\r\n                modal: {},\r\n                fail: false,\r\n                errors: {},\r\n            };\r\n        case GET_Currency_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: false,\r\n                modal: {},\r\n                fail: true,\r\n            };\r\n        case GET_Currency_SUCCESS:\r\n            return {\r\n                ...state,\r\n                currency: action.result.results,\r\n                modal: {},\r\n                loading: false,\r\n                success: true,\r\n                fail: false,\r\n                errors: {},\r\n            };\r\n        case SET_SUPPLIER_MODAL:\r\n            if (typeof action.index !== 'undefined') {\r\n                if (!state.supplier[action.key]) {\r\n                    state.supplier[action.key] = []\r\n                }\r\n                if (typeof action.add === 'undefined') {\r\n                    state.supplier[action.key][action.index] = action.value;\r\n                } else if (action.add) {\r\n                    state.supplier[action.key][action.index + 1] = action.value;\r\n                } else {\r\n                    state.supplier[action.key].splice(action.index, 1);\r\n                }\r\n            } else {\r\n                state.supplier[action.key] = action.value;\r\n            }\r\n            return {\r\n                ...state,\r\n                errors: IsRequiredField(state.required, action, state.errors)\r\n            };\r\n        case TOGGLE_SUPPLIER_MODAL:\r\n            state.modal[action.modalType] = !state.modal[action.modalType];\r\n\r\n            if (action.obj) {\r\n                if (action.modalType === \"edit\") {\r\n                    state.supplier[action.obj.key] = action.obj.value\r\n                } else {\r\n                    state.supplier = action.obj\r\n                }\r\n            }\r\n\r\n            return {\r\n                ...state,\r\n                errors: {}\r\n            }\r\n            /*---------------------------------*/\r\n        case SUPPLIERS_ADD_MODAL:\r\n            return  {\r\n                ...state, isOpen: !state.isOpen\r\n            }\r\n        default:\r\n            return {...state};\r\n    }\r\n};\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}