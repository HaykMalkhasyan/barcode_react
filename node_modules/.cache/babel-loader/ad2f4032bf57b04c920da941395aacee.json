{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\User\\\\Desktop\\\\barcode\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport { GET_PRODUCTS_REQUEST, GET_PRODUCTS_FAIL, GET_PRODUCTS_SUCCESS, GET_PRODUCT_REQUEST, GET_PRODUCT_FAIL, GET_PRODUCT_SUCCESS, ADD_PRODUCT_REQUEST, ADD_PRODUCT_FAIL, ADD_PRODUCT_SUCCESS, EDIT_PRODUCT_REQUEST, EDIT_PRODUCT_FAIL, EDIT_PRODUCT_SUCCESS, DELETE_PRODUCT_REQUEST, DELETE_PRODUCT_FAIL, DELETE_PRODUCT_SUCCESS, GET_BARCODE_TYPES_REQUEST, GET_BARCODE_TYPES_FAIL, GET_BARCODE_TYPES_SUCCESS, ADD_BARCODE, DELETE_BARCODE, SET_PRODUCT_MODAL, TOGGLE_PRODUCT_MODAL, SET_BARCODE, ADD_MEASUREMENT_VALUE, ADD_POINTS_VALUE, ADD_UPLOAD_IMAGES, ADD_VALUE, ADD_RESULT, SEARCH_ERROR, SELECT_GROUP, SELECT_ID_IN_ARRAY, CLASSIFIERS_TOGGLE_MODAL, CREATE_CLASSIFIERS_ERROR, CREATE_CLASSIFIERS_SUCCESS, ADD_SEARCH_TEXT } from \"./actionTypes\";\nimport { Pushend\n/*IsRequiredFields,*/\n, Remove } from \"../../utility/utils\";\nvar INIT_STATE = {\n  products: [],\n  product: {},\n  barcodeTypes: [],\n  modal: {},\n  loading: false,\n  success: false,\n  fail: false,\n  errors: {},\n  types: [{\n    id: 0,\n    name: 'EAN-13'\n  }, {\n    id: 1,\n    name: 'EAN-8'\n  }, {\n    id: 2,\n    name: \"EAN-5\"\n  }, {\n    id: 3,\n    name: \"CODE128\"\n  }],\n  measurementData: [{\n    id: 1,\n    name: 'kilograms'\n  }, {\n    id: 2,\n    name: 'kilometers'\n  }, {\n    id: 3,\n    name: 'cubic meter'\n  }, {\n    id: 4,\n    name: 'square meter'\n  }, {\n    id: 5,\n    name: 'grams'\n  }, {\n    id: 6,\n    name: 'milligrams'\n  }, {\n    id: 7,\n    name: 'liters'\n  }],\n  searchProduct: {\n    sku: '',\n    name: '',\n    suppliers: '',\n    barcode: '',\n    description: '',\n    active: ''\n  },\n  searchProductResult: [],\n  searchErrorName: null,\n  group: null,\n  elemsIdInArray: null,\n  classifiersModal: false,\n  advancedSearchConfig: sessionStorage.getItem('advancedSearchConfig') ? JSON.parse(sessionStorage.getItem('advancedSearchConfig')) : {\n    image: false,\n    hasActive: false,\n    hasSuppliers: false,\n    pageSize: 'all'\n  },\n  advancedSearchText: '',\n  createError: false\n};\nexport default (function () {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : INIT_STATE;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case ADD_SEARCH_TEXT:\n      return _objectSpread({}, state, {\n        advancedSearchText: action.advancedSearchText\n      });\n\n    case CREATE_CLASSIFIERS_ERROR:\n      return _objectSpread({}, state, {\n        createError: true\n      });\n\n    case CREATE_CLASSIFIERS_SUCCESS:\n      return _objectSpread({}, state, {\n        advancedSearchConfig: action.data,\n        createError: false,\n        classifiersModal: false,\n        group: null,\n        elemsIdInArray: null\n      });\n\n    case CLASSIFIERS_TOGGLE_MODAL:\n      delete state.advancedSearchConfig.classifiers;\n      return _objectSpread({}, state, {\n        classifiersModal: !state.classifiersModal,\n        createError: false,\n        group: null,\n        elemsIdInArray: null\n      });\n\n    case SELECT_ID_IN_ARRAY:\n      return _objectSpread({}, state, {\n        elemsIdInArray: action.elemsIdInArray\n      });\n\n    case SELECT_GROUP:\n      return _objectSpread({}, state, {\n        group: action.group\n      });\n\n    case SEARCH_ERROR:\n      return _objectSpread({}, state, {\n        searchErrorName: action.name\n      });\n\n    case ADD_RESULT:\n      return _objectSpread({}, state, {\n        searchProductResult: action.result,\n        searchErrorName: action.result.length > 0 ? null : state.searchErrorName\n      });\n\n    case ADD_VALUE:\n      return _objectSpread({}, state, {\n        searchProduct: action.data\n      });\n\n    case ADD_UPLOAD_IMAGES:\n      return _objectSpread({}, state, {\n        product: action.product\n      });\n\n    case ADD_POINTS_VALUE:\n      return _objectSpread({}, state, {\n        product: action.data\n      });\n\n    case ADD_MEASUREMENT_VALUE:\n      return _objectSpread({}, state, {\n        product: action.product\n      });\n\n    case SET_BARCODE:\n      return _objectSpread({}, state, {\n        product: action.product\n      });\n\n    case GET_PRODUCTS_REQUEST:\n      return _objectSpread({}, state, {\n        loading: true,\n        success: false,\n        fail: false,\n        errors: {}\n      });\n\n    case GET_PRODUCTS_FAIL:\n      return _objectSpread({}, state, {\n        loading: false,\n        success: false,\n        fail: true\n      });\n\n    case GET_PRODUCTS_SUCCESS:\n      return _objectSpread({}, state, {\n        loading: false,\n        success: true,\n        fail: false,\n        products: action.result.results,\n        errors: {}\n      });\n\n    case GET_PRODUCT_REQUEST:\n      return _objectSpread({}, state, {\n        loading: true,\n        success: false,\n        fail: false,\n        errors: {}\n      });\n\n    case GET_PRODUCT_FAIL:\n      return _objectSpread({}, state, {\n        loading: false,\n        success: false,\n        fail: true\n      });\n\n    case GET_PRODUCT_SUCCESS:\n      return _objectSpread({}, state, {\n        loading: false,\n        success: true,\n        fail: false,\n        product: action.result,\n        errors: {}\n      });\n\n    case GET_BARCODE_TYPES_REQUEST:\n      return _objectSpread({}, state, {\n        loading: true,\n        success: false,\n        fail: false,\n        errors: {}\n      });\n\n    case GET_BARCODE_TYPES_FAIL:\n      return _objectSpread({}, state, {\n        loading: false,\n        success: false,\n        fail: true\n      });\n\n    case GET_BARCODE_TYPES_SUCCESS:\n      return _objectSpread({}, state, {\n        loading: false,\n        success: true,\n        fail: false,\n        barcodeTypes: action.result.results,\n        errors: {}\n      });\n\n    case ADD_PRODUCT_REQUEST:\n      return _objectSpread({}, state, {\n        loading: true,\n        success: false,\n        fail: false\n      });\n\n    case ADD_PRODUCT_FAIL:\n      return _objectSpread({}, state, {\n        loading: false,\n        success: false,\n        fail: true\n      });\n\n    case ADD_PRODUCT_SUCCESS:\n      return _objectSpread({}, state, {\n        loading: false,\n        success: true,\n        fail: false,\n        modal: false,\n        products: Pushend(state.products, action.result),\n        product: {}\n      });\n\n    case EDIT_PRODUCT_REQUEST:\n      return _objectSpread({}, state, {\n        loading: true,\n        success: false,\n        fail: false\n      });\n\n    case EDIT_PRODUCT_FAIL:\n      return _objectSpread({}, state, {\n        loading: false,\n        success: false,\n        fail: true\n      });\n\n    case EDIT_PRODUCT_SUCCESS:\n      return _objectSpread({}, state, {\n        loading: false,\n        success: true,\n        fail: false,\n        modal: false,\n        product: {},\n        products: JSON.parse(action.result.data)\n      });\n\n    case DELETE_PRODUCT_REQUEST:\n      return _objectSpread({}, state, {\n        loading: true,\n        success: false,\n        fail: false\n      });\n\n    case DELETE_PRODUCT_FAIL:\n      return _objectSpread({}, state, {\n        loading: false,\n        success: false,\n        fail: true\n      });\n\n    case DELETE_PRODUCT_SUCCESS:\n      return _objectSpread({}, state, {\n        loading: false,\n        success: true,\n        fail: false,\n        modal: false,\n        product: {},\n        products: Remove(state.products, action.data, 'id')\n      });\n\n    case SET_PRODUCT_MODAL:\n      state.product[action.key] = action.value;\n      return _objectSpread({}, state);\n\n    case ADD_BARCODE:\n      if (!state.product.barcode) {\n        state.product.barcode = [];\n      }\n\n      state.product.barcode.push(_objectSpread({}, action.code));\n      return _objectSpread({}, state);\n\n    case DELETE_BARCODE:\n      state.product.barcode = Remove(state.product.barcode, {\n        barcode: action.code\n      }, 'barcode');\n      return _objectSpread({}, state);\n\n    case TOGGLE_PRODUCT_MODAL:\n      var newModal = {};\n      newModal[action.modalType] = !state.modal[action.modalType];\n      var product = action.modalType === \"edit\" ? _objectSpread({}, state.product, action.obj) : _objectSpread({}, action.obj);\n      return _objectSpread({}, state, {\n        modal: _objectSpread({}, state.modal, newModal),\n        product: product\n      });\n\n    default:\n      return _objectSpread({}, state);\n  }\n});","map":{"version":3,"sources":["C:/Users/User/Desktop/barcode/src/redux/products/reducer.js"],"names":["GET_PRODUCTS_REQUEST","GET_PRODUCTS_FAIL","GET_PRODUCTS_SUCCESS","GET_PRODUCT_REQUEST","GET_PRODUCT_FAIL","GET_PRODUCT_SUCCESS","ADD_PRODUCT_REQUEST","ADD_PRODUCT_FAIL","ADD_PRODUCT_SUCCESS","EDIT_PRODUCT_REQUEST","EDIT_PRODUCT_FAIL","EDIT_PRODUCT_SUCCESS","DELETE_PRODUCT_REQUEST","DELETE_PRODUCT_FAIL","DELETE_PRODUCT_SUCCESS","GET_BARCODE_TYPES_REQUEST","GET_BARCODE_TYPES_FAIL","GET_BARCODE_TYPES_SUCCESS","ADD_BARCODE","DELETE_BARCODE","SET_PRODUCT_MODAL","TOGGLE_PRODUCT_MODAL","SET_BARCODE","ADD_MEASUREMENT_VALUE","ADD_POINTS_VALUE","ADD_UPLOAD_IMAGES","ADD_VALUE","ADD_RESULT","SEARCH_ERROR","SELECT_GROUP","SELECT_ID_IN_ARRAY","CLASSIFIERS_TOGGLE_MODAL","CREATE_CLASSIFIERS_ERROR","CREATE_CLASSIFIERS_SUCCESS","ADD_SEARCH_TEXT","Pushend","Remove","INIT_STATE","products","product","barcodeTypes","modal","loading","success","fail","errors","types","id","name","measurementData","searchProduct","sku","suppliers","barcode","description","active","searchProductResult","searchErrorName","group","elemsIdInArray","classifiersModal","advancedSearchConfig","sessionStorage","getItem","JSON","parse","image","hasActive","hasSuppliers","pageSize","advancedSearchText","createError","state","action","type","data","classifiers","result","length","results","key","value","push","code","newModal","modalType","obj"],"mappings":"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","sourcesContent":["import {\r\n    GET_PRODUCTS_REQUEST,\r\n    GET_PRODUCTS_FAIL,\r\n    GET_PRODUCTS_SUCCESS,\r\n    GET_PRODUCT_REQUEST,\r\n    GET_PRODUCT_FAIL,\r\n    GET_PRODUCT_SUCCESS,\r\n    ADD_PRODUCT_REQUEST,\r\n    ADD_PRODUCT_FAIL,\r\n    ADD_PRODUCT_SUCCESS,\r\n    EDIT_PRODUCT_REQUEST,\r\n    EDIT_PRODUCT_FAIL,\r\n    EDIT_PRODUCT_SUCCESS,\r\n    DELETE_PRODUCT_REQUEST,\r\n    DELETE_PRODUCT_FAIL,\r\n    DELETE_PRODUCT_SUCCESS,\r\n    GET_BARCODE_TYPES_REQUEST,\r\n    GET_BARCODE_TYPES_FAIL,\r\n    GET_BARCODE_TYPES_SUCCESS,\r\n    ADD_BARCODE,\r\n    DELETE_BARCODE,\r\n    SET_PRODUCT_MODAL,\r\n    TOGGLE_PRODUCT_MODAL,\r\n    SET_BARCODE,\r\n    ADD_MEASUREMENT_VALUE,\r\n    ADD_POINTS_VALUE,\r\n    ADD_UPLOAD_IMAGES,\r\n    ADD_VALUE,\r\n    ADD_RESULT,\r\n    SEARCH_ERROR,\r\n    SELECT_GROUP,\r\n    SELECT_ID_IN_ARRAY,\r\n    CLASSIFIERS_TOGGLE_MODAL,\r\n    CREATE_CLASSIFIERS_ERROR, CREATE_CLASSIFIERS_SUCCESS, ADD_SEARCH_TEXT\r\n} from \"./actionTypes\";\r\nimport {Pushend,/*IsRequiredFields,*/Remove} from \"../../utility/utils\";\r\n\r\n\r\nconst INIT_STATE = {\r\n    products: [],\r\n    product: {},\r\n    barcodeTypes: [],\r\n    modal: {},\r\n    loading: false,\r\n    success: false,\r\n    fail: false,\r\n    errors: {},\r\n    types: [\r\n        {id: 0, name: 'EAN-13'},\r\n        {id: 1, name: 'EAN-8'},\r\n        {id: 2, name: \"EAN-5\"},\r\n        {id: 3, name: \"CODE128\"},\r\n    ],\r\n    measurementData: [\r\n        {id: 1, name: 'kilograms'},\r\n        {id: 2, name: 'kilometers'},\r\n        {id: 3, name: 'cubic meter'},\r\n        {id: 4, name: 'square meter'},\r\n        {id: 5, name: 'grams'},\r\n        {id: 6, name: 'milligrams'},\r\n        {id: 7, name: 'liters'},\r\n    ],\r\n    searchProduct: {\r\n        sku: '',\r\n        name: '',\r\n        suppliers: '',\r\n        barcode: '',\r\n        description: '',\r\n        active: ''\r\n    },\r\n    searchProductResult: [],\r\n    searchErrorName: null,\r\n    group: null,\r\n    elemsIdInArray: null,\r\n    classifiersModal: false,\r\n    advancedSearchConfig: sessionStorage.getItem('advancedSearchConfig') ?\r\n        JSON.parse(sessionStorage.getItem('advancedSearchConfig'))\r\n        :\r\n        {\r\n            image: false,\r\n            hasActive: false,\r\n            hasSuppliers: false,\r\n            pageSize: 'all'\r\n        },\r\n    advancedSearchText: '',\r\n    createError: false,\r\n};\r\n\r\nexport default (state = INIT_STATE, action) => {\r\n\r\n    switch (action.type) {\r\n        case ADD_SEARCH_TEXT:\r\n            return {\r\n                ...state,\r\n                advancedSearchText: action.advancedSearchText\r\n            }\r\n        case CREATE_CLASSIFIERS_ERROR:\r\n            return {\r\n                ...state,\r\n                createError: true\r\n            }\r\n        case CREATE_CLASSIFIERS_SUCCESS:\r\n            return {\r\n                ...state,\r\n                advancedSearchConfig: action.data,\r\n                createError: false,\r\n                classifiersModal: false,\r\n                group: null,\r\n                elemsIdInArray: null\r\n            }\r\n        case CLASSIFIERS_TOGGLE_MODAL:\r\n            delete state.advancedSearchConfig.classifiers;\r\n            return {\r\n                ...state,\r\n                classifiersModal: !state.classifiersModal,\r\n                createError: false,\r\n                group: null,\r\n                elemsIdInArray: null,\r\n            }\r\n        case SELECT_ID_IN_ARRAY:\r\n            return {\r\n                ...state,\r\n                elemsIdInArray: action.elemsIdInArray\r\n            }\r\n        case SELECT_GROUP:\r\n            return {\r\n                ...state,\r\n                group: action.group,\r\n            }\r\n        case SEARCH_ERROR:\r\n            return {\r\n                ...state,\r\n                searchErrorName: action.name\r\n            }\r\n        case ADD_RESULT:\r\n            return {\r\n                ...state,\r\n                searchProductResult: action.result,\r\n                searchErrorName: action.result.length > 0 ? null : state.searchErrorName\r\n            }\r\n        case ADD_VALUE:\r\n            return {\r\n                ...state,\r\n                searchProduct: action.data,\r\n            }\r\n        case ADD_UPLOAD_IMAGES:\r\n            return {\r\n                ...state,\r\n                product: action.product\r\n            }\r\n        case ADD_POINTS_VALUE:\r\n            return {\r\n                ...state,\r\n                product: action.data\r\n            }\r\n        case ADD_MEASUREMENT_VALUE:\r\n            return {\r\n                ...state,\r\n                product: action.product\r\n            }\r\n        case SET_BARCODE:\r\n            return {\r\n                ...state,\r\n                product: action.product\r\n            }\r\n        case GET_PRODUCTS_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n                success: false,\r\n                fail: false,\r\n                errors: {},\r\n            };\r\n        case GET_PRODUCTS_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: false,\r\n                fail: true,\r\n            };\r\n        case GET_PRODUCTS_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: true,\r\n                fail: false,\r\n                products: action.result.results,\r\n                errors: {},\r\n            };\r\n        case GET_PRODUCT_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n                success: false,\r\n                fail: false,\r\n                errors: {},\r\n            };\r\n        case GET_PRODUCT_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: false,\r\n                fail: true,\r\n            };\r\n        case GET_PRODUCT_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: true,\r\n                fail: false,\r\n                product: action.result,\r\n                errors: {},\r\n            };\r\n        case GET_BARCODE_TYPES_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n                success: false,\r\n                fail: false,\r\n                errors: {},\r\n            };\r\n        case GET_BARCODE_TYPES_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: false,\r\n                fail: true,\r\n            };\r\n        case GET_BARCODE_TYPES_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: true,\r\n                fail: false,\r\n                barcodeTypes: action.result.results,\r\n                errors: {},\r\n            };\r\n        case ADD_PRODUCT_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n                success: false,\r\n                fail: false,\r\n            }\r\n        case ADD_PRODUCT_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: false,\r\n                fail: true,\r\n\r\n            };\r\n        case ADD_PRODUCT_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: true,\r\n                fail: false,\r\n                modal: false,\r\n                products: Pushend(state.products, action.result),\r\n                product: {}\r\n            };\r\n        case EDIT_PRODUCT_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n                success: false,\r\n                fail: false,\r\n            }\r\n        case EDIT_PRODUCT_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: false,\r\n                fail: true,\r\n\r\n            };\r\n        case EDIT_PRODUCT_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: true,\r\n                fail: false,\r\n                modal: false,\r\n                product: {},\r\n                products: JSON.parse(action.result.data)\r\n            };\r\n        case DELETE_PRODUCT_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n                success: false,\r\n                fail: false,\r\n            }\r\n        case DELETE_PRODUCT_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: false,\r\n                fail: true,\r\n\r\n            };\r\n        case DELETE_PRODUCT_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: true,\r\n                fail: false,\r\n                modal: false,\r\n                product: {},\r\n                products: Remove(state.products, action.data, 'id')\r\n            };\r\n        case SET_PRODUCT_MODAL:\r\n            state.product[action.key] = action.value\r\n            return {\r\n                ...state,\r\n            }\r\n        case ADD_BARCODE:\r\n            if (!state.product.barcode) {\r\n                state.product.barcode = [];\r\n            }\r\n            state.product.barcode.push({...action.code})\r\n            return {\r\n                ...state,\r\n            }\r\n        case DELETE_BARCODE:\r\n            state.product.barcode = Remove(state.product.barcode, {barcode: action.code}, 'barcode')\r\n            return {\r\n                ...state,\r\n            }\r\n        case TOGGLE_PRODUCT_MODAL:\r\n            let newModal = {};\r\n            newModal[action.modalType] = !state.modal[action.modalType];\r\n            let product = (action.modalType === \"edit\") ? {\r\n                ...state.product,\r\n                ...action.obj\r\n            } : {\r\n                ...action.obj\r\n            }\r\n            return {\r\n                ...state,\r\n                modal: {\r\n                    ...state.modal,\r\n                    ...newModal\r\n                },\r\n                product\r\n            }\r\n        default:\r\n            return {...state};\r\n    }\r\n};\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}