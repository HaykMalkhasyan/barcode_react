{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\User\\\\Desktop\\\\barcode\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\User\\\\Desktop\\\\barcode\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\User\\\\Desktop\\\\barcode\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\User\\\\Desktop\\\\barcode\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\User\\\\Desktop\\\\barcode\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\barcode\\\\src\\\\containers\\\\localize\\\\localize.js\";\nimport React, { Component } from \"react\";\nimport { UncontrolledDropdown, DropdownToggle, DropdownMenu, DropdownItem } from \"reactstrap\";\nimport ReactCountryFlag from \"react-country-flag\";\nimport { renderToStaticMarkup } from \"react-dom/server\";\nimport { withLocalize, initialize, addTranslation } from \"react-localize-redux\";\nimport { translations } from \"../../redux/lang/translation\";\nimport { store } from \"../../redux/store\";\n\nvar ThemeNavbar =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ThemeNavbar, _Component);\n\n  function ThemeNavbar(props) {\n    var _this;\n\n    _classCallCheck(this, ThemeNavbar);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ThemeNavbar).call(this, props));\n    var languages = [{\n      name: 'English',\n      code: 'en'\n    }, {\n      name: 'French',\n      code: 'fr'\n    }, {\n      name: 'Spanish',\n      code: 'es'\n    }];\n    var translations = {\n      greeting: ['Hello', 'Bonjour', 'Hola'],\n      farewell: ['Goodbye', 'Au revoir', 'Adiós']\n    };\n    store.dispatch(initialize({\n      languages: languages,\n      translations: translations,\n      options: {\n        renderToStaticMarkup: renderToStaticMarkup\n      }\n    })); // store.dispatch(addTranslation({translations:translations}));\n\n    return _this;\n  }\n\n  _createClass(ThemeNavbar, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {// console.log(this.props)\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var state = this.state; // console.log(this.props.getTranslations())\n\n      return React.createElement(UncontrolledDropdown, {\n        nav: true,\n        inNavbar: true,\n        className: \"pr-1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, React.createElement(DropdownToggle, {\n        nav: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, React.createElement(ReactCountryFlag, {\n        code: \"us\",\n        svg: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }), \" EN\"), React.createElement(DropdownMenu, {\n        right: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return ThemeNavbar;\n}(Component);\n\nexport default withLocalize(ThemeNavbar);","map":{"version":3,"sources":["C:/Users/User/Desktop/barcode/src/containers/localize/localize.js"],"names":["React","Component","UncontrolledDropdown","DropdownToggle","DropdownMenu","DropdownItem","ReactCountryFlag","renderToStaticMarkup","withLocalize","initialize","addTranslation","translations","store","ThemeNavbar","props","languages","name","code","greeting","farewell","dispatch","options","state"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SACIC,oBADJ,EAEIC,cAFJ,EAGIC,YAHJ,EAIIC,YAJJ,QAKO,YALP;AAMA,OAAOC,gBAAP,MAA6B,oBAA7B;AACA,SAASC,oBAAT,QAAqC,kBAArC;AACA,SAASC,YAAT,EAAsBC,UAAtB,EAAiCC,cAAjC,QAAuD,sBAAvD;AACA,SAAQC,YAAR,QAA2B,8BAA3B;AACA,SAAQC,KAAR,QAAoB,mBAApB;;IAGMC,W;;;;;AACF,uBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,qFAAMA,KAAN;AAEA,QAAMC,SAAS,GAAG,CACd;AAAEC,MAAAA,IAAI,EAAE,SAAR;AAAmBC,MAAAA,IAAI,EAAE;AAAzB,KADc,EAEd;AAAED,MAAAA,IAAI,EAAE,QAAR;AAAkBC,MAAAA,IAAI,EAAE;AAAxB,KAFc,EAGd;AAAED,MAAAA,IAAI,EAAE,SAAR;AAAmBC,MAAAA,IAAI,EAAE;AAAzB,KAHc,CAAlB;AAKA,QAAMN,YAAY,GAAG;AACjBO,MAAAA,QAAQ,EAAE,CAAC,OAAD,EAAU,SAAV,EAAqB,MAArB,CADO;AAEjBC,MAAAA,QAAQ,EAAE,CAAC,SAAD,EAAY,WAAZ,EAAyB,OAAzB;AAFO,KAArB;AAIAP,IAAAA,KAAK,CAACQ,QAAN,CAAeX,UAAU,CAAC;AAACM,MAAAA,SAAS,EAACA,SAAX;AAAqBJ,MAAAA,YAAY,EAACA,YAAlC;AAA+CU,MAAAA,OAAO,EAAC;AAAEd,QAAAA,oBAAoB,EAApBA;AAAF;AAAvD,KAAD,CAAzB,EAZe,CAef;;AAfe;AAgBlB;;;;yCACoB,CACjB;AACH;;;6BAEQ;AACL,UAAIe,KAAK,GAAG,KAAKA,KAAjB,CADK,CAEL;;AACA,aACI,oBAAC,oBAAD;AAAsB,QAAA,GAAG,MAAzB;AAA0B,QAAA,QAAQ,MAAlC;AAAmC,QAAA,SAAS,EAAC,MAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,cAAD;AAAgB,QAAA,GAAG,MAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,gBAAD;AAAkB,QAAA,IAAI,EAAC,IAAvB;AAA4B,QAAA,GAAG,MAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,QADJ,EAII,oBAAC,YAAD;AAAc,QAAA,KAAK,MAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJJ,CADJ;AAkBH;;;;EA3CqBrB,S;;AA6C1B,eAAeO,YAAY,CAACK,WAAD,CAA3B","sourcesContent":["import React, {Component} from \"react\";\r\nimport {\r\n    UncontrolledDropdown,\r\n    DropdownToggle,\r\n    DropdownMenu,\r\n    DropdownItem\r\n} from \"reactstrap\";\r\nimport ReactCountryFlag from \"react-country-flag\";\r\nimport { renderToStaticMarkup } from \"react-dom/server\";\r\nimport { withLocalize,initialize,addTranslation } from \"react-localize-redux\";\r\nimport {translations} from \"../../redux/lang/translation\";\r\nimport {store} from \"../../redux/store\"\r\n\r\n\r\nclass ThemeNavbar extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        const languages = [\r\n            { name: 'English', code: 'en' },\r\n            { name: 'French', code: 'fr' },\r\n            { name: 'Spanish', code: 'es' }\r\n        ];\r\n        const translations = {\r\n            greeting: ['Hello', 'Bonjour', 'Hola'],\r\n            farewell: ['Goodbye', 'Au revoir', 'Adiós']\r\n        };\r\n        store.dispatch(initialize({languages:languages,translations:translations,options:{ renderToStaticMarkup }}));\r\n\r\n\r\n        // store.dispatch(addTranslation({translations:translations}));\r\n    }\r\n    componentWillMount() {\r\n        // console.log(this.props)\r\n    }\r\n\r\n    render() {\r\n        let state = this.state\r\n        // console.log(this.props.getTranslations())\r\n        return (\r\n            <UncontrolledDropdown nav inNavbar className=\"pr-1\">\r\n                <DropdownToggle nav>\r\n                    <ReactCountryFlag code=\"us\" svg/> EN\r\n                </DropdownToggle>\r\n                <DropdownMenu right>\r\n                    {/*{languages.map((value, index) =>*/}\r\n                    {/*    <DropdownItem key={value.code} onClick={() => {*/}\r\n                    {/*        setActiveLanguage(value.code)*/}\r\n                    {/*        console.log(getTranslations(state)['add'])*/}\r\n                    {/*    }}>*/}\r\n                    {/*        <ReactCountryFlag code={value.code} svg/> {value.name}*/}\r\n                    {/*    </DropdownItem>*/}\r\n                    {/*)}*/}\r\n                </DropdownMenu>\r\n            </UncontrolledDropdown>\r\n\r\n        );\r\n    }\r\n}\r\nexport default withLocalize(ThemeNavbar);\r\n"]},"metadata":{},"sourceType":"module"}