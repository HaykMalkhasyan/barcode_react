{"ast":null,"code":"import { SET_ACTIVE_LANGUAGE } from \"./actionTypes\";\nimport { languages } from \"./languages\";\nimport { translations } from \"./translation\";\nexport var setLanguage = function setLanguage(lang) {\n  localStorage.setItem('lang', lang);\n  console.log(lang);\n  return {\n    type: SET_ACTIVE_LANGUAGE,\n    lang: lang\n  };\n};\nexport var getTranslate = function getTranslate(name) {\n  var activeLanguage = localStorage.getItem('lang');\n  var activeIndex = 0;\n  Object.keys(languages).map(function (key, index) {\n    if (languages[key]['code'] === activeLanguage) {\n      activeIndex = key;\n    }\n  });\n  return translations[name][activeIndex];\n};","map":{"version":3,"sources":["C:/Users/User/Desktop/barcode/src/redux/lang/actions.js"],"names":["SET_ACTIVE_LANGUAGE","languages","translations","setLanguage","lang","localStorage","setItem","console","log","type","getTranslate","name","activeLanguage","getItem","activeIndex","Object","keys","map","key","index"],"mappings":"AAAA,SAASA,mBAAT,QAAoC,eAApC;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,SAAQC,YAAR,QAA2B,eAA3B;AAGA,OAAO,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAACC,IAAD,EAAS;AAChCC,EAAAA,YAAY,CAACC,OAAb,CAAqB,MAArB,EAA6BF,IAA7B;AACAG,EAAAA,OAAO,CAACC,GAAR,CAAYJ,IAAZ;AACA,SAAO;AACHK,IAAAA,IAAI,EAAET,mBADH;AAEHI,IAAAA,IAAI,EAAJA;AAFG,GAAP;AAKH,CARM;AASP,OAAO,IAAMM,YAAY,GAAG,SAAfA,YAAe,CAACC,IAAD,EAAS;AACjC,MAAIC,cAAc,GAAGP,YAAY,CAACQ,OAAb,CAAqB,MAArB,CAArB;AACA,MAAIC,WAAW,GAAG,CAAlB;AACAC,EAAAA,MAAM,CAACC,IAAP,CAAYf,SAAZ,EAAuBgB,GAAvB,CAA2B,UAASC,GAAT,EAAcC,KAAd,EAAqB;AAC5C,QAAGlB,SAAS,CAACiB,GAAD,CAAT,CAAe,MAAf,MAAyBN,cAA5B,EAA2C;AACvCE,MAAAA,WAAW,GAAGI,GAAd;AACH;AACJ,GAJD;AAKA,SAAOhB,YAAY,CAACS,IAAD,CAAZ,CAAmBG,WAAnB,CAAP;AACH,CATM","sourcesContent":["import { SET_ACTIVE_LANGUAGE } from \"./actionTypes\";\r\nimport { languages } from \"./languages\";\r\nimport {translations} from \"./translation\";\r\n\r\n\r\nexport const setLanguage = (lang) =>{\r\n    localStorage.setItem('lang', lang)\r\n    console.log(lang)\r\n    return {\r\n        type: SET_ACTIVE_LANGUAGE,\r\n        lang\r\n\r\n    }\r\n};\r\nexport const getTranslate = (name) =>{\r\n    let activeLanguage = localStorage.getItem('lang');\r\n    let activeIndex = 0;\r\n    Object.keys(languages).map(function(key, index) {\r\n        if(languages[key]['code']===activeLanguage){\r\n            activeIndex = key;\r\n        }\r\n    });\r\n    return translations[name][activeIndex];\r\n};"]},"metadata":{},"sourceType":"module"}