{"ast":null,"code":"export var IsJsonString = function IsJsonString(str) {\n  try {\n    JSON.parse(str);\n  } catch (e) {\n    return false;\n  }\n\n  return true;\n};\nexport var IsRequiredField = function IsRequiredField(requiredFields, field, errors) {\n  if (requiredFields.includes(field.key) && field.value === \"\") {\n    errors[field.key] = \"Required\";\n  } else {\n    delete errors[field.key];\n  }\n\n  return errors;\n};\nexport var IsRequiredFields = function IsRequiredFields(requiredFields, fields, errors) {\n  requiredFields.forEach(function (val, index) {\n    if (!fields[val] || fields[val] === \"\") {\n      errors[val] = \"Required\";\n    }\n  });\n  return errors;\n};\nexport var ObjectToArray = function ObjectToArray(obj) {\n  var arr = [];\n  Object.keys(obj).map(function (key) {\n    arr.push(obj[key]);\n  });\n  return arr;\n};\nexport var RenameKeys = function RenameKeys(arr, oldKeys, newKeys) {\n  var newArr = [];\n\n  if (arr.length > 0) {\n    arr.forEach(function (element) {\n      var newEl = {};\n      newKeys.forEach(function (key, index) {\n        newEl[key] = element[oldKeys[index]];\n      });\n      newArr.push(newEl);\n    });\n  }\n\n  return newArr;\n};","map":{"version":3,"sources":["C:/Users/User/Desktop/barcode/src/utility/utils.js"],"names":["IsJsonString","str","JSON","parse","e","IsRequiredField","requiredFields","field","errors","includes","key","value","IsRequiredFields","fields","forEach","val","index","ObjectToArray","obj","arr","Object","keys","map","push","RenameKeys","oldKeys","newKeys","newArr","length","element","newEl"],"mappings":"AAAA,OAAO,IAAMA,YAAY,GAAG,SAAfA,YAAe,CAACC,GAAD,EAAS;AACjC,MAAI;AACAC,IAAAA,IAAI,CAACC,KAAL,CAAWF,GAAX;AACH,GAFD,CAEE,OAAOG,CAAP,EAAU;AACR,WAAO,KAAP;AACH;;AACD,SAAO,IAAP;AACH,CAPM;AASP,OAAO,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACC,cAAD,EAAgBC,KAAhB,EAAsBC,MAAtB,EAAiC;AACxD,MAAGF,cAAc,CAACG,QAAf,CAAwBF,KAAK,CAACG,GAA9B,KAAsCH,KAAK,CAACI,KAAN,KAAc,EAAvD,EAA0D;AACtDH,IAAAA,MAAM,CAACD,KAAK,CAACG,GAAP,CAAN,GAAoB,UAApB;AACH,GAFD,MAEK;AACD,WAAOF,MAAM,CAACD,KAAK,CAACG,GAAP,CAAb;AACH;;AAEL,SAAOF,MAAP;AACH,CARM;AAUP,OAAO,IAAMI,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACN,cAAD,EAAgBO,MAAhB,EAAuBL,MAAvB,EAAkC;AAC9DF,EAAAA,cAAc,CAACQ,OAAf,CAAuB,UAASC,GAAT,EAAcC,KAAd,EAAoB;AACnC,QAAG,CAACH,MAAM,CAACE,GAAD,CAAP,IAAgBF,MAAM,CAACE,GAAD,CAAN,KAAc,EAAjC,EAAoC;AAChCP,MAAAA,MAAM,CAACO,GAAD,CAAN,GAAa,UAAb;AACH;AACR,GAJD;AAKA,SAAOP,MAAP;AACH,CAPM;AASP,OAAO,IAAMS,aAAa,GAAG,SAAhBA,aAAgB,CAACC,GAAD,EAAS;AAClC,MAAIC,GAAG,GAAG,EAAV;AACAC,EAAAA,MAAM,CAACC,IAAP,CAAYH,GAAZ,EAAiBI,GAAjB,CAAqB,UAACZ,GAAD,EAAS;AAC1BS,IAAAA,GAAG,CAACI,IAAJ,CAASL,GAAG,CAACR,GAAD,CAAZ;AACH,GAFD;AAGA,SAAOS,GAAP;AACH,CANM;AAQP,OAAO,IAAMK,UAAU,GAAG,SAAbA,UAAa,CAACL,GAAD,EAAKM,OAAL,EAAaC,OAAb,EAAyB;AAC/C,MAAIC,MAAM,GAAG,EAAb;;AACA,MAAGR,GAAG,CAACS,MAAJ,GAAW,CAAd,EAAgB;AACZT,IAAAA,GAAG,CAACL,OAAJ,CAAY,UAASe,OAAT,EAAiB;AACzB,UAAIC,KAAK,GAAG,EAAZ;AACAJ,MAAAA,OAAO,CAACZ,OAAR,CAAgB,UAASJ,GAAT,EAAaM,KAAb,EAAoB;AAChCc,QAAAA,KAAK,CAACpB,GAAD,CAAL,GAAamB,OAAO,CAACJ,OAAO,CAACT,KAAD,CAAR,CAApB;AACH,OAFD;AAGAW,MAAAA,MAAM,CAACJ,IAAP,CAAYO,KAAZ;AACH,KAND;AAOH;;AACD,SAAOH,MAAP;AAEH,CAbM","sourcesContent":["export const IsJsonString = (str) => {\r\n    try {\r\n        JSON.parse(str);\r\n    } catch (e) {\r\n        return false;\r\n    }\r\n    return true;\r\n};\r\n\r\nexport const IsRequiredField = (requiredFields,field,errors) => {\r\n        if(requiredFields.includes(field.key) && field.value===\"\"){\r\n            errors[field.key] = \"Required\";\r\n        }else{\r\n            delete errors[field.key];\r\n        }\r\n\r\n    return errors;\r\n}\r\n\r\nexport const IsRequiredFields = (requiredFields,fields,errors) => {\r\n    requiredFields.forEach(function(val, index){\r\n            if(!fields[val] || fields[val]===\"\"){\r\n                errors[val]= \"Required\"\r\n            }\r\n    })\r\n    return errors;\r\n}\r\n\r\nexport const ObjectToArray = (obj) => {\r\n    let arr = [];\r\n    Object.keys(obj).map((key) => {\r\n        arr.push(obj[key])\r\n    })\r\n    return arr;\r\n}\r\n\r\nexport const RenameKeys = (arr,oldKeys,newKeys) => {\r\n    let newArr = [];\r\n    if(arr.length>0){\r\n        arr.forEach(function(element){\r\n            let newEl = {}\r\n            newKeys.forEach(function(key,index) {\r\n                newEl[key] = element[oldKeys[index]]\r\n            })\r\n            newArr.push(newEl);\r\n        })\r\n    }\r\n    return newArr;\r\n\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}