{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\barcode\\\\src\\\\containers\\\\users\\\\userModal.js\";\nimport React from \"react\";\nimport { Col, Row, Form, FormGroup, Label, Button, ModalBody, ModalFooter, Input } from \"reactstrap\";\nimport Translate from \"../../Translate\";\nimport jwt from \"jwt-simple\";\n\nvar AddContact = function AddContact(_ref) {\n  var id = _ref.id,\n      props = _ref.props;\n  var firstname, lastname, username, password, position, active;\n  var user = props.user[0];\n\n  if (user) {\n    firstname = user.firstname;\n    lastname = user.lastname;\n  }\n\n  function handleInputChange(key, value) {\n    console.log(key, value);\n  }\n\n  console.log(props.user);\n  return React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, React.createElement(Form, {\n    onSubmit: function onSubmit(e) {\n      e.preventDefault();\n\n      if (!firstname.value.trim() || !username.value.trim() || !password.value.trim()) {\n        return;\n      }\n\n      props.addUser({\n        firstname: firstname.value,\n        lastname: lastname.value,\n        username: username.value,\n        password: jwt.encode(\"\", password.value),\n        position: 0,\n        active: 0\n      });\n      firstname.value = \"\";\n      lastname.value = \"\";\n      username.value = \"\";\n      password.value = \"\";\n      position.value = \"\";\n      active.value = \"\";\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, React.createElement(ModalBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, React.createElement(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, React.createElement(Col, {\n    md: 6,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, React.createElement(FormGroup, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, React.createElement(Label, {\n    for: \"firstName\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, React.createElement(Translate, {\n    name: \"firstname\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  })), React.createElement(\"input\", {\n    className: \"form-control\",\n    type: \"text\",\n    name: \"firstname\",\n    id: \"firstName\",\n    onChange: function onChange(event) {\n      return handleInputChange(\"firstname\", event.target.value);\n    } // ref={node => (firstname = node)}\n    // value={firstname}\n    ,\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }))), React.createElement(Col, {\n    md: 6,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, React.createElement(FormGroup, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, React.createElement(Label, {\n    for: \"lastName\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, React.createElement(Translate, {\n    name: \"lastname\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  })), React.createElement(\"input\", {\n    className: \"form-control\",\n    type: \"text\",\n    name: \"lastname\",\n    id: \"lastName\",\n    ref: function ref(node) {\n      return lastname = node;\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  })))), React.createElement(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, React.createElement(Col, {\n    md: 6,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, React.createElement(FormGroup, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, React.createElement(Label, {\n    for: \"username\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, React.createElement(Translate, {\n    name: \"username\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  })), React.createElement(\"input\", {\n    className: \"form-control\",\n    type: \"text\",\n    name: \"username\",\n    id: \"username\",\n    ref: function ref(node) {\n      return username = node;\n    },\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }))), React.createElement(Col, {\n    md: 6,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, React.createElement(FormGroup, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, React.createElement(Label, {\n    for: \"password\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, React.createElement(Translate, {\n    name: \"password\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  })), React.createElement(\"input\", {\n    className: \"form-control\",\n    type: \"password\",\n    name: \"password\",\n    id: \"password\",\n    ref: function ref(node) {\n      return password = node;\n    },\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  })))), React.createElement(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, React.createElement(Col, {\n    md: 6,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, React.createElement(FormGroup, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, React.createElement(Label, {\n    for: \"position\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }, React.createElement(Translate, {\n    name: \"position\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  })), React.createElement(Input, {\n    type: \"select\",\n    id: \"position\",\n    name: \"position\",\n    ref: function ref(node) {\n      return position = node;\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, props.positions.map(function (item, key) {\n    return React.createElement(\"option\", {\n      value: item.id,\n      key: key,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, item.name);\n  })))), React.createElement(Col, {\n    md: 6,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }, React.createElement(FormGroup, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }, React.createElement(Label, {\n    for: \"active\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }, React.createElement(Translate, {\n    name: \"active\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  })), React.createElement(Input, {\n    type: \"select\",\n    id: \"active\",\n    name: \"active\",\n    ref: function ref(node) {\n      return active = node;\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }, React.createElement(\"option\", {\n    value: \"0\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }, \"\\u0531\\u0575\\u0578\"), React.createElement(\"option\", {\n    value: \"1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  }, \"\\u0548\\u0579\")))))), React.createElement(ModalFooter, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  }, React.createElement(Button, {\n    color: \"primary\",\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124\n    },\n    __self: this\n  }, React.createElement(Translate, {\n    name: \"add\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125\n    },\n    __self: this\n  })))));\n};\n\nexport default AddContact;","map":{"version":3,"sources":["C:/Users/User/Desktop/barcode/src/containers/users/userModal.js"],"names":["React","Col","Row","Form","FormGroup","Label","Button","ModalBody","ModalFooter","Input","Translate","jwt","AddContact","id","props","firstname","lastname","username","password","position","active","user","handleInputChange","key","value","console","log","e","preventDefault","trim","addUser","encode","event","target","node","positions","map","item","name"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { Col, Row, Form, FormGroup, Label, Button, ModalBody, ModalFooter,Input } from \"reactstrap\";\r\nimport Translate from \"../../Translate\";\r\nimport jwt from \"jwt-simple\";\r\n\r\nconst AddContact = ({ id, props }) => {\r\n\r\n    let firstname, lastname, username, password, position, active;\r\n    let user = props.user[0]\r\n    if(user){\r\n        firstname = user.firstname;\r\n        lastname = user.lastname;\r\n    }\r\n    function handleInputChange(key,value){\r\n        console.log(key,value)\r\n    }\r\n    console.log(props.user)\r\n    return (\r\n        <React.Fragment>\r\n            <Form\r\n                onSubmit={e => {\r\n                    e.preventDefault();\r\n                    if (!firstname.value.trim() || !username.value.trim() || !password.value.trim()) {\r\n                        return;\r\n                    }\r\n                    props.addUser({\r\n                        firstname:firstname.value,\r\n                        lastname:lastname.value,\r\n                        username:username.value,\r\n                        password:jwt.encode(\"\",password.value),\r\n                        position:0,\r\n                        active:0\r\n                    });\r\n                    firstname.value = \"\";\r\n                    lastname.value = \"\";\r\n                    username.value = \"\";\r\n                    password.value = \"\";\r\n                    position.value = \"\";\r\n                    active.value = \"\";\r\n                }}\r\n            >\r\n                <ModalBody>\r\n                    <Row>\r\n                        <Col md={6}>\r\n                            <FormGroup>\r\n                                <Label for=\"firstName\"><Translate name=\"firstname\"/></Label>\r\n                                <input\r\n                                    className=\"form-control\"\r\n                                    type=\"text\"\r\n                                    name=\"firstname\"\r\n                                    id=\"firstName\"\r\n                                    onChange={event => handleInputChange(\"firstname\",event.target.value)}\r\n                                    // ref={node => (firstname = node)}\r\n                                    // value={firstname}\r\n                                    required\r\n                                />\r\n                            </FormGroup>\r\n                        </Col>\r\n                        <Col md={6}>\r\n                            <FormGroup>\r\n                                <Label for=\"lastName\"><Translate name=\"lastname\"/></Label>\r\n                                <input\r\n                                    className=\"form-control\"\r\n                                    type=\"text\"\r\n                                    name=\"lastname\"\r\n                                    id=\"lastName\"\r\n                                    ref={node => (lastname = node)}\r\n                                />\r\n                            </FormGroup>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col md={6}>\r\n                            <FormGroup>\r\n                                <Label for=\"username\"><Translate name=\"username\"/></Label>\r\n                                <input\r\n                                    className=\"form-control\"\r\n                                    type=\"text\"\r\n                                    name=\"username\"\r\n                                    id=\"username\"\r\n                                    ref={node => (username = node)}\r\n                                    required\r\n                                />\r\n                            </FormGroup>\r\n                        </Col>\r\n                        <Col md={6}>\r\n                            <FormGroup>\r\n                                <Label for=\"password\"><Translate name=\"password\"/></Label>\r\n                                <input\r\n                                    className=\"form-control\"\r\n                                    type=\"password\"\r\n                                    name=\"password\"\r\n                                    id=\"password\"\r\n                                    ref={node => (password = node)}\r\n                                    required\r\n                                />\r\n                            </FormGroup>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col md={6}>\r\n                            <FormGroup>\r\n                                <Label for=\"position\"><Translate name=\"position\"/></Label>\r\n                                <Input type=\"select\" id=\"position\" name=\"position\" ref={node => (position = node)} >\r\n                                    {props.positions.map((item, key)=>{\r\n                                        return <option value={item.id} key={key}>{item.name}</option>\r\n                                    })}\r\n                                </Input>\r\n                            </FormGroup>\r\n                        </Col>\r\n                        <Col md={6}>\r\n                            <FormGroup>\r\n                                <Label for=\"active\"><Translate name=\"active\"/></Label>\r\n                                <Input type=\"select\" id=\"active\" name=\"active\" ref={node => (active = node)} >\r\n                                    <option value=\"0\">Այո</option>\r\n                                    <option value=\"1\">Ոչ</option>\r\n                                </Input>\r\n                            </FormGroup>\r\n                        </Col>\r\n                    </Row>\r\n\r\n                </ModalBody>\r\n                <ModalFooter>\r\n                    <Button color=\"primary\" type=\"submit\">\r\n                        <Translate name=\"add\"/>\r\n                    </Button>\r\n                </ModalFooter>\r\n            </Form>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default AddContact;                                             "]},"metadata":{},"sourceType":"module"}