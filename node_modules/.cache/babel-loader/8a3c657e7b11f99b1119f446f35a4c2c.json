{"ast":null,"code":"import { GET_CATEGORIES_REQUEST, GET_CATEGORIES_FAIL, GET_CATEGORIES_SUCCESS, GET_CATEGORY_REQUEST, GET_CATEGORY_FAIL, GET_CATEGORY_SUCCESS, ADD_CATEGORY_REQUEST, ADD_CATEGORY_FAIL, ADD_CATEGORY_SUCCESS, EDIT_CATEGORY_REQUEST, EDIT_CATEGORY_FAIL, EDIT_CATEGORY_SUCCESS, DELETE_CATEGORY_REQUEST, DELETE_CATEGORY_FAIL, DELETE_CATEGORY_SUCCESS, SET_MODAL_VALUES, TOGGLE_MODAL } from \"./actionTypes\";\nvar cols = 'id,name';\nvar url = \"Items/Category\";\nexport var getCategories = function getCategories() {\n  return {\n    types: [GET_CATEGORIES_REQUEST, GET_CATEGORIES_FAIL, GET_CATEGORIES_SUCCESS],\n    promise: function promise(apiClient) {\n      return apiClient.get(url, JSON.stringify({\n        cols: cols\n      }));\n    }\n  };\n};\nexport var getCategory = function getCategory(id) {\n  return {\n    types: [GET_CATEGORY_REQUEST, GET_CATEGORY_FAIL, GET_CATEGORY_SUCCESS],\n    promise: function promise(apiClient) {\n      return apiClient.get(url, JSON.stringify({\n        param: {\n          id: id\n        }\n      }));\n    }\n  };\n};\nexport var addCategory = function addCategory(data) {\n  console.log(data);\n  var types = [ADD_CATEGORY_REQUEST, ADD_CATEGORY_FAIL, ADD_CATEGORY_SUCCESS];\n\n  var promise = function promise(apiClient) {\n    return apiClient.post(url, JSON.stringify({\n      data: data,\n      cols: cols\n    }));\n  };\n\n  if (data.id) {\n    types = [EDIT_CATEGORY_REQUEST, EDIT_CATEGORY_FAIL, EDIT_CATEGORY_SUCCESS];\n\n    promise = function promise(apiClient) {\n      return apiClient.put(url, JSON.stringify({\n        data: data,\n        cols: cols,\n        id: data.id\n      }));\n    };\n  }\n\n  return {\n    types: types,\n    promise: promise\n  };\n};\nexport var deleteCategory = function deleteCategory(id) {\n  return {\n    types: [DELETE_CATEGORY_REQUEST, DELETE_CATEGORY_FAIL, DELETE_CATEGORY_SUCCESS],\n    promise: function promise(apiClient) {\n      return apiClient.delete(url, JSON.stringify({\n        id: id,\n        cols: cols\n      }));\n    }\n  };\n};\nexport var categoryModal = function categoryModal(type, modal) {\n  return {\n    type: type.toUpperCase() + '_MODAL',\n    modal: modal\n  };\n};\nexport var setModalValues = function setModalValues(value) {\n  return {\n    type: SET_MODAL_VALUES,\n    value: value\n  };\n};\nexport var toggleModal = function toggleModal(modalType, id) {\n  return {\n    type: TOGGLE_MODAL,\n    modalType: modalType,\n    id: id\n  };\n};","map":{"version":3,"sources":["C:/Users/User/Desktop/barcode/src/redux/categories/actions.js"],"names":["GET_CATEGORIES_REQUEST","GET_CATEGORIES_FAIL","GET_CATEGORIES_SUCCESS","GET_CATEGORY_REQUEST","GET_CATEGORY_FAIL","GET_CATEGORY_SUCCESS","ADD_CATEGORY_REQUEST","ADD_CATEGORY_FAIL","ADD_CATEGORY_SUCCESS","EDIT_CATEGORY_REQUEST","EDIT_CATEGORY_FAIL","EDIT_CATEGORY_SUCCESS","DELETE_CATEGORY_REQUEST","DELETE_CATEGORY_FAIL","DELETE_CATEGORY_SUCCESS","SET_MODAL_VALUES","TOGGLE_MODAL","cols","url","getCategories","types","promise","apiClient","get","JSON","stringify","getCategory","id","param","addCategory","data","console","log","post","put","deleteCategory","delete","categoryModal","type","modal","toUpperCase","setModalValues","value","toggleModal","modalType"],"mappings":"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","sourcesContent":["import {\r\n    GET_CATEGORIES_REQUEST,GET_CATEGORIES_FAIL,GET_CATEGORIES_SUCCESS,\r\n    GET_CATEGORY_REQUEST,GET_CATEGORY_FAIL,GET_CATEGORY_SUCCESS,\r\n    ADD_CATEGORY_REQUEST,ADD_CATEGORY_FAIL,ADD_CATEGORY_SUCCESS,\r\n    EDIT_CATEGORY_REQUEST,EDIT_CATEGORY_FAIL,EDIT_CATEGORY_SUCCESS,\r\n    DELETE_CATEGORY_REQUEST,DELETE_CATEGORY_FAIL,DELETE_CATEGORY_SUCCESS,\r\n    SET_MODAL_VALUES,TOGGLE_MODAL\r\n} from \"./actionTypes\";\r\n\r\n\r\nlet cols =  'id,name';\r\nlet url = `Items/Category`;\r\nexport const getCategories = () => {\r\n    return {\r\n        types: [GET_CATEGORIES_REQUEST,GET_CATEGORIES_FAIL,GET_CATEGORIES_SUCCESS],\r\n        promise: (apiClient) => apiClient.get(url, JSON.stringify({ cols }))\r\n    }\r\n}\r\n\r\nexport const getCategory = ( id ) => {\r\n    return {\r\n        types: [GET_CATEGORY_REQUEST,GET_CATEGORY_FAIL,GET_CATEGORY_SUCCESS],\r\n        promise: (apiClient) => apiClient.get(url, JSON.stringify({ param:{id} }))\r\n    }\r\n};\r\n\r\nexport const addCategory = (data) => {\r\n    console.log(data)\r\n    let types = [ADD_CATEGORY_REQUEST,ADD_CATEGORY_FAIL,ADD_CATEGORY_SUCCESS];\r\n    let promise = (apiClient) => apiClient.post(url,JSON.stringify({data,cols}))\r\n    if(data.id){\r\n        types = [EDIT_CATEGORY_REQUEST,EDIT_CATEGORY_FAIL,EDIT_CATEGORY_SUCCESS];\r\n        promise = (apiClient) => apiClient.put(url,JSON.stringify({data,cols,id:data.id}));\r\n    }\r\n    return {\r\n        types: types,\r\n        promise: promise\r\n    }\r\n};\r\n\r\nexport const deleteCategory = ( id ) => {\r\n    return {\r\n        types: [DELETE_CATEGORY_REQUEST,DELETE_CATEGORY_FAIL,DELETE_CATEGORY_SUCCESS],\r\n        promise: (apiClient) => apiClient.delete(url, JSON.stringify({ id,cols }))\r\n    }\r\n};\r\n\r\n\r\nexport const categoryModal = (type,modal) => {\r\n    return {\r\n        type: type.toUpperCase()+'_MODAL',\r\n        modal\r\n    }\r\n}\r\n\r\nexport const setModalValues = (value) => {\r\n    return {\r\n        type: SET_MODAL_VALUES,\r\n        value\r\n    }\r\n}\r\nexport const toggleModal = (modalType,id) => {\r\n    return {\r\n        type: TOGGLE_MODAL,\r\n        modalType,\r\n        id\r\n\r\n    }\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}