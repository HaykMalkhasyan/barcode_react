{"ast":null,"code":"import { GET_POSITIONS_REQUEST, GET_POSITIONS_FAIL, GET_POSITIONS_SUCCESS, GET_POSITION_REQUEST, GET_POSITION_FAIL, GET_POSITION_SUCCESS, ADD_POSITION_REQUEST, ADD_POSITION_FAIL, ADD_POSITION_SUCCESS, EDIT_POSITION_REQUEST, EDIT_POSITION_FAIL, EDIT_POSITION_SUCCESS, DELETE_POSITION_REQUEST, DELETE_POSITION_FAIL, DELETE_POSITION_SUCCESS, SET_MODAL_VALUES, HANDLE } from \"./actionTypes\";\nvar cols = 'id,name';\nvar url = \"User/Position\";\nexport var getPositions = function getPositions() {\n  return {\n    types: [GET_POSITIONS_REQUEST, GET_POSITIONS_FAIL, GET_POSITIONS_SUCCESS],\n    promise: function promise(apiClient) {\n      return apiClient.get(url, JSON.stringify({\n        cols: cols\n      }));\n    }\n  };\n};\nexport var getPosition = function getPosition(id) {\n  return {\n    types: [GET_POSITION_REQUEST, GET_POSITION_FAIL, GET_POSITION_SUCCESS],\n    promise: function promise(apiClient) {\n      return apiClient.get(url, JSON.stringify({\n        param: {\n          id: id\n        }\n      }));\n    }\n  };\n};\nexport var addPosition = function addPosition(data) {\n  var types = [ADD_POSITION_REQUEST, ADD_POSITION_FAIL, ADD_POSITION_SUCCESS];\n\n  var promise = function promise(apiClient) {\n    return apiClient.post(url, JSON.stringify({\n      data: data,\n      cols: cols\n    }));\n  };\n\n  if (data.id) {\n    types = [EDIT_POSITION_REQUEST, EDIT_POSITION_FAIL, EDIT_POSITION_SUCCESS];\n\n    promise = function promise(apiClient) {\n      return apiClient.put(url, JSON.stringify({\n        data: data,\n        cols: cols,\n        id: data.id\n      }));\n    };\n  }\n\n  return {\n    types: types,\n    promise: promise\n  };\n};\nexport var deletePosition = function deletePosition(id) {\n  return {\n    types: [DELETE_POSITION_REQUEST, DELETE_POSITION_FAIL, DELETE_POSITION_SUCCESS],\n    promise: function promise(apiClient) {\n      return apiClient.delete(url, JSON.stringify({\n        id: id,\n        cols: cols\n      }));\n    }\n  };\n};\nexport var handle = function handle(id, parentId) {\n  return {\n    type: HANDLE,\n    id: id,\n    parentId: parentId\n  };\n};\nexport var positionModal = function positionModal(type, modal) {\n  return {\n    type: type.toUpperCase() + '_MODAL',\n    modal: modal\n  };\n};\nexport var setModalValues = function setModalValues(key, value) {\n  return {\n    type: SET_MODAL_VALUES,\n    key: key,\n    value: value\n  };\n};","map":{"version":3,"sources":["C:/Users/User/Desktop/barcode/src/redux/positions/actions.js"],"names":["GET_POSITIONS_REQUEST","GET_POSITIONS_FAIL","GET_POSITIONS_SUCCESS","GET_POSITION_REQUEST","GET_POSITION_FAIL","GET_POSITION_SUCCESS","ADD_POSITION_REQUEST","ADD_POSITION_FAIL","ADD_POSITION_SUCCESS","EDIT_POSITION_REQUEST","EDIT_POSITION_FAIL","EDIT_POSITION_SUCCESS","DELETE_POSITION_REQUEST","DELETE_POSITION_FAIL","DELETE_POSITION_SUCCESS","SET_MODAL_VALUES","HANDLE","cols","url","getPositions","types","promise","apiClient","get","JSON","stringify","getPosition","id","param","addPosition","data","post","put","deletePosition","delete","handle","parentId","type","positionModal","modal","toUpperCase","setModalValues","key","value"],"mappings":"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","sourcesContent":["import {\r\n    GET_POSITIONS_REQUEST,GET_POSITIONS_FAIL,GET_POSITIONS_SUCCESS,\r\n    GET_POSITION_REQUEST,GET_POSITION_FAIL,GET_POSITION_SUCCESS,\r\n    ADD_POSITION_REQUEST,ADD_POSITION_FAIL,ADD_POSITION_SUCCESS,\r\n    EDIT_POSITION_REQUEST,EDIT_POSITION_FAIL,EDIT_POSITION_SUCCESS,\r\n    DELETE_POSITION_REQUEST,DELETE_POSITION_FAIL,DELETE_POSITION_SUCCESS,\r\n    SET_MODAL_VALUES,\r\n    HANDLE\r\n} from \"./actionTypes\";\r\n\r\nlet cols =  'id,name';\r\nlet url = `User/Position`;\r\nexport const getPositions = () => {\r\n    return {\r\n        types: [GET_POSITIONS_REQUEST,GET_POSITIONS_FAIL,GET_POSITIONS_SUCCESS],\r\n        promise: (apiClient) => apiClient.get(url, JSON.stringify({ cols }))\r\n    }\r\n}\r\n\r\n\r\nexport const getPosition = ( id ) => {\r\n    return {\r\n        types: [GET_POSITION_REQUEST,GET_POSITION_FAIL,GET_POSITION_SUCCESS],\r\n        promise: (apiClient) => apiClient.get(url, JSON.stringify({ param:{id} }))\r\n    }\r\n};\r\n\r\nexport const addPosition = (data) => {\r\n    let types = [ADD_POSITION_REQUEST,ADD_POSITION_FAIL,ADD_POSITION_SUCCESS];\r\n    let promise = (apiClient) => apiClient.post(url,JSON.stringify({data,cols}))\r\n    if(data.id){\r\n        types = [EDIT_POSITION_REQUEST,EDIT_POSITION_FAIL,EDIT_POSITION_SUCCESS];\r\n        promise = (apiClient) => apiClient.put(url,JSON.stringify({data,cols,id:data.id}));\r\n    }\r\n    return {\r\n        types: types,\r\n        promise: promise\r\n    }\r\n};\r\n\r\nexport const deletePosition = ( id ) => {\r\n    return {\r\n        types: [DELETE_POSITION_REQUEST,DELETE_POSITION_FAIL,DELETE_POSITION_SUCCESS],\r\n        promise: (apiClient) => apiClient.delete(url, JSON.stringify({ id,cols }))\r\n    }\r\n};\r\n\r\nexport const handle = (id,parentId) => {\r\n    return {\r\n        type: HANDLE,\r\n        id,\r\n        parentId,\r\n    }\r\n}\r\n\r\nexport const positionModal = (type,modal) => {\r\n    return {\r\n        type: type.toUpperCase()+'_MODAL',\r\n        modal\r\n    }\r\n}\r\n\r\nexport const setModalValues = (key,value) => {\r\n    return {\r\n        type: SET_MODAL_VALUES,\r\n        key,\r\n        value\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}