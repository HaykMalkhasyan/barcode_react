{"ast":null,"code":"import _toConsumableArray from \"C:\\\\Users\\\\User\\\\Desktop\\\\barcode\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"C:\\\\Users\\\\User\\\\Desktop\\\\barcode\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport { GET_PRODUCTS_REQUEST, GET_PRODUCTS_FAIL, GET_PRODUCTS_SUCCESS, GET_PRODUCT_REQUEST, GET_PRODUCT_FAIL, GET_PRODUCT_SUCCESS, ADD_PRODUCT_REQUEST, ADD_PRODUCT_FAIL, ADD_PRODUCT_SUCCESS, EDIT_PRODUCT_REQUEST, EDIT_PRODUCT_FAIL, EDIT_PRODUCT_SUCCESS, DELETE_PRODUCT_REQUEST, DELETE_PRODUCT_FAIL, DELETE_PRODUCT_SUCCESS, GET_BARCODE_TYPES_REQUEST, GET_BARCODE_TYPES_FAIL, GET_BARCODE_TYPES_SUCCESS, ADD_BARCODE, DELETE_BARCODE, SET_PRODUCT_MODAL, TOGGLE_PRODUCT_MODAL } from \"./actionTypes\";\nimport { IsRequiredFields, Remove } from \"../../utility/utils\";\nvar INIT_STATE = {\n  products: [],\n  product: {},\n  barcodeTypes: [],\n  modal: {},\n  loading: false,\n  success: false,\n  fail: false,\n  errors: {}\n};\nexport default (function () {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : INIT_STATE;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case GET_PRODUCTS_REQUEST:\n      return _objectSpread({}, state, {\n        loading: true,\n        success: false,\n        fail: false,\n        errors: {}\n      });\n\n    case GET_PRODUCTS_FAIL:\n      return _objectSpread({}, state, {\n        loading: false,\n        success: false,\n        fail: true\n      });\n\n    case GET_PRODUCTS_SUCCESS:\n      return _objectSpread({}, state, {\n        loading: false,\n        success: true,\n        fail: false,\n        PRODUCTs: JSON.parse(action.result.data),\n        errors: {}\n      });\n\n    case GET_PRODUCT_REQUEST:\n      return _objectSpread({}, state, {\n        loading: true,\n        success: false,\n        fail: false,\n        errors: {}\n      });\n\n    case GET_PRODUCT_FAIL:\n      return _objectSpread({}, state, {\n        loading: false,\n        success: false,\n        fail: true\n      });\n\n    case GET_PRODUCT_SUCCESS:\n      return _objectSpread({}, state, {\n        loading: false,\n        success: true,\n        fail: false,\n        product: JSON.parse(action.result.data)[0],\n        errors: {}\n      });\n\n    case GET_BARCODE_TYPES_REQUEST:\n      return _objectSpread({}, state, {\n        loading: true,\n        success: false,\n        fail: false,\n        errors: {}\n      });\n\n    case GET_BARCODE_TYPES_FAIL:\n      return _objectSpread({}, state, {\n        loading: false,\n        success: false,\n        fail: true\n      });\n\n    case GET_BARCODE_TYPES_SUCCESS:\n      return _objectSpread({}, state, {\n        loading: false,\n        success: true,\n        fail: false,\n        barcodeTypes: JSON.parse(action.result.data),\n        errors: {}\n      });\n\n    case ADD_PRODUCT_REQUEST:\n      return _objectSpread({}, state, {\n        loading: true,\n        success: false,\n        fail: false\n      });\n\n    case ADD_PRODUCT_FAIL:\n      return _objectSpread({}, state, {\n        loading: false,\n        success: false,\n        fail: true\n      });\n\n    case ADD_PRODUCT_SUCCESS:\n      return _objectSpread({}, state, {\n        loading: false,\n        success: true,\n        fail: false,\n        modal: false,\n        product: [].concat(_toConsumableArray(state.product), [JSON.parse(action.result.data)[0]])\n      });\n\n    case EDIT_PRODUCT_REQUEST:\n      return _objectSpread({}, state, {\n        loading: true,\n        success: false,\n        fail: false\n      });\n\n    case EDIT_PRODUCT_FAIL:\n      return _objectSpread({}, state, {\n        loading: false,\n        success: false,\n        fail: true\n      });\n\n    case EDIT_PRODUCT_SUCCESS:\n      return _objectSpread({}, state, {\n        loading: false,\n        success: true,\n        fail: false,\n        modal: false,\n        product: {},\n        products: JSON.parse(action.result.data)\n      });\n\n    case DELETE_PRODUCT_REQUEST:\n      return _objectSpread({}, state, {\n        loading: true,\n        success: false,\n        fail: false\n      });\n\n    case DELETE_PRODUCT_FAIL:\n      return _objectSpread({}, state, {\n        loading: false,\n        success: false,\n        fail: true\n      });\n\n    case DELETE_PRODUCT_SUCCESS:\n      return _objectSpread({}, state, {\n        loading: false,\n        success: true,\n        fail: false,\n        modal: false,\n        product: {},\n        products: JSON.parse(action.result.data)\n      });\n\n    case SET_PRODUCT_MODAL:\n      console.log(\"DFh\");\n      state.product[action.key] = action.value;\n      return _objectSpread({}, state);\n\n    case ADD_BARCODE:\n      if (!state.product.barcode) {\n        state.product.barcode = [];\n      }\n\n      state.product.barcode.push({\n        barcode: action.code\n      });\n      return _objectSpread({}, state);\n\n    case DELETE_BARCODE:\n      if (!state.product.barcode) {\n        state.product.barcode = [];\n      }\n\n      state.product.barcode = Remove(state.product.barcode, {\n        barcode: action.code\n      }, 'barcode');\n      return _objectSpread({}, state);\n\n    case TOGGLE_PRODUCT_MODAL:\n      var newModal = {};\n      newModal[action.modalType] = !state.modal[action.modalType];\n      var product = action.modalType === \"edit\" ? _objectSpread({}, state.product, action.obj) : _objectSpread({}, action.obj);\n      return _objectSpread({}, state, {\n        modal: _objectSpread({}, state.modal, newModal),\n        product: product\n      });\n\n    default:\n      return _objectSpread({}, state);\n  }\n});","map":{"version":3,"sources":["C:/Users/User/Desktop/barcode/src/redux/products/reducer.js"],"names":["GET_PRODUCTS_REQUEST","GET_PRODUCTS_FAIL","GET_PRODUCTS_SUCCESS","GET_PRODUCT_REQUEST","GET_PRODUCT_FAIL","GET_PRODUCT_SUCCESS","ADD_PRODUCT_REQUEST","ADD_PRODUCT_FAIL","ADD_PRODUCT_SUCCESS","EDIT_PRODUCT_REQUEST","EDIT_PRODUCT_FAIL","EDIT_PRODUCT_SUCCESS","DELETE_PRODUCT_REQUEST","DELETE_PRODUCT_FAIL","DELETE_PRODUCT_SUCCESS","GET_BARCODE_TYPES_REQUEST","GET_BARCODE_TYPES_FAIL","GET_BARCODE_TYPES_SUCCESS","ADD_BARCODE","DELETE_BARCODE","SET_PRODUCT_MODAL","TOGGLE_PRODUCT_MODAL","IsRequiredFields","Remove","INIT_STATE","products","product","barcodeTypes","modal","loading","success","fail","errors","state","action","type","PRODUCTs","JSON","parse","result","data","console","log","key","value","barcode","push","code","newModal","modalType","obj"],"mappings":"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","sourcesContent":["import {\r\n    GET_PRODUCTS_REQUEST, GET_PRODUCTS_FAIL, GET_PRODUCTS_SUCCESS,\r\n    GET_PRODUCT_REQUEST, GET_PRODUCT_FAIL, GET_PRODUCT_SUCCESS,\r\n    ADD_PRODUCT_REQUEST, ADD_PRODUCT_FAIL, ADD_PRODUCT_SUCCESS,\r\n    EDIT_PRODUCT_REQUEST,EDIT_PRODUCT_FAIL,EDIT_PRODUCT_SUCCESS,\r\n    DELETE_PRODUCT_REQUEST,DELETE_PRODUCT_FAIL,DELETE_PRODUCT_SUCCESS,\r\n    GET_BARCODE_TYPES_REQUEST,GET_BARCODE_TYPES_FAIL,GET_BARCODE_TYPES_SUCCESS,\r\n    ADD_BARCODE,DELETE_BARCODE,\r\n    SET_PRODUCT_MODAL,TOGGLE_PRODUCT_MODAL\r\n} from \"./actionTypes\";\r\nimport {IsRequiredFields,Remove} from \"../../utility/utils\";\r\n\r\n\r\nconst INIT_STATE = {\r\n    products: [],\r\n    product: {},\r\n    barcodeTypes: [],\r\n    modal: {},\r\n    loading: false,\r\n    success: false,\r\n    fail: false,\r\n    errors: {}\r\n};\r\n\r\nexport default (state = INIT_STATE, action) => {\r\n    switch (action.type) {\r\n        case GET_PRODUCTS_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n                success: false,\r\n                fail: false,\r\n                errors: {},\r\n            };\r\n        case GET_PRODUCTS_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: false,\r\n                fail: true,\r\n            };\r\n        case GET_PRODUCTS_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: true,\r\n                fail: false,\r\n                PRODUCTs: JSON.parse(action.result.data),\r\n                errors: {},\r\n            };\r\n        case GET_PRODUCT_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n                success: false,\r\n                fail: false,\r\n                errors: {},\r\n            };\r\n        case GET_PRODUCT_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: false,\r\n                fail: true,\r\n            };\r\n        case GET_PRODUCT_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: true,\r\n                fail: false,\r\n                product: JSON.parse(action.result.data)[0],\r\n                errors: {},\r\n            };\r\n        case GET_BARCODE_TYPES_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n                success: false,\r\n                fail: false,\r\n                errors: {},\r\n            };\r\n        case GET_BARCODE_TYPES_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: false,\r\n                fail: true,\r\n            };\r\n        case GET_BARCODE_TYPES_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: true,\r\n                fail: false,\r\n                barcodeTypes: JSON.parse(action.result.data),\r\n                errors: {},\r\n            };\r\n        case ADD_PRODUCT_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n                success: false,\r\n                fail: false,\r\n            }\r\n        case ADD_PRODUCT_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: false,\r\n                fail: true,\r\n\r\n            };\r\n        case ADD_PRODUCT_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: true,\r\n                fail: false,\r\n                modal: false,\r\n                product: [\r\n                    ...state.product,\r\n                    JSON.parse(action.result.data)[0]\r\n\r\n                ]\r\n            };\r\n        case EDIT_PRODUCT_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n                success: false,\r\n                fail: false,\r\n            }\r\n        case EDIT_PRODUCT_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: false,\r\n                fail: true,\r\n\r\n            };\r\n        case EDIT_PRODUCT_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: true,\r\n                fail: false,\r\n                modal: false,\r\n                product: {},\r\n                products: JSON.parse(action.result.data)\r\n            };\r\n        case DELETE_PRODUCT_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n                success: false,\r\n                fail: false,\r\n            }\r\n        case DELETE_PRODUCT_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: false,\r\n                fail: true,\r\n\r\n            };\r\n        case DELETE_PRODUCT_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: true,\r\n                fail: false,\r\n                modal: false,\r\n                product: {},\r\n                products: JSON.parse(action.result.data)\r\n            };\r\n        case SET_PRODUCT_MODAL:\r\n            console.log(\"DFh\")\r\n            state.product[action.key] = action.value\r\n            return {\r\n                ...state,\r\n            }\r\n        case ADD_BARCODE:\r\n            if(!state.product.barcode){\r\n                state.product.barcode=[];\r\n            }\r\n            state.product.barcode.push({barcode:action.code})\r\n            return {\r\n                ...state,\r\n            }\r\n        case DELETE_BARCODE:\r\n\r\n            if(!state.product.barcode){\r\n                state.product.barcode=[];\r\n            }\r\n            state.product.barcode=Remove(state.product.barcode,{barcode:action.code},'barcode')\r\n            return {\r\n                ...state,\r\n            }\r\n        case TOGGLE_PRODUCT_MODAL:\r\n            let newModal = {};\r\n            newModal[action.modalType] = !state.modal[action.modalType];\r\n            let product = (action.modalType===\"edit\")?{\r\n                ...state.product,\r\n                ...action.obj\r\n            }:{\r\n                ...action.obj\r\n            }\r\n            return {\r\n                ...state,\r\n                modal: {\r\n                    ...state.modal,\r\n                    ...newModal\r\n                },\r\n                product\r\n            }\r\n        default:\r\n            return {...state};\r\n    }\r\n};\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}