{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\User\\\\Desktop\\\\barcode\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\User\\\\Desktop\\\\barcode\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\User\\\\Desktop\\\\barcode\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\User\\\\Desktop\\\\barcode\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\User\\\\Desktop\\\\barcode\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\barcode\\\\src\\\\containers\\\\pages\\\\products\\\\modal\\\\tab\\\\productTab.js\";\nimport React, { Component } from \"react\";\nimport { TabContent, TabPane, Nav, NavItem, NavLink, Row, Col, FormGroup, Label, Input } from \"reactstrap\";\nimport classnames from \"classnames\";\nimport Translate from \"../../../../../Translate\";\nimport MultiSelect from \"../../../../../components/select/multiSelect\";\nimport { RenameKeys, ObjectToArray } from \"../../../../../utility/utils\";\nimport GroupModal from \"./group/groupModal\"; // import DropdownComponent from \"../../../../../components/dropdown/dropdown\";\n// import {setModalValues} from \"../../../../../redux/products/actions\";\n\nimport CodeContent from \"./code/content\";\nimport ButtonUi from \"../../../../../components/buttons/buttonUi\";\n\nvar TabsBorderBottom =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(TabsBorderBottom, _Component);\n\n  function TabsBorderBottom(props) {\n    var _this;\n\n    _classCallCheck(this, TabsBorderBottom);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(TabsBorderBottom).call(this, props));\n\n    _this.toggle1 = function () {\n      _this.setState({\n        modal: !_this.state.modal\n      });\n    };\n\n    _this.toggle = function (tab) {\n      if (_this.state.activeTab !== tab) {\n        _this.setState({\n          activeTab: tab\n        });\n      }\n    };\n\n    _this.state = {\n      activeTab: \"code\",\n      modal: false,\n      key: null\n    };\n\n    _this.props.supplierActions(\"getAll\");\n\n    _this.props.groupActions(\"getAll\");\n\n    return _this;\n  }\n\n  _createClass(TabsBorderBottom, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, React.createElement(Nav, {\n        tabs: true,\n        className: \"nav-border-bottom\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, React.createElement(NavItem, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, React.createElement(NavLink, {\n        className: classnames({\n          active: this.state.activeTab === \"classifiers\"\n        }),\n        onClick: function onClick() {\n          _this2.toggle(\"classifiers\");\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, React.createElement(Translate, {\n        name: 'classifiers',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }))), React.createElement(NavItem, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, React.createElement(NavLink, {\n        className: classnames({\n          active: this.state.activeTab === \"suppliers\"\n        }),\n        onClick: function onClick() {\n          _this2.toggle(\"suppliers\");\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, React.createElement(Translate, {\n        name: \"suppliers\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }))), React.createElement(NavItem, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, React.createElement(NavLink, {\n        className: classnames({\n          active: this.state.activeTab === \"code\"\n        }),\n        onClick: function onClick() {\n          _this2.toggle(\"code\");\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, React.createElement(Translate, {\n        name: \"code\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }))), React.createElement(NavItem, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, React.createElement(NavLink, {\n        className: classnames({\n          active: this.state.activeTab === \"description\"\n        }),\n        onClick: function onClick() {\n          _this2.toggle(\"description\");\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, React.createElement(Translate, {\n        name: \"description\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      })))), React.createElement(TabContent, {\n        activeTab: this.state.activeTab,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, React.createElement(TabPane, {\n        tabId: \"classifiers\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, Object.keys(this.props.groups).map(function (key) {\n        return React.createElement(ButtonUi, {\n          color: \"primary\",\n          margin: '5px 10px',\n          width: 'auto',\n          height: 'auto',\n          variant: '',\n          key: key,\n          onClick: function onClick() {\n            _this2.setState({\n              key: key\n            });\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 110\n          },\n          __self: this\n        }, _this2.props.groups[key].name);\n        /*<NavLink\r\n                key={key}\r\n                onClick={\r\n                    () => {\r\n                        this.setState({\r\n                            key\r\n                        })\r\n                    }\r\n                }\r\n            >\r\n                {this.props.groups[key].name}\r\n            </NavLink>*/\n      }), this.state.key ? React.createElement(GroupModal, {\n        getSubGroups: this.props.getSubGroups,\n        data: this.props.subGroups,\n        productGroups: this.props.productGroups,\n        group: this.props.groups[this.state.activeTab],\n        name: this.props.groups[this.state.key].name,\n        lang: this.props.lang,\n        handleOpen: this.props.handleOpen,\n        selectGroup: this.props.selectGroup,\n        selected: this.props.selectedGroups,\n        setModalValues: this.props.setModalValues,\n        product: this.props.product,\n        id: this.state.key,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      }) : null), React.createElement(TabPane, {\n        tabId: \"suppliers\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166\n        },\n        __self: this\n      }, React.createElement(MultiSelect, {\n        name: \"suppliers\",\n        handleChange: this.props.setModalValues,\n        data: RenameKeys(ObjectToArray(this.props.suppliers), ['name', 'name'], ['value', 'label']),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167\n        },\n        __self: this\n      })), React.createElement(TabPane, {\n        tabId: \"code\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180\n        },\n        __self: this\n      }, React.createElement(Col, {\n        sm: \"12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181\n        },\n        __self: this\n      }, React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183\n        },\n        __self: this\n      }, React.createElement(CodeContent, Object.assign({}, this.props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184\n        },\n        __self: this\n      })))))), React.createElement(TabPane, {\n        tabId: \"description\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191\n        },\n        __self: this\n      }, React.createElement(Col, {\n        sm: \"12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192\n        },\n        __self: this\n      }, React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"description\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194\n        },\n        __self: this\n      }, \"\\u0546\\u056F\\u0561\\u0580\\u0561\\u0563\\u0580\\u0578\\u0582\\u0569\\u0575\\u0578\\u0582\\u0576\"), React.createElement(Input, {\n        type: \"textarea\",\n        id: \"description\",\n        rows: \"5\",\n        value: this.props.product.description ? this.props.product.description || '' : '',\n        onChange: function onChange(event) {\n          return _this2.props.setModalValues(\"description\", event.target.value);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195\n        },\n        __self: this\n      })))))));\n    }\n  }]);\n\n  return TabsBorderBottom;\n}(Component);\n\nexport default TabsBorderBottom;","map":{"version":3,"sources":["C:/Users/User/Desktop/barcode/src/containers/pages/products/modal/tab/productTab.js"],"names":["React","Component","TabContent","TabPane","Nav","NavItem","NavLink","Row","Col","FormGroup","Label","Input","classnames","Translate","MultiSelect","RenameKeys","ObjectToArray","GroupModal","CodeContent","ButtonUi","TabsBorderBottom","props","toggle1","setState","modal","state","toggle","tab","activeTab","key","supplierActions","groupActions","active","Object","keys","groups","map","name","getSubGroups","subGroups","productGroups","lang","handleOpen","selectGroup","selectedGroups","setModalValues","product","suppliers","description","event","target","value"],"mappings":"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","sourcesContent":["import React, {Component} from \"react\";\r\nimport {\r\n    TabContent,\r\n    TabPane,\r\n    Nav,\r\n    NavItem,\r\n    NavLink,\r\n    Row,\r\n    Col, FormGroup, Label, Input,\r\n\r\n} from \"reactstrap\";\r\nimport classnames from \"classnames\";\r\nimport Translate from \"../../../../../Translate\";\r\nimport MultiSelect from \"../../../../../components/select/multiSelect\"\r\nimport {RenameKeys, ObjectToArray} from \"../../../../../utility/utils\";\r\nimport GroupModal from \"./group/groupModal\";\r\n// import DropdownComponent from \"../../../../../components/dropdown/dropdown\";\r\n// import {setModalValues} from \"../../../../../redux/products/actions\";\r\nimport CodeContent from \"./code/content\";\r\nimport ButtonUi from \"../../../../../components/buttons/buttonUi\";\r\n\r\nclass TabsBorderBottom extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            activeTab: \"code\",\r\n            modal: false,\r\n            key: null\r\n        };\r\n        this.props.supplierActions(\"getAll\");\r\n        this.props.groupActions(\"getAll\");\r\n\r\n    }\r\n\r\n    toggle1 = () => {\r\n        this.setState({\r\n            modal: !this.state.modal\r\n        });\r\n    }\r\n    toggle = tab => {\r\n        if (this.state.activeTab !== tab) {\r\n            this.setState({\r\n                activeTab: tab\r\n            });\r\n        }\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Nav tabs className=\"nav-border-bottom\">\r\n                    <NavItem>\r\n                        <NavLink\r\n                            className={classnames({\r\n                                active: this.state.activeTab === \"classifiers\"\r\n                            })}\r\n                            onClick={() => {\r\n                                this.toggle(\"classifiers\");\r\n                            }}\r\n                        >\r\n                            <Translate name={'classifiers'}/>\r\n                        </NavLink>\r\n                    </NavItem>\r\n\r\n\r\n                    <NavItem>\r\n                        <NavLink\r\n                            className={classnames({\r\n                                active: this.state.activeTab === \"suppliers\"\r\n                            })}\r\n                            onClick={() => {\r\n                                this.toggle(\"suppliers\");\r\n                            }}\r\n                        >\r\n                            <Translate name={\"suppliers\"}/>\r\n                        </NavLink>\r\n                    </NavItem>\r\n\r\n                    <NavItem>\r\n                        <NavLink\r\n                            className={classnames({\r\n                                active: this.state.activeTab === \"code\"\r\n                            })}\r\n                            onClick={() => {\r\n                                this.toggle(\"code\");\r\n                            }}\r\n                        >\r\n                            <Translate name={\"code\"}/>\r\n                        </NavLink>\r\n                    </NavItem>\r\n                    <NavItem>\r\n                        <NavLink\r\n                            className={classnames({\r\n                                active: this.state.activeTab === \"description\"\r\n                            })}\r\n                            onClick={() => {\r\n                                this.toggle(\"description\");\r\n                            }}\r\n                        >\r\n                            <Translate name={\"description\"}/>\r\n                        </NavLink>\r\n                    </NavItem>\r\n                </Nav>\r\n                <TabContent activeTab={this.state.activeTab}>\r\n                    <TabPane tabId=\"classifiers\">\r\n                        {\r\n                            Object.keys(this.props.groups).map(\r\n                                (key) => {\r\n                                    return <ButtonUi\r\n                                        color=\"primary\"\r\n                                        margin={'5px 10px'}\r\n                                        width={'auto'}\r\n                                        height={'auto'}\r\n                                        variant={''}\r\n                                        key={key}\r\n                                        onClick={\r\n                                            () => {\r\n                                                this.setState({\r\n                                                    key\r\n                                                })\r\n                                            }\r\n                                        }\r\n                                    >\r\n                                        {this.props.groups[key].name}\r\n                                    </ButtonUi>\r\n\r\n                                    /*<NavLink\r\n                                            key={key}\r\n                                            onClick={\r\n                                                () => {\r\n                                                    this.setState({\r\n                                                        key\r\n                                                    })\r\n                                                }\r\n                                            }\r\n                                        >\r\n                                            {this.props.groups[key].name}\r\n                                        </NavLink>*/\r\n                                }\r\n                            )\r\n                        }\r\n                        {\r\n                            this.state.key ?\r\n                                <GroupModal\r\n                                    getSubGroups={this.props.getSubGroups}\r\n                                    data={this.props.subGroups}\r\n                                    productGroups={this.props.productGroups}\r\n                                    group={this.props.groups[this.state.activeTab]}\r\n                                    name={this.props.groups[this.state.key].name}\r\n                                    lang={this.props.lang}\r\n                                    handleOpen={this.props.handleOpen}\r\n                                    selectGroup={this.props.selectGroup}\r\n                                    selected={this.props.selectedGroups}\r\n                                    setModalValues={this.props.setModalValues}\r\n                                    product={this.props.product}\r\n                                    id={this.state.key}\r\n                                />\r\n                                :\r\n                                null\r\n                        }\r\n\r\n\r\n                    </TabPane>\r\n\r\n                    <TabPane tabId=\"suppliers\">\r\n                        <MultiSelect\r\n                            name={\"suppliers\"}\r\n                            handleChange={this.props.setModalValues}\r\n                            data={\r\n                                RenameKeys(\r\n                                    ObjectToArray(this.props.suppliers),\r\n                                    ['name', 'name'],\r\n                                    ['value', 'label']\r\n                                )\r\n                            }\r\n                        />\r\n                    </TabPane>\r\n                    <TabPane tabId=\"code\">\r\n                        <Row>\r\n                            <Col sm=\"12\">\r\n\r\n                                <FormGroup>\r\n                                    <CodeContent {...this.props} />\r\n                                </FormGroup>\r\n\r\n                            </Col>\r\n                        </Row>\r\n                    </TabPane>\r\n                    <TabPane tabId=\"description\">\r\n                        <Row>\r\n                            <Col sm=\"12\">\r\n                                <FormGroup>\r\n                                    <Label for=\"description\">Նկարագրություն</Label>\r\n                                    <Input\r\n                                        type=\"textarea\"\r\n                                        id=\"description\"\r\n                                        rows=\"5\"\r\n                                        value={this.props.product.description ? this.props.product.description || '' : ''}\r\n                                        onChange={event => this.props.setModalValues(\"description\", event.target.value)}\r\n                                    />\r\n                                </FormGroup>\r\n                            </Col>\r\n                        </Row>\r\n                    </TabPane>\r\n                </TabContent>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TabsBorderBottom;"]},"metadata":{},"sourceType":"module"}