{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\User\\\\Desktop\\\\barcode\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport { ADD_FILE, SET_CHECK_TOUCHED_VALUE, SET_FORM_DATA_VALUE } from \"./actionTypes\";\nexport function addFile(name, value) {\n  return {\n    type: ADD_FILE,\n    name: name,\n    value: value\n  };\n}\nexport function checkTouched(name, area, id) {\n  return function (dispatch, getState) {\n    var formData = _objectSpread({}, getState().importReducer.formData);\n\n    var formDataValue = _objectSpread({}, getState().importReducer.formDataValue);\n\n    formData[area].forEach(function (item) {\n      if (item.id === id) {\n        item.touched = true;\n\n        if (formDataValue[name].length === 0) {\n          item.valid = false;\n          item.error = 'value is empty';\n        } else {\n          item.valid = true;\n          item.error = false;\n        }\n      }\n    });\n    dispatch(setFormDataValue(formDataValue, formData));\n  };\n}\nexport function setCheckTouched(formData) {\n  return {\n    type: SET_CHECK_TOUCHED_VALUE,\n    formData: formData\n  };\n}\nexport function changeFormDataValue(name, value, area, id) {\n  return function (dispatch, getState) {\n    var formDataValue = _objectSpread({}, getState().importReducer.formDataValue);\n\n    var formData = _objectSpread({}, getState().importReducer.formData);\n\n    formData[area].forEach(function (item) {\n      if (item.id === id) {\n        if (value.length > 0) {\n          if (value / 1) {\n            item.valid = true;\n            item.error = false;\n          } else {\n            item.valid = false;\n            item.error = 'value is invalid';\n          }\n        } else {\n          item.valid = false;\n          item.error = 'value is empty';\n        }\n      }\n    });\n    formDataValue[name] = value;\n    dispatch(setFormDataValue(formDataValue, formData));\n  };\n}\nexport function setFormDataValue(formDataValue, formData) {\n  return {\n    type: SET_FORM_DATA_VALUE,\n    formDataValue: formDataValue,\n    formData: formData\n  };\n}","map":{"version":3,"sources":["C:/Users/User/Desktop/barcode/src/redux/import/actions.js"],"names":["ADD_FILE","SET_CHECK_TOUCHED_VALUE","SET_FORM_DATA_VALUE","addFile","name","value","type","checkTouched","area","id","dispatch","getState","formData","importReducer","formDataValue","forEach","item","touched","length","valid","error","setFormDataValue","setCheckTouched","changeFormDataValue"],"mappings":"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","sourcesContent":["import {ADD_FILE, SET_CHECK_TOUCHED_VALUE, SET_FORM_DATA_VALUE} from \"./actionTypes\";\r\n\r\nexport function addFile(name, value) {\r\n\r\n    return {\r\n        type: ADD_FILE,\r\n        name,\r\n        value\r\n    }\r\n}\r\n\r\nexport function checkTouched(name, area, id) {\r\n\r\n    return (dispatch, getState) => {\r\n        const formData = {...getState().importReducer.formData};\r\n        const formDataValue = {...getState().importReducer.formDataValue};\r\n\r\n\r\n        formData[area].forEach(\r\n            item => {\r\n                if (item.id === id) {\r\n                    item.touched = true\r\n                    if (formDataValue[name].length === 0) {\r\n                        item.valid = false;\r\n                        item.error = 'value is empty'\r\n                    } else {\r\n                        item.valid = true;\r\n                        item.error = false\r\n                    }\r\n                }\r\n            }\r\n        )\r\n        dispatch(setFormDataValue(formDataValue, formData))\r\n    }\r\n}\r\n\r\nexport function setCheckTouched(formData) {\r\n\r\n    return {\r\n        type: SET_CHECK_TOUCHED_VALUE,\r\n        formData\r\n    }\r\n}\r\n\r\nexport function changeFormDataValue(name, value, area, id) {\r\n\r\n    return (dispatch, getState) => {\r\n        const formDataValue = {...getState().importReducer.formDataValue};\r\n        const formData = {...getState().importReducer.formData};\r\n        formData[area].forEach(\r\n            item => {\r\n                if (item.id === id) {\r\n                    if (value.length > 0) {\r\n                        if (value / 1) {\r\n                            item.valid = true;\r\n                            item.error = false\r\n                        } else {\r\n                            item.valid = false;\r\n                            item.error = 'value is invalid'\r\n                        }\r\n                    } else {\r\n                        item.valid = false;\r\n                        item.error = 'value is empty'\r\n                    }\r\n                }\r\n            }\r\n        )\r\n        formDataValue[name] = value\r\n        dispatch(setFormDataValue(formDataValue, formData))\r\n    }\r\n}\r\n\r\nexport function setFormDataValue(formDataValue, formData) {\r\n\r\n    return {\r\n        type: SET_FORM_DATA_VALUE,\r\n        formDataValue,\r\n        formData\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}