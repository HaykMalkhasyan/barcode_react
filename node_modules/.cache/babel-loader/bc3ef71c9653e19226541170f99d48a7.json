{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\User\\\\Desktop\\\\barcode\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport { GET_LANGUAGES_REQUEST, GET_LANGUAGES_FAIL, GET_LANGUAGES_SUCCESS, GET_TRANSLATIONS_REQUEST, GET_TRANSLATIONS_FAIL, GET_TRANSLATIONS_SUCCESS, SET_ACTIVE_LANGUAGE, SET_MODAL_LANGUAGE, TOGGLE_MODAL_LANGUAGE, SET_TRANSLATIONS_REQUEST, SET_TRANSLATIONS_FAIL, SET_TRANSLATIONS_SUCCESS, TOGGLE_TRANSLATION_MODAL, SET_TRANSLATION_MODAL, GET_TRANSLATION_REQUEST, GET_TRANSLATION_FAIL, GET_TRANSLATION_SUCCESS, EDIT_TRANSLATION_REQUEST, EDIT_TRANSLATION_FAIL, EDIT_TRANSLATION_SUCCESS, DELETE_TRANSLATION_REQUEST, DELETE_TRANSLATION_FAIL, DELETE_TRANSLATION_SUCCESS } from \"./actionTypes\";\nimport SessionStorage from \"../../services/SessionStorage\";\nimport { ChangeItem, IsRequiredField, IsRequiredFields, Push, RemoveItem } from '../../utility/utils'; // import {SET_GROUP_MODAL} from \"../group/actionTypes\";\n\nvar INIT_STATE = {\n  languages: [],\n  modalLang: SessionStorage.get(\"lang\") ? SessionStorage.get(\"lang\") : 'am',\n  translations: {},\n  translation: {},\n  active: SessionStorage.get(\"lang\") ? SessionStorage.get(\"lang\") : 'am',\n  changeWord: [],\n  modal: {},\n  loading: false,\n  success: false,\n  fail: false,\n  errors: {},\n  required: [\"value\"]\n};\nexport default (function () {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : INIT_STATE;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case GET_LANGUAGES_REQUEST:\n      return _objectSpread({}, state, {\n        loading: true,\n        success: false,\n        fail: false,\n        errors: {}\n      });\n\n    case GET_LANGUAGES_FAIL:\n      return _objectSpread({}, state, {\n        loading: false,\n        success: false,\n        fail: true\n      });\n\n    case GET_LANGUAGES_SUCCESS:\n      return _objectSpread({}, state, {\n        loading: false,\n        success: true,\n        fail: false,\n        languages: action.result.results,\n        errors: {}\n      });\n\n    case GET_TRANSLATIONS_REQUEST:\n      return _objectSpread({}, state, {\n        loading: true,\n        success: false,\n        fail: false,\n        errors: {}\n      });\n\n    case GET_TRANSLATIONS_FAIL:\n      return _objectSpread({}, state, {\n        loading: false,\n        success: false,\n        fail: true\n      });\n\n    case GET_TRANSLATIONS_SUCCESS:\n      return _objectSpread({}, state, {\n        translations: action.result.results,\n        loading: false,\n        success: true,\n        fail: false,\n        errors: {}\n      });\n\n    case SET_TRANSLATIONS_REQUEST:\n      return _objectSpread({}, state, {\n        loading: true,\n        success: false,\n        fail: false,\n        errors: {}\n      });\n\n    case SET_TRANSLATIONS_FAIL:\n      return _objectSpread({}, state, {\n        loading: false,\n        success: false,\n        fail: true\n      });\n\n    case SET_TRANSLATIONS_SUCCESS:\n      return _objectSpread({}, state, {\n        loading: false,\n        success: true,\n        fail: false,\n        // translations: Push(state.translations, action.result),\n        errors: {}\n      });\n\n    case SET_ACTIVE_LANGUAGE:\n      return _objectSpread({}, state, {\n        active: action.lang\n      });\n\n    case SET_MODAL_LANGUAGE:\n      return _objectSpread({}, state, {\n        modalLang: action.lang\n      });\n\n    case TOGGLE_MODAL_LANGUAGE:\n      return _objectSpread({}, state, {\n        modalLang: state.active\n      });\n\n    /*---------------------------------------------------*/\n\n    case TOGGLE_TRANSLATION_MODAL:\n      state.modal[action.modalType] = !state.modal[action.modalType];\n\n      if (action.obj) {\n        if (action.modalType === 'edit') {\n          state.translation[action.obj.key] = action.obj.value;\n        } else {\n          state.translation = action.obj;\n        }\n      }\n\n      return _objectSpread({}, state, {\n        errors: {}\n      });\n\n    case SET_TRANSLATION_MODAL:\n      state.translation[action.key] = action.value;\n      return _objectSpread({}, state, {\n        errors: IsRequiredField(state.required, action, state.errors)\n      });\n\n    case GET_TRANSLATION_REQUEST:\n      return _objectSpread({}, state, {\n        loading: true,\n        success: false,\n        fail: false,\n        errors: {}\n      });\n\n    case GET_TRANSLATION_FAIL:\n      return _objectSpread({}, state, {\n        loading: false,\n        success: false,\n        fail: true\n      });\n\n    case GET_TRANSLATION_SUCCESS:\n      return _objectSpread({}, state, {\n        loading: false,\n        success: true,\n        fail: false,\n        translation: action.result,\n        errors: {}\n      });\n\n    case EDIT_TRANSLATION_REQUEST:\n      return _objectSpread({}, state, {\n        loading: true,\n        success: false,\n        fail: false,\n        modal: {},\n        errors: IsRequiredFields(state.required, state.translation, state.errors)\n      });\n\n    case EDIT_TRANSLATION_FAIL:\n      return _objectSpread({}, state, {\n        loading: false,\n        success: false,\n        fail: true\n      });\n\n    case EDIT_TRANSLATION_SUCCESS:\n      return _objectSpread({}, state, {\n        translations: ChangeItem(state.translations, action.result),\n        loading: false,\n        success: true,\n        fail: false,\n        modal: {},\n        translation: {}\n      });\n\n    case DELETE_TRANSLATION_REQUEST:\n      return _objectSpread({}, state, {\n        loading: true,\n        success: false,\n        fail: false,\n        modal: {}\n      });\n\n    case DELETE_TRANSLATION_FAIL:\n      return _objectSpread({}, state, {\n        loading: false,\n        success: false,\n        fail: true\n      });\n\n    case DELETE_TRANSLATION_SUCCESS:\n      return _objectSpread({}, state, {\n        translations: RemoveItem(state.translations, action.result),\n        loading: false,\n        success: true,\n        fail: false,\n        modal: {},\n        datas: {}\n      });\n\n    default:\n      return _objectSpread({}, state);\n  }\n});","map":{"version":3,"sources":["C:/Users/User/Desktop/barcode/src/redux/lang/reducer.js"],"names":["GET_LANGUAGES_REQUEST","GET_LANGUAGES_FAIL","GET_LANGUAGES_SUCCESS","GET_TRANSLATIONS_REQUEST","GET_TRANSLATIONS_FAIL","GET_TRANSLATIONS_SUCCESS","SET_ACTIVE_LANGUAGE","SET_MODAL_LANGUAGE","TOGGLE_MODAL_LANGUAGE","SET_TRANSLATIONS_REQUEST","SET_TRANSLATIONS_FAIL","SET_TRANSLATIONS_SUCCESS","TOGGLE_TRANSLATION_MODAL","SET_TRANSLATION_MODAL","GET_TRANSLATION_REQUEST","GET_TRANSLATION_FAIL","GET_TRANSLATION_SUCCESS","EDIT_TRANSLATION_REQUEST","EDIT_TRANSLATION_FAIL","EDIT_TRANSLATION_SUCCESS","DELETE_TRANSLATION_REQUEST","DELETE_TRANSLATION_FAIL","DELETE_TRANSLATION_SUCCESS","SessionStorage","ChangeItem","IsRequiredField","IsRequiredFields","Push","RemoveItem","INIT_STATE","languages","modalLang","get","translations","translation","active","changeWord","modal","loading","success","fail","errors","required","state","action","type","result","results","lang","modalType","obj","key","value","datas"],"mappings":"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","sourcesContent":["import {\r\n    GET_LANGUAGES_REQUEST,\r\n    GET_LANGUAGES_FAIL,\r\n    GET_LANGUAGES_SUCCESS,\r\n    GET_TRANSLATIONS_REQUEST,\r\n    GET_TRANSLATIONS_FAIL,\r\n    GET_TRANSLATIONS_SUCCESS,\r\n    SET_ACTIVE_LANGUAGE,\r\n    SET_MODAL_LANGUAGE,\r\n    TOGGLE_MODAL_LANGUAGE,\r\n    SET_TRANSLATIONS_REQUEST,\r\n    SET_TRANSLATIONS_FAIL,\r\n    SET_TRANSLATIONS_SUCCESS,\r\n    TOGGLE_TRANSLATION_MODAL,\r\n    SET_TRANSLATION_MODAL,\r\n    GET_TRANSLATION_REQUEST,\r\n    GET_TRANSLATION_FAIL,\r\n    GET_TRANSLATION_SUCCESS,\r\n    EDIT_TRANSLATION_REQUEST,\r\n    EDIT_TRANSLATION_FAIL,\r\n    EDIT_TRANSLATION_SUCCESS,\r\n    DELETE_TRANSLATION_REQUEST,\r\n    DELETE_TRANSLATION_FAIL, DELETE_TRANSLATION_SUCCESS\r\n} from \"./actionTypes\";\r\nimport SessionStorage from \"../../services/SessionStorage\";\r\nimport {ChangeItem, IsRequiredField, IsRequiredFields, Push, RemoveItem} from '../../utility/utils';\r\n// import {SET_GROUP_MODAL} from \"../group/actionTypes\";\r\nconst INIT_STATE = {\r\n    languages: [],\r\n    modalLang: SessionStorage.get(\"lang\") ? SessionStorage.get(\"lang\") : 'am',\r\n    translations: {},\r\n    translation: {},\r\n    active: SessionStorage.get(\"lang\") ? SessionStorage.get(\"lang\") : 'am',\r\n    changeWord: [],\r\n    modal: {},\r\n    loading: false,\r\n    success: false,\r\n    fail: false,\r\n    errors: {},\r\n    required:[\"value\"],\r\n};\r\n\r\n\r\nexport default (state = INIT_STATE, action) => {\r\n    switch (action.type) {\r\n        case GET_LANGUAGES_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n                success: false,\r\n                fail: false,\r\n                errors: {},\r\n            };\r\n        case GET_LANGUAGES_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: false,\r\n                fail: true,\r\n            };\r\n        case GET_LANGUAGES_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: true,\r\n                fail: false,\r\n                languages: action.result.results,\r\n                errors: {},\r\n            };\r\n        case GET_TRANSLATIONS_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n                success: false,\r\n                fail: false,\r\n                errors: {},\r\n            };\r\n        case GET_TRANSLATIONS_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: false,\r\n                fail: true,\r\n            };\r\n        case GET_TRANSLATIONS_SUCCESS:\r\n            return {\r\n                ...state,\r\n                translations: action.result.results,\r\n                loading: false,\r\n                success: true,\r\n                fail: false,\r\n                errors: {},\r\n            };\r\n        case SET_TRANSLATIONS_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n                success: false,\r\n                fail: false,\r\n                errors: {},\r\n            };\r\n        case SET_TRANSLATIONS_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: false,\r\n                fail: true,\r\n            };\r\n        case SET_TRANSLATIONS_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: true,\r\n                fail: false,\r\n                // translations: Push(state.translations, action.result),\r\n                errors: {},\r\n            }\r\n        case SET_ACTIVE_LANGUAGE:\r\n            return {\r\n                ...state,\r\n                active: action.lang,\r\n            };\r\n        case SET_MODAL_LANGUAGE:\r\n            return {\r\n                ...state,\r\n                modalLang: action.lang,\r\n            };\r\n        case  TOGGLE_MODAL_LANGUAGE:\r\n            return {\r\n                ...state,\r\n                modalLang: state.active,\r\n            }\r\n            /*---------------------------------------------------*/\r\n        case TOGGLE_TRANSLATION_MODAL:\r\n            state.modal[action.modalType] = !state.modal[action.modalType];\r\n\r\n            if (action.obj) {\r\n                if (action.modalType === 'edit') {\r\n                    state.translation[action.obj.key] = action.obj.value;\r\n                } else {\r\n                    state.translation = action.obj\r\n                }\r\n            }\r\n            return {\r\n                ...state, errors: {}\r\n            };\r\n        case SET_TRANSLATION_MODAL:\r\n            state.translation[action.key] = action.value;\r\n            return {\r\n                ...state,\r\n                errors: IsRequiredField(state.required,action,state.errors)\r\n            }\r\n        case GET_TRANSLATION_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n                success: false,\r\n                fail: false,\r\n                errors: {}\r\n            }\r\n        case GET_TRANSLATION_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: false,\r\n                fail: true,\r\n            }\r\n        case GET_TRANSLATION_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: true,\r\n                fail: false,\r\n                translation: action.result,\r\n                errors: {},\r\n            }\r\n        case EDIT_TRANSLATION_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n                success: false,\r\n                fail: false,\r\n                modal: {},\r\n                errors:IsRequiredFields(state.required,state.translation,state.errors)\r\n            }\r\n        case EDIT_TRANSLATION_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: false,\r\n                fail: true,\r\n            }\r\n        case EDIT_TRANSLATION_SUCCESS:\r\n            return {\r\n                ...state,\r\n                translations: ChangeItem(state.translations, action.result),\r\n                loading: false,\r\n                success: true,\r\n                fail: false,\r\n                modal: {},\r\n                translation: {}\r\n            }\r\n        case DELETE_TRANSLATION_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n                success: false,\r\n                fail: false,\r\n                modal: {},\r\n            }\r\n        case DELETE_TRANSLATION_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: false,\r\n                fail: true,\r\n            }\r\n        case DELETE_TRANSLATION_SUCCESS:\r\n            return {\r\n                ...state,\r\n                translations: RemoveItem(state.translations, action.result),\r\n                loading: false,\r\n                success: true,\r\n                fail: false,\r\n                modal: {},\r\n                datas: {}\r\n            }\r\n        default:\r\n            return {...state};\r\n    }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}