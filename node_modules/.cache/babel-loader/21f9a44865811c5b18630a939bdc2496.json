{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\User\\\\Desktop\\\\barcode\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport { GET_CATEGORIES_REQUEST, GET_CATEGORIES_FAIL, GET_CATEGORIES_SUCCESS, GET_CATEGORY_REQUEST, GET_CATEGORY_FAIL, GET_CATEGORY_SUCCESS, ADD_CATEGORY_REQUEST, ADD_CATEGORY_FAIL, ADD_CATEGORY_SUCCESS, EDIT_CATEGORY_REQUEST, EDIT_CATEGORY_FAIL, EDIT_CATEGORY_SUCCESS, DELETE_CATEGORY_REQUEST, DELETE_CATEGORY_FAIL, DELETE_CATEGORY_SUCCESS, SET_MODAL_VALUES, TOGGLE_MODAL } from \"./actionTypes\";\nvar INIT_STATE = {\n  categories: [],\n  category: {},\n  modal: {},\n  required: [\"name\"],\n  loading: false,\n  success: false,\n  fail: false,\n  errors: {}\n};\n\nvar checkRequiredFields = function checkRequiredFields(state) {\n  var field = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n  if (field) {\n    if (state.required.includes(field.key) && field.value === \"\") {\n      state.errors[field.key] = \"Required\";\n    } else {\n      delete state.errors[field.key];\n    }\n  } else {\n    state.required.forEach(function (val, index) {\n      if (!state.category[val] || state.category[val] === \"\") {\n        state.errors[val] = \"reqired\";\n      }\n    });\n  }\n\n  return state.errors;\n};\n\nexport default (function () {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : INIT_STATE;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case GET_CATEGORIES_REQUEST:\n      return _objectSpread({}, state, {\n        loading: true,\n        success: false,\n        fail: false,\n        modal: {},\n        errors: {}\n      });\n\n    case GET_CATEGORIES_FAIL:\n      return _objectSpread({}, state, {\n        loading: false,\n        success: false,\n        modal: {},\n        fail: true\n      });\n\n    case GET_CATEGORIES_SUCCESS:\n      return _objectSpread({}, state, {\n        loading: false,\n        success: true,\n        fail: false,\n        categories: JSON.parse(action.result.data),\n        errors: {}\n      });\n\n    case GET_CATEGORY_REQUEST:\n      return _objectSpread({}, state, {\n        loading: true,\n        success: false,\n        fail: false,\n        modal: {},\n        errors: {}\n      });\n\n    case GET_CATEGORY_FAIL:\n      return _objectSpread({}, state, {\n        loading: false,\n        success: false,\n        fail: true\n      });\n\n    case GET_CATEGORY_SUCCESS:\n      return _objectSpread({}, state, {\n        loading: false,\n        success: true,\n        fail: false,\n        category: JSON.parse(action.result.data),\n        errors: {}\n      });\n\n    case ADD_CATEGORY_REQUEST:\n      return _objectSpread({}, state, {\n        loading: true,\n        success: false,\n        fail: false,\n        errors: checkRequiredFields(state)\n      });\n\n    case ADD_CATEGORY_FAIL:\n      return _objectSpread({}, state, {\n        loading: false,\n        success: false,\n        fail: true\n      });\n\n    case ADD_CATEGORY_SUCCESS:\n      return _objectSpread({}, state, {\n        loading: false,\n        success: true,\n        fail: false,\n        modal: {},\n        categories: JSON.parse(action.result.data)\n      });\n\n    case EDIT_CATEGORY_REQUEST:\n      return _objectSpread({}, state, {\n        loading: true,\n        success: false,\n        fail: false,\n        errors: checkRequiredFields(state)\n      });\n\n    case EDIT_CATEGORY_FAIL:\n      return _objectSpread({}, state, {\n        loading: false,\n        success: false,\n        fail: true\n      });\n\n    case EDIT_CATEGORY_SUCCESS:\n      return _objectSpread({}, state, {\n        loading: false,\n        success: true,\n        fail: false,\n        modal: {},\n        category: {},\n        categories: JSON.parse(action.result.data)\n      });\n\n    case DELETE_CATEGORY_REQUEST:\n      return _objectSpread({}, state, {\n        loading: true,\n        success: false,\n        fail: false\n      });\n\n    case DELETE_CATEGORY_FAIL:\n      return _objectSpread({}, state, {\n        loading: false,\n        success: false,\n        fail: true\n      });\n\n    case DELETE_CATEGORY_SUCCESS:\n      return _objectSpread({}, state, {\n        loading: false,\n        success: true,\n        fail: false,\n        modal: {},\n        category: {},\n        categories: JSON.parse(action.result.data)\n      });\n\n    case SET_MODAL_VALUES:\n      state.category[action.key] = action.value;\n      return _objectSpread({}, state, {\n        errors: checkRequiredFields(state, action)\n      });\n\n    case TOGGLE_MODAL:\n      var newModal = {};\n      newModal[action.modalType] = !state.modal[action.modalType];\n      var category = action.modalType === \"edit\" ? _objectSpread({}, state.category, action.obj) : _objectSpread({}, action.obj);\n      return _objectSpread({}, state, {\n        modal: _objectSpread({}, state.modal, newModal),\n        category: category\n      });\n\n    default:\n      return _objectSpread({}, state);\n  }\n});","map":{"version":3,"sources":["C:/Users/User/Desktop/barcode/src/redux/categories/reducer.js"],"names":["GET_CATEGORIES_REQUEST","GET_CATEGORIES_FAIL","GET_CATEGORIES_SUCCESS","GET_CATEGORY_REQUEST","GET_CATEGORY_FAIL","GET_CATEGORY_SUCCESS","ADD_CATEGORY_REQUEST","ADD_CATEGORY_FAIL","ADD_CATEGORY_SUCCESS","EDIT_CATEGORY_REQUEST","EDIT_CATEGORY_FAIL","EDIT_CATEGORY_SUCCESS","DELETE_CATEGORY_REQUEST","DELETE_CATEGORY_FAIL","DELETE_CATEGORY_SUCCESS","SET_MODAL_VALUES","TOGGLE_MODAL","INIT_STATE","categories","category","modal","required","loading","success","fail","errors","checkRequiredFields","state","field","includes","key","value","forEach","val","index","action","type","JSON","parse","result","data","newModal","modalType","obj"],"mappings":"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","sourcesContent":["import {\r\n    GET_CATEGORIES_REQUEST,GET_CATEGORIES_FAIL,GET_CATEGORIES_SUCCESS,\r\n    GET_CATEGORY_REQUEST,GET_CATEGORY_FAIL,GET_CATEGORY_SUCCESS,\r\n    ADD_CATEGORY_REQUEST,ADD_CATEGORY_FAIL,ADD_CATEGORY_SUCCESS,\r\n    EDIT_CATEGORY_REQUEST,EDIT_CATEGORY_FAIL,EDIT_CATEGORY_SUCCESS,\r\n    DELETE_CATEGORY_REQUEST,DELETE_CATEGORY_FAIL,DELETE_CATEGORY_SUCCESS,\r\n    SET_MODAL_VALUES,TOGGLE_MODAL\r\n} from \"./actionTypes\";\r\n\r\n\r\nconst INIT_STATE = {\r\n    categories: [],\r\n    category:{},\r\n    modal: {},\r\n    required: [\"name\"],\r\n    loading: false,\r\n    success: false,\r\n    fail: false,\r\n    errors: {}\r\n};\r\nconst checkRequiredFields = (state,field=false) => {\r\n    if(field){\r\n        if(state.required.includes(field.key) && field.value===\"\"){\r\n            state.errors[field.key] = \"Required\";\r\n        }else{\r\n            delete state.errors[field.key];\r\n        }\r\n    }else{\r\n        state.required.forEach(function(val, index){\r\n            if(!state.category[val] || state.category[val]===\"\"){\r\n                state.errors[val]= \"reqired\"\r\n            }\r\n        })\r\n    }\r\n\r\n    return state.errors;\r\n}\r\n\r\nexport default (state = INIT_STATE, action) => {\r\n    switch (action.type) {\r\n        case GET_CATEGORIES_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n                success: false,\r\n                fail: false,\r\n                modal:{},\r\n                errors: {},\r\n            };\r\n        case GET_CATEGORIES_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: false,\r\n                modal:{},\r\n                fail: true,\r\n            };\r\n        case GET_CATEGORIES_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: true,\r\n                fail: false,\r\n                categories: JSON.parse(action.result.data),\r\n                errors: {},\r\n            };\r\n        case GET_CATEGORY_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n                success: false,\r\n                fail: false,\r\n                modal:{},\r\n                errors: {},\r\n            };\r\n        case GET_CATEGORY_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: false,\r\n                fail: true,\r\n            };\r\n        case GET_CATEGORY_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: true,\r\n                fail: false,\r\n                category: JSON.parse(action.result.data),\r\n                errors: {},\r\n            };\r\n        case ADD_CATEGORY_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n                success: false,\r\n                fail: false,\r\n                errors:checkRequiredFields(state)\r\n            }\r\n        case ADD_CATEGORY_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: false,\r\n                fail: true,\r\n\r\n            };\r\n        case ADD_CATEGORY_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: true,\r\n                fail: false,\r\n                modal: {},\r\n                categories: JSON.parse(action.result.data)\r\n            };\r\n        case EDIT_CATEGORY_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n                success: false,\r\n                fail: false,\r\n                errors:checkRequiredFields(state)\r\n            }\r\n        case EDIT_CATEGORY_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: false,\r\n                fail: true,\r\n\r\n            };\r\n        case EDIT_CATEGORY_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: true,\r\n                fail: false,\r\n                modal: {},\r\n                category: {},\r\n                categories: JSON.parse(action.result.data)\r\n            };\r\n        case DELETE_CATEGORY_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n                success: false,\r\n                fail: false,\r\n            }\r\n        case DELETE_CATEGORY_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: false,\r\n                fail: true,\r\n\r\n            };\r\n        case DELETE_CATEGORY_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: true,\r\n                fail: false,\r\n                modal: {},\r\n                category: {},\r\n                categories: JSON.parse(action.result.data)\r\n            };\r\n\r\n        case SET_MODAL_VALUES:\r\n            state.category[action.key] = action.value;\r\n            return {\r\n                ...state,\r\n                errors:checkRequiredFields(state,action)\r\n            };\r\n        case TOGGLE_MODAL:\r\n            let newModal = {};\r\n            newModal[action.modalType] = !state.modal[action.modalType];\r\n            let category = (action.modalType===\"edit\")?{\r\n                ...state.category,\r\n                ...action.obj\r\n            }:{\r\n                ...action.obj\r\n            }\r\n            return {\r\n                ...state,\r\n                modal: {\r\n                    ...state.modal,\r\n                    ...newModal\r\n                },\r\n                category\r\n            }\r\n\r\n        default:\r\n            return {...state};\r\n    }\r\n};\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}