{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\User\\\\Desktop\\\\barcode\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nimport _objectSpread from \"C:\\\\Users\\\\User\\\\Desktop\\\\barcode\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport { GET_SUPPLIERS_REQUEST, GET_SUPPLIERS_FAIL, GET_SUPPLIERS_SUCCESS, GET_SUPPLIER_REQUEST, GET_SUPPLIER_FAIL, GET_SUPPLIER_SUCCESS, ADD_SUPPLIER_REQUEST, ADD_SUPPLIER_FAIL, ADD_SUPPLIER_SUCCESS, EDIT_SUPPLIER_REQUEST, EDIT_SUPPLIER_FAIL, EDIT_SUPPLIER_SUCCESS, DELETE_SUPPLIER_REQUEST, DELETE_SUPPLIER_FAIL, DELETE_SUPPLIER_SUCCESS, GET_BANKS_REQUEST, GET_BANKS_FAIL, GET_BANKS_SUCCESS, SET_SUPPLIER_MODAL, TOGGLE_SUPPLIER_MODAL } from \"./actionTypes\";\nimport { IsRequiredField, IsRequiredFields } from \"../../utility/utils\";\nvar INIT_STATE = {\n  suppliers: [],\n  supplier: {},\n  banks: [],\n  modal: {},\n  required: [\"name\"],\n  loading: false,\n  success: false,\n  fail: false,\n  errors: {}\n};\nexport default (function () {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : INIT_STATE;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case GET_SUPPLIERS_REQUEST:\n      return _objectSpread({}, state, {\n        loading: true,\n        success: false,\n        modal: {},\n        fail: false,\n        errors: {}\n      });\n\n    case GET_SUPPLIERS_FAIL:\n      return _objectSpread({}, state, {\n        loading: false,\n        success: false,\n        modal: {},\n        fail: true\n      });\n\n    case GET_SUPPLIERS_SUCCESS:\n      return _objectSpread({}, state, {\n        loading: false,\n        success: true,\n        fail: false,\n        suppliers: JSON.parse(action.result.data),\n        modal: {},\n        errors: {}\n      });\n\n    case GET_SUPPLIER_REQUEST:\n      return _objectSpread({}, state, {\n        loading: true,\n        success: false,\n        fail: false,\n        errors: {}\n      });\n\n    case GET_SUPPLIER_FAIL:\n      return _objectSpread({}, state, {\n        loading: false,\n        success: false,\n        fail: true\n      });\n\n    case GET_SUPPLIER_SUCCESS:\n      var supplier = {};\n\n      for (var _i = 0, _Object$entries = Object.entries(JSON.parse(action.result.data)); _i < _Object$entries.length; _i++) {\n        var _ref3 = _Object$entries[_i];\n\n        var _ref2 = _slicedToArray(_ref3, 2);\n\n        var key = _ref2[0];\n        var value = _ref2[1];\n        supplier = value;\n      }\n\n      return _objectSpread({}, state, {\n        loading: false,\n        success: true,\n        fail: false,\n        supplier: supplier,\n        errors: {}\n      });\n\n    case ADD_SUPPLIER_REQUEST:\n      return _objectSpread({}, state, {\n        loading: true,\n        success: false,\n        fail: false,\n        errors: IsRequiredFields(state.required, state.supplier, state.errors)\n      });\n\n    case ADD_SUPPLIER_FAIL:\n      return _objectSpread({}, state, {\n        loading: false,\n        success: false,\n        fail: true\n      });\n\n    case ADD_SUPPLIER_SUCCESS:\n      return _objectSpread({}, state, {\n        loading: false,\n        success: true,\n        fail: false,\n        modal: {},\n        suppliers: _objectSpread({}, JSON.parse(action.result.data), state.suppliers)\n      });\n\n    case EDIT_SUPPLIER_REQUEST:\n      return _objectSpread({}, state, {\n        loading: true,\n        success: false,\n        fail: false,\n        errors: IsRequiredFields(state.required, state.supplier, state.errors)\n      });\n\n    case EDIT_SUPPLIER_FAIL:\n      return _objectSpread({}, state, {\n        loading: false,\n        success: false,\n        fail: true\n      });\n\n    case EDIT_SUPPLIER_SUCCESS:\n      for (var _i2 = 0, _Object$entries2 = Object.entries(JSON.parse(action.result.data)); _i2 < _Object$entries2.length; _i2++) {\n        var _ref6 = _Object$entries2[_i2];\n\n        var _ref5 = _slicedToArray(_ref6, 2);\n\n        var _key = _ref5[0];\n        var _value = _ref5[1];\n        state.suppliers[_key] = _value;\n      }\n\n      return _objectSpread({}, state, {\n        loading: false,\n        success: true,\n        fail: false,\n        modal: {},\n        supplier: {},\n        suppliers: _objectSpread({}, state.suppliers)\n      });\n\n    case DELETE_SUPPLIER_REQUEST:\n      return _objectSpread({}, state, {\n        loading: true,\n        success: false,\n        fail: false\n      });\n\n    case DELETE_SUPPLIER_FAIL:\n      return _objectSpread({}, state, {\n        loading: false,\n        success: false,\n        fail: true\n      });\n\n    case DELETE_SUPPLIER_SUCCESS:\n      delete state.suppliers[JSON.parse(action.result.data)];\n      return _objectSpread({}, state, {\n        loading: false,\n        success: true,\n        fail: false,\n        modal: {},\n        supplier: {},\n        suppliers: state.suppliers\n      });\n\n    case GET_BANKS_REQUEST:\n      return _objectSpread({}, state, {\n        loading: true,\n        success: false,\n        modal: {},\n        fail: false,\n        errors: {}\n      });\n\n    case GET_BANKS_FAIL:\n      return _objectSpread({}, state, {\n        loading: false,\n        success: false,\n        modal: {},\n        fail: true\n      });\n\n    case GET_BANKS_SUCCESS:\n      return _objectSpread({}, state, {\n        loading: false,\n        success: true,\n        fail: false,\n        banks: JSON.parse(action.result.data),\n        modal: {},\n        errors: {}\n      });\n\n    case SET_SUPPLIER_MODAL:\n      if (typeof action.index !== 'undefined') {\n        if (!state.supplier[action.key]) {\n          state.supplier[action.key] = [];\n        }\n\n        if (typeof action.add === 'undefined') {\n          state.supplier[action.key][action.index] = action.value;\n        } else if (action.add) {\n          state.supplier[action.key][action.index + 1] = action.value;\n        } else {\n          state.supplier[action.key].splice(action.index, 1);\n        }\n      } else {\n        state.supplier[action.key] = action.value;\n      }\n\n      return _objectSpread({}, state, {\n        errors: IsRequiredField(state.required, action, state.errors)\n      });\n\n    case TOGGLE_SUPPLIER_MODAL:\n      state.modal[action.modalType] = !state.modal[action.modalType];\n\n      if (action.obj) {\n        if (action.modalType === \"edit\") {\n          state.supplier[action.obj.key] = action.obj.value;\n        } else {\n          state.supplier = action.obj;\n        }\n      }\n\n      return _objectSpread({}, state, {\n        errors: {}\n      });\n\n    default:\n      return _objectSpread({}, state);\n  }\n});","map":{"version":3,"sources":["C:/Users/User/Desktop/barcode/src/redux/suppliers/reducer.js"],"names":["GET_SUPPLIERS_REQUEST","GET_SUPPLIERS_FAIL","GET_SUPPLIERS_SUCCESS","GET_SUPPLIER_REQUEST","GET_SUPPLIER_FAIL","GET_SUPPLIER_SUCCESS","ADD_SUPPLIER_REQUEST","ADD_SUPPLIER_FAIL","ADD_SUPPLIER_SUCCESS","EDIT_SUPPLIER_REQUEST","EDIT_SUPPLIER_FAIL","EDIT_SUPPLIER_SUCCESS","DELETE_SUPPLIER_REQUEST","DELETE_SUPPLIER_FAIL","DELETE_SUPPLIER_SUCCESS","GET_BANKS_REQUEST","GET_BANKS_FAIL","GET_BANKS_SUCCESS","SET_SUPPLIER_MODAL","TOGGLE_SUPPLIER_MODAL","IsRequiredField","IsRequiredFields","INIT_STATE","suppliers","supplier","banks","modal","required","loading","success","fail","errors","state","action","type","JSON","parse","result","data","Object","entries","key","value","index","add","splice","modalType","obj"],"mappings":"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","sourcesContent":["import {\r\n    GET_SUPPLIERS_REQUEST, GET_SUPPLIERS_FAIL, GET_SUPPLIERS_SUCCESS,\r\n    GET_SUPPLIER_REQUEST, GET_SUPPLIER_FAIL, GET_SUPPLIER_SUCCESS,\r\n    ADD_SUPPLIER_REQUEST, ADD_SUPPLIER_FAIL, ADD_SUPPLIER_SUCCESS,\r\n    EDIT_SUPPLIER_REQUEST, EDIT_SUPPLIER_FAIL, EDIT_SUPPLIER_SUCCESS,\r\n    DELETE_SUPPLIER_REQUEST, DELETE_SUPPLIER_FAIL, DELETE_SUPPLIER_SUCCESS,\r\n    GET_BANKS_REQUEST,GET_BANKS_FAIL,GET_BANKS_SUCCESS,\r\n    SET_SUPPLIER_MODAL, TOGGLE_SUPPLIER_MODAL\r\n} from \"./actionTypes\";\r\nimport {IsRequiredField, IsRequiredFields} from \"../../utility/utils\";\r\n\r\n\r\nconst INIT_STATE = {\r\n    suppliers: [],\r\n    supplier: {},\r\n    banks: [],\r\n    modal: {},\r\n    required: [\r\n        \"name\",\r\n    ],\r\n    loading: false,\r\n    success: false,\r\n    fail: false,\r\n    errors: {}\r\n};\r\n\r\n\r\nexport default (state = INIT_STATE, action) => {\r\n    switch (action.type) {\r\n        case GET_SUPPLIERS_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n                success: false,\r\n                modal: {},\r\n                fail: false,\r\n                errors: {},\r\n            };\r\n        case GET_SUPPLIERS_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: false,\r\n                modal: {},\r\n                fail: true,\r\n            };\r\n        case GET_SUPPLIERS_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: true,\r\n                fail: false,\r\n                suppliers: JSON.parse(action.result.data),\r\n                modal: {},\r\n                errors: {},\r\n            };\r\n        case GET_SUPPLIER_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n                success: false,\r\n                fail: false,\r\n                errors: {},\r\n            };\r\n        case GET_SUPPLIER_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: false,\r\n                fail: true,\r\n            };\r\n        case GET_SUPPLIER_SUCCESS:\r\n            let supplier = {};\r\n            for (let  [key,value] of Object.entries(JSON.parse(action.result.data))) {\r\n                supplier = value;\r\n            }\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: true,\r\n                fail: false,\r\n                supplier,\r\n                errors: {},\r\n            };\r\n        case ADD_SUPPLIER_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n                success: false,\r\n                fail: false,\r\n                errors:IsRequiredFields(state.required,state.supplier,state.errors)\r\n            }\r\n        case ADD_SUPPLIER_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: false,\r\n                fail: true,\r\n\r\n            };\r\n        case ADD_SUPPLIER_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: true,\r\n                fail: false,\r\n                modal: {},\r\n                suppliers: {\r\n                    ...JSON.parse(action.result.data),\r\n                    ...state.suppliers,\r\n                }\r\n            };\r\n        case EDIT_SUPPLIER_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n                success: false,\r\n                fail: false,\r\n                errors: IsRequiredFields(state.required,state.supplier,state.errors)\r\n            }\r\n        case EDIT_SUPPLIER_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: false,\r\n                fail: true,\r\n\r\n            };\r\n        case EDIT_SUPPLIER_SUCCESS:\r\n            for (let  [key,value] of Object.entries(JSON.parse(action.result.data))) {\r\n                state.suppliers[key] = value;\r\n            }\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: true,\r\n                fail: false,\r\n                modal: {},\r\n                supplier: {},\r\n                suppliers: {\r\n                    ...state.suppliers,\r\n                }\r\n            };\r\n        case DELETE_SUPPLIER_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n                success: false,\r\n                fail: false,\r\n            }\r\n        case DELETE_SUPPLIER_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: false,\r\n                fail: true,\r\n\r\n            };\r\n        case DELETE_SUPPLIER_SUCCESS:\r\n            delete state.suppliers[JSON.parse(action.result.data)]\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: true,\r\n                fail: false,\r\n                modal: {},\r\n                supplier: {},\r\n                suppliers: state.suppliers\r\n            };\r\n        case GET_BANKS_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n                success: false,\r\n                modal: {},\r\n                fail: false,\r\n                errors: {},\r\n            };\r\n        case GET_BANKS_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: false,\r\n                modal: {},\r\n                fail: true,\r\n            };\r\n        case GET_BANKS_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: true,\r\n                fail: false,\r\n                banks: JSON.parse(action.result.data),\r\n                modal: {},\r\n                errors: {},\r\n            };\r\n\r\n        case SET_SUPPLIER_MODAL:\r\n            if(typeof action.index !== 'undefined'){\r\n                if(!state.supplier[action.key]){\r\n                    state.supplier[action.key] = []\r\n                }\r\n                if(typeof action.add === 'undefined'){\r\n                    state.supplier[action.key][action.index] = action.value;\r\n                }else\r\n                if(action.add){\r\n                    state.supplier[action.key][action.index+1] = action.value;\r\n                }else{\r\n                    state.supplier[action.key].splice(action.index,1);\r\n                }\r\n            }else{\r\n                state.supplier[action.key] = action.value;\r\n            }\r\n            return {\r\n                ...state,\r\n                errors: IsRequiredField(state.required,action,state.errors)\r\n            };\r\n        case TOGGLE_SUPPLIER_MODAL:\r\n            state.modal[action.modalType] = !state.modal[action.modalType];\r\n\r\n            if(action.obj){\r\n                if(action.modalType===\"edit\"){\r\n                    state.supplier[action.obj.key] = action.obj.value\r\n                }else{\r\n                    state.supplier= action.obj\r\n                }\r\n            }\r\n\r\n            return {\r\n                ...state,\r\n                errors: {}\r\n            }\r\n        default:\r\n            return {...state};\r\n    }\r\n};\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}