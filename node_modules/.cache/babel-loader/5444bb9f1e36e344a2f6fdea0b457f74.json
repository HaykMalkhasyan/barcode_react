{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\User\\\\Desktop\\\\barcode\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport { UPLOAD_IMAGES_REQUEST, UPLOAD_IMAGES_FAIL, UPLOAD_IMAGES_SUCCESS } from \"./actionTypes\";\nvar INIT_STATE = {\n  images: [],\n  loading: false,\n  success: false,\n  fail: false,\n  errors: {}\n};\nexport default (function () {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : INIT_STATE;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case UPLOAD_IMAGES_REQUEST:\n      return _objectSpread({}, state, {\n        loading: true,\n        success: false,\n        fail: false\n      });\n\n    case UPLOAD_IMAGES_FAIL:\n      return _objectSpread({}, state, {\n        loading: false,\n        success: false,\n        fail: true\n      });\n\n    case UPLOAD_IMAGES_SUCCESS:\n      return _objectSpread({}, state, {\n        loading: false,\n        success: true,\n        fail: false,\n        images: JSON.parse(action.result.data).images\n      });\n\n    default:\n      return _objectSpread({}, state);\n  }\n});","map":{"version":3,"sources":["C:/Users/User/Desktop/barcode/src/redux/todo/reducer.js"],"names":["UPLOAD_IMAGES_REQUEST","UPLOAD_IMAGES_FAIL","UPLOAD_IMAGES_SUCCESS","INIT_STATE","images","loading","success","fail","errors","state","action","type","JSON","parse","result","data"],"mappings":";AAAA,SACIA,qBADJ,EAC2BC,kBAD3B,EAC+CC,qBAD/C,QAEO,eAFP;AAKA,IAAMC,UAAU,GAAG;AACfC,EAAAA,MAAM,EAAC,EADQ;AAEfC,EAAAA,OAAO,EAAE,KAFM;AAGfC,EAAAA,OAAO,EAAE,KAHM;AAIfC,EAAAA,IAAI,EAAE,KAJS;AAKfC,EAAAA,MAAM,EAAE;AALO,CAAnB;AAQA,gBAAe,YAAgC;AAAA,MAA/BC,KAA+B,uEAAvBN,UAAuB;AAAA,MAAXO,MAAW;;AAC3C,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKX,qBAAL;AACI,+BACOS,KADP;AAEIJ,QAAAA,OAAO,EAAE,IAFb;AAGIC,QAAAA,OAAO,EAAE,KAHb;AAIIC,QAAAA,IAAI,EAAE;AAJV;;AAMJ,SAAKN,kBAAL;AACI,+BACOQ,KADP;AAEIJ,QAAAA,OAAO,EAAE,KAFb;AAGIC,QAAAA,OAAO,EAAE,KAHb;AAIIC,QAAAA,IAAI,EAAE;AAJV;;AAOJ,SAAKL,qBAAL;AACI,+BACOO,KADP;AAEIJ,QAAAA,OAAO,EAAE,KAFb;AAGIC,QAAAA,OAAO,EAAE,IAHb;AAIIC,QAAAA,IAAI,EAAE,KAJV;AAKIH,QAAAA,MAAM,EAACQ,IAAI,CAACC,KAAL,CAAWH,MAAM,CAACI,MAAP,CAAcC,IAAzB,EAA+BX;AAL1C;;AAOJ;AACI,+BAAWK,KAAX;AAzBR;AA2BH,CA5BD","sourcesContent":["import {\r\n    UPLOAD_IMAGES_REQUEST, UPLOAD_IMAGES_FAIL, UPLOAD_IMAGES_SUCCESS,\r\n} from \"./actionTypes\";\r\n\r\n\r\nconst INIT_STATE = {\r\n    images:[],\r\n    loading: false,\r\n    success: false,\r\n    fail: false,\r\n    errors: {}\r\n};\r\n\r\nexport default (state = INIT_STATE, action) => {\r\n    switch (action.type) {\r\n        case UPLOAD_IMAGES_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n                success: false,\r\n                fail: false,\r\n            }\r\n        case UPLOAD_IMAGES_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: false,\r\n                fail: true,\r\n\r\n            };\r\n        case UPLOAD_IMAGES_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: true,\r\n                fail: false,\r\n                images:JSON.parse(action.result.data).images,\r\n            };\r\n        default:\r\n            return {...state};\r\n    }\r\n};\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}