{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\User\\\\Desktop\\\\barcode\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"C:\\\\Users\\\\User\\\\Desktop\\\\barcode\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nimport _toConsumableArray from \"C:\\\\Users\\\\User\\\\Desktop\\\\barcode\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _defineProperty from \"C:\\\\Users\\\\User\\\\Desktop\\\\barcode\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\barcode\\\\src\\\\containers\\\\pages\\\\group\\\\treeUi\\\\tree.js\",\n    _columnsFromBackend;\n\nimport React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport { fade, makeStyles, withStyles } from '@material-ui/core/styles';\nimport TreeView from '@material-ui/lab/TreeView';\nimport TreeItem from '@material-ui/lab/TreeItem';\nimport Collapse from '@material-ui/core/Collapse';\nimport { useSpring, animated } from 'react-spring/web.cjs';\nimport ContextMenu from \"./contextMenu/contextMenu\";\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport uuid from 'uuid/v4';\nimport * as Icon from 'react-feather';\nimport styls from './tree.module.css';\nimport ButtonUi from \"../../../../components/buttons/buttonUi\";\n\nfunction MinusSquare(props) {\n  return React.createElement(SvgIcon, Object.assign({\n    fontSize: \"inherit\",\n    style: {\n      width: 14,\n      height: 14\n    }\n  }, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }), React.createElement(\"path\", {\n    d: \"M22.047 22.074v0 0-20.147 0h-20.12v0 20.147 0h20.12zM22.047 24h-20.12q-.803 0-1.365-.562t-.562-1.365v-20.147q0-.776.562-1.351t1.365-.575h20.147q.776 0 1.351.575t.575 1.351v20.147q0 .803-.575 1.365t-1.378.562v0zM17.873 11.023h-11.826q-.375 0-.669.281t-.294.682v0q0 .401.294 .682t.669.281h11.826q.375 0 .669-.281t.294-.682v0q0-.401-.294-.682t-.669-.281z\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }));\n}\n\nfunction PlusSquare(props) {\n  return React.createElement(SvgIcon, Object.assign({\n    fontSize: \"inherit\",\n    style: {\n      width: 14,\n      height: 14\n    }\n  }, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }), React.createElement(\"path\", {\n    d: \"M22.047 22.074v0 0-20.147 0h-20.12v0 20.147 0h20.12zM22.047 24h-20.12q-.803 0-1.365-.562t-.562-1.365v-20.147q0-.776.562-1.351t1.365-.575h20.147q.776 0 1.351.575t.575 1.351v20.147q0 .803-.575 1.365t-1.378.562v0zM17.873 12.977h-4.923v4.896q0 .401-.281.682t-.682.281v0q-.375 0-.669-.281t-.294-.682v-4.896h-4.923q-.401 0-.682-.294t-.281-.669v0q0-.401.281-.682t.682-.281h4.923v-4.896q0-.401.294-.682t.669-.281v0q.401 0 .682.281t.281.682v4.896h4.923q.401 0 .682.281t.281.682v0q0 .375-.281.669t-.682.294z\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }));\n}\n\nfunction CloseSquare(props) {\n  return React.createElement(SvgIcon, Object.assign({\n    className: \"close\",\n    fontSize: \"inherit\",\n    style: {\n      width: 14,\n      height: 14\n    }\n  }, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }), React.createElement(\"path\", {\n    d: \"M17.485 17.512q-.281.281-.682.281t-.696-.268l-4.12-4.147-4.12 4.147q-.294.268-.696.268t-.682-.281-.281-.682.294-.669l4.12-4.147-4.12-4.147q-.294-.268-.294-.669t.281-.682.682-.281.696 .268l4.12 4.147 4.12-4.147q.294-.268.696-.268t.682.281 .281.669-.294.682l-4.12 4.147 4.12 4.147q.294.268 .294.669t-.281.682zM22.047 22.074v0 0-20.147 0h-20.12v0 20.147 0h20.12zM22.047 24h-20.12q-.803 0-1.365-.562t-.562-1.365v-20.147q0-.776.562-1.351t1.365-.575h20.147q.776 0 1.351.575t.575 1.351v20.147q0 .803-.575 1.365t-1.378.562v0z\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }));\n}\n\nfunction TransitionComponent(props) {\n  var style = useSpring({\n    from: {\n      opacity: 0,\n      transform: 'translate3d(20px,0,0)'\n    },\n    to: {\n      opacity: props.in ? 1 : 0,\n      transform: \"translate3d(\".concat(props.in ? 0 : 20, \"px,0,0)\")\n    }\n  });\n  return React.createElement(animated.div, {\n    style: style,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, React.createElement(Collapse, Object.assign({}, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  })));\n}\n\nTransitionComponent.propTypes = {\n  /**\r\n   * Show the component; triggers the enter or exit states\r\n   */\n  in: PropTypes.bool\n};\nvar StyledTreeItem = withStyles(function (theme) {\n  return {\n    iconContainer: {\n      '& .close': {\n        opacity: 0.1\n      }\n    },\n    group: {\n      marginLeft: 7,\n      paddingLeft: 18,\n      borderLeft: \"1px dashed \".concat(fade(theme.palette.text.primary, 0.4))\n    }\n  };\n})(function (props) {\n  return React.createElement(TreeItem, Object.assign({}, props, {\n    TransitionComponent: TransitionComponent,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }));\n});\nvar useStyles = makeStyles({\n  root: {\n    height: 'auto',\n    flexGrow: 1,\n    maxWidth: '100%',\n    fontSize: '2rem !important'\n  }\n});\nvar itemsFromBackend = [{\n  id: uuid(),\n  content: 'First task'\n}, {\n  id: uuid(),\n  content: 'Second task'\n}];\nvar columnsFromBackend = (_columnsFromBackend = {}, _defineProperty(_columnsFromBackend, uuid(), {\n  name: 'Requested',\n  items: itemsFromBackend\n}), _defineProperty(_columnsFromBackend, uuid(), {\n  name: 'In Proggress',\n  items: []\n}), _defineProperty(_columnsFromBackend, uuid(), {\n  name: 'Done',\n  items: []\n}), _columnsFromBackend);\n\nvar _onDragEnd = function onDragEnd(result, columns, setColumns) {\n  if (!result.destination) return;\n  var source = result.source,\n      destination = result.destination;\n\n  if (source.droppableId !== destination.droppableId) {\n    var _objectSpread2;\n\n    var sourceColumn = columns[source.droppableId];\n    var destColumn = columns[destination.droppableId];\n\n    var sourceItems = _toConsumableArray(sourceColumn.items);\n\n    var destItems = _toConsumableArray(destColumn.items);\n\n    var _sourceItems$splice = sourceItems.splice(source.index, 1),\n        _sourceItems$splice2 = _slicedToArray(_sourceItems$splice, 1),\n        removed = _sourceItems$splice2[0];\n\n    destItems.splice(destination.index, 0, removed);\n    setColumns(_objectSpread({}, columns, (_objectSpread2 = {}, _defineProperty(_objectSpread2, source.droppableId, _objectSpread({}, sourceColumn, {\n      items: sourceItems\n    })), _defineProperty(_objectSpread2, destination.droppableId, _objectSpread({}, destColumn, {\n      items: destItems\n    })), _objectSpread2)));\n  } else {\n    var column = columns[source.droppableId];\n\n    var copiedItems = _toConsumableArray(column.items);\n\n    var _copiedItems$splice = copiedItems.splice(source.index, 1),\n        _copiedItems$splice2 = _slicedToArray(_copiedItems$splice, 1),\n        _removed = _copiedItems$splice2[0];\n\n    copiedItems.splice(destination.index, 0, _removed);\n    setColumns(_objectSpread({}, columns, _defineProperty({}, source.droppableId, _objectSpread({}, column, {\n      items: copiedItems\n    }))));\n  }\n};\n\nexport default function CustomizedTreeView(props) {\n  var classes = useStyles();\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      menu = _useState2[0],\n      setMenu = _useState2[1];\n\n  var _useState3 = useState(0),\n      _useState4 = _slicedToArray(_useState3, 2),\n      x = _useState4[0],\n      setX = _useState4[1];\n\n  var _useState5 = useState(0),\n      _useState6 = _slicedToArray(_useState5, 2),\n      y = _useState6[0],\n      setY = _useState6[1];\n\n  var _useState7 = useState(null),\n      _useState8 = _slicedToArray(_useState7, 2),\n      id = _useState8[0],\n      setId = _useState8[1];\n\n  var _useState9 = useState(null),\n      _useState10 = _slicedToArray(_useState9, 2),\n      group_id = _useState10[0],\n      setGroup_id = _useState10[1];\n\n  var _useState11 = useState(columnsFromBackend),\n      _useState12 = _slicedToArray(_useState11, 2),\n      columns = _useState12[0],\n      setColumns = _useState12[1];\n\n  useEffect(function () {\n    window.onclick = function () {\n      setMenu(false);\n\n      if (props.movingGroupStatus) {\n        props.endeMovingGroup();\n      }\n    };\n\n    window.onscroll = function () {\n      return setMenu(false);\n    }; // window.onmousedown = () => setMenu(false)\n\n  }, [props.movingGroupStatus]);\n\n  var myContextMenu = function myContextMenu(event, group_id, id) {\n    event.stopPropagation();\n    console.log('item id: ', id);\n    event.preventDefault();\n    setMenu(!menu);\n    setX(event.clientX);\n    setY(event.clientY);\n    setGroup_id(group_id);\n    setId(id);\n  };\n\n  var onClickHandler = function onClickHandler(type, group_id, id) {\n    switch (type) {\n      case 'add':\n        {\n          props.setActionToggleSubModal(type, group_id, id);\n          break;\n        }\n\n      case 'edit':\n        {\n          props.subGroupActions('get', id);\n          props.setActionToggleSubModal(type);\n          break;\n        }\n\n      case 'move':\n        {\n          props.subGroupActions('get', id);\n          props.startMovingGroup();\n          break;\n        }\n\n      default:\n        {\n          props.subGroupActions('get', id);\n          props.subGroupActions('delete', id);\n          break;\n        }\n    }\n  };\n\n  var treeItemRender = function treeItemRender(group_id, id) {\n    return props.data.map(function (item) {\n      if (parseInt(item.parent_id) === parseInt(id)) {\n        var groupId = item.group_id ? item.group_id.id : false;\n\n        if (parseInt(groupId) === parseInt(group_id)) {\n          return React.createElement(\"div\", {\n            className: styls.block,\n            key: item.id,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 212\n            },\n            __self: this\n          }, React.createElement(StyledTreeItem, {\n            onContextMenu: function onContextMenu(event) {\n              return myContextMenu(event, item.group_id.id, item.id);\n            },\n            key: item.id,\n            nodeId: \"\\\"\".concat(item.id, \"\\\"\"),\n            label: item.name,\n            fontSize: '20px',\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 216\n            },\n            __self: this\n          }, treeItemRender(item.group_id.id, item.id)), props.movingGroupStatus ? React.createElement(ButtonUi, {\n            onclick: function onclick(item) {\n              return movingHandler(item);\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 228\n            },\n            __self: this\n          }, React.createElement(Icon.ArrowLeft, {\n            className: styls.leftArrow,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 231\n            },\n            __self: this\n          })) : null);\n        } else {\n          return null;\n        }\n      } else {\n        return null;\n      }\n    });\n  };\n\n  var movingHandler = function movingHandler(id) {\n    alert('he');\n    console.log(id);\n  };\n\n  return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n    style: {\n      display: 'flex',\n      justifyContent: 'center',\n      height: '100%'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 257\n    },\n    __self: this\n  }, React.createElement(DragDropContext, {\n    onDragEnd: function onDragEnd(result) {\n      return _onDragEnd(result, columns, setColumns);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 258\n    },\n    __self: this\n  }, Object.entries(columns).map(function (_ref) {\n    var _ref2 = _slicedToArray(_ref, 2),\n        id = _ref2[0],\n        column = _ref2[1];\n\n    return React.createElement(\"div\", {\n      key: id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263\n      },\n      __self: this\n    }, column.name), React.createElement(Droppable, {\n      droppableId: id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264\n      },\n      __self: this\n    }, function (provided, snapshot) {\n      return React.createElement(\"div\", Object.assign({}, provided.droppableProps, {\n        ref: provided.innerRef,\n        style: {\n          background: snapshot.isDraggingOver ? 'lightblue' : 'lightgrey',\n          padding: 4,\n          width: 250,\n          minHeight: 500\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 268\n        },\n        __self: this\n      }), column.items.map(function (item, index) {\n        return React.createElement(Draggable, {\n          key: item.id,\n          draggableId: item.id,\n          index: index,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 281\n          },\n          __self: this\n        }, function (provided, snapshot) {\n          return React.createElement(\"div\", Object.assign({\n            ref: provided.innerRef\n          }, provided.draggableProps, provided.dragHandleProps, {\n            style: _objectSpread({\n              userSelect: \"none\",\n              padding: 16,\n              margin: \"0 0 8px 0\",\n              minHeight: '50px',\n              backgroundColor: snapshot.isDragging ? '#263b4a' : '#456C86',\n              color: 'white'\n            }, provided.draggableProps.style),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 289\n            },\n            __self: this\n          }), item.content);\n        });\n      }), provided.placeholder);\n    }));\n  }))), menu ? React.createElement(ContextMenu, {\n    onClick: onClickHandler,\n    left: x,\n    top: y,\n    id: id,\n    group_id: group_id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 330\n    },\n    __self: this\n  }) : null, React.createElement(TreeView, {\n    style: {\n      marginBottom: 100\n    },\n    className: classes.root,\n    defaultExpanded: ['1'],\n    defaultCollapseIcon: React.createElement(MinusSquare, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 344\n      },\n      __self: this\n    }),\n    defaultExpandIcon: React.createElement(PlusSquare, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 345\n      },\n      __self: this\n    }),\n    defaultEndIcon: React.createElement(CloseSquare, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 346\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 340\n    },\n    __self: this\n  }, React.createElement(StyledTreeItem // onContextMenu={event => myContextMenu(event, props.mainId)}\n  , {\n    nodeId: \"\".concat(props.mainId),\n    label: props.mainName,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 348\n    },\n    __self: this\n  }, props.data.length ? props.data.map(function (item) {\n    return item.group_id && !item.parent_id ? props.mainId === item.group_id.id ? React.createElement(\"div\", {\n      className: styls.block,\n      key: item.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 361\n      },\n      __self: this\n    }, React.createElement(StyledTreeItem, {\n      onContextMenu: function onContextMenu(event) {\n        return myContextMenu(event, item.group_id.id, item.id);\n      },\n      key: item.id,\n      nodeId: \"\\\"\".concat(item.id, \"\\\"\"),\n      label: item.name,\n      fontSize: '20px',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 365\n      },\n      __self: this\n    }, treeItemRender(item.group_id.id, item.id) ? treeItemRender(item.group_id.id, item.id) : 'empty'), props.movingGroupStatus ? React.createElement(ButtonUi, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 377\n      },\n      __self: this\n    }, React.createElement(Icon.ArrowLeft, {\n      className: styls.leftArrow,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 378\n      },\n      __self: this\n    })) : null) : null : null;\n  }) : null)));\n}","map":{"version":3,"sources":["C:/Users/User/Desktop/barcode/src/containers/pages/group/treeUi/tree.js"],"names":["React","useEffect","useState","PropTypes","SvgIcon","fade","makeStyles","withStyles","TreeView","TreeItem","Collapse","useSpring","animated","ContextMenu","DragDropContext","Droppable","Draggable","uuid","Icon","styls","ButtonUi","MinusSquare","props","width","height","PlusSquare","CloseSquare","TransitionComponent","style","from","opacity","transform","to","in","propTypes","bool","StyledTreeItem","theme","iconContainer","group","marginLeft","paddingLeft","borderLeft","palette","text","primary","useStyles","root","flexGrow","maxWidth","fontSize","itemsFromBackend","id","content","columnsFromBackend","name","items","onDragEnd","result","columns","setColumns","destination","source","droppableId","sourceColumn","destColumn","sourceItems","destItems","splice","index","removed","column","copiedItems","CustomizedTreeView","classes","menu","setMenu","x","setX","y","setY","setId","group_id","setGroup_id","window","onclick","movingGroupStatus","endeMovingGroup","onscroll","myContextMenu","event","stopPropagation","console","log","preventDefault","clientX","clientY","onClickHandler","type","setActionToggleSubModal","subGroupActions","startMovingGroup","treeItemRender","data","map","item","parseInt","parent_id","groupId","block","movingHandler","leftArrow","alert","display","justifyContent","Object","entries","provided","snapshot","droppableProps","innerRef","background","isDraggingOver","padding","minHeight","draggableProps","dragHandleProps","userSelect","margin","backgroundColor","isDragging","color","placeholder","marginBottom","mainId","mainName","length"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport SvgIcon from '@material-ui/core/SvgIcon';\r\nimport {fade, makeStyles, withStyles} from '@material-ui/core/styles';\r\nimport TreeView from '@material-ui/lab/TreeView';\r\nimport TreeItem from '@material-ui/lab/TreeItem';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport {useSpring, animated} from 'react-spring/web.cjs';\r\nimport ContextMenu from \"./contextMenu/contextMenu\";\r\nimport {DragDropContext, Droppable, Draggable} from 'react-beautiful-dnd';\r\nimport uuid from 'uuid/v4';\r\nimport * as Icon from 'react-feather'\r\nimport styls from './tree.module.css'\r\nimport ButtonUi from \"../../../../components/buttons/buttonUi\";\r\n\r\nfunction MinusSquare(props) {\r\n    return (\r\n        <SvgIcon fontSize=\"inherit\" style={{width: 14, height: 14}} {...props}>\r\n            {/* tslint:disable-next-line: max-line-length */}\r\n            <path\r\n                d=\"M22.047 22.074v0 0-20.147 0h-20.12v0 20.147 0h20.12zM22.047 24h-20.12q-.803 0-1.365-.562t-.562-1.365v-20.147q0-.776.562-1.351t1.365-.575h20.147q.776 0 1.351.575t.575 1.351v20.147q0 .803-.575 1.365t-1.378.562v0zM17.873 11.023h-11.826q-.375 0-.669.281t-.294.682v0q0 .401.294 .682t.669.281h11.826q.375 0 .669-.281t.294-.682v0q0-.401-.294-.682t-.669-.281z\"/>\r\n        </SvgIcon>\r\n    );\r\n}\r\n\r\nfunction PlusSquare(props) {\r\n    return (\r\n        <SvgIcon fontSize=\"inherit\" style={{width: 14, height: 14}} {...props}>\r\n            {/* tslint:disable-next-line: max-line-length */}\r\n            <path\r\n                d=\"M22.047 22.074v0 0-20.147 0h-20.12v0 20.147 0h20.12zM22.047 24h-20.12q-.803 0-1.365-.562t-.562-1.365v-20.147q0-.776.562-1.351t1.365-.575h20.147q.776 0 1.351.575t.575 1.351v20.147q0 .803-.575 1.365t-1.378.562v0zM17.873 12.977h-4.923v4.896q0 .401-.281.682t-.682.281v0q-.375 0-.669-.281t-.294-.682v-4.896h-4.923q-.401 0-.682-.294t-.281-.669v0q0-.401.281-.682t.682-.281h4.923v-4.896q0-.401.294-.682t.669-.281v0q.401 0 .682.281t.281.682v4.896h4.923q.401 0 .682.281t.281.682v0q0 .375-.281.669t-.682.294z\"/>\r\n        </SvgIcon>\r\n    );\r\n}\r\n\r\nfunction CloseSquare(props) {\r\n    return (\r\n        <SvgIcon className=\"close\" fontSize=\"inherit\" style={{width: 14, height: 14}} {...props}>\r\n            {/* tslint:disable-next-line: max-line-length */}\r\n            <path\r\n                d=\"M17.485 17.512q-.281.281-.682.281t-.696-.268l-4.12-4.147-4.12 4.147q-.294.268-.696.268t-.682-.281-.281-.682.294-.669l4.12-4.147-4.12-4.147q-.294-.268-.294-.669t.281-.682.682-.281.696 .268l4.12 4.147 4.12-4.147q.294-.268.696-.268t.682.281 .281.669-.294.682l-4.12 4.147 4.12 4.147q.294.268 .294.669t-.281.682zM22.047 22.074v0 0-20.147 0h-20.12v0 20.147 0h20.12zM22.047 24h-20.12q-.803 0-1.365-.562t-.562-1.365v-20.147q0-.776.562-1.351t1.365-.575h20.147q.776 0 1.351.575t.575 1.351v20.147q0 .803-.575 1.365t-1.378.562v0z\"/>\r\n        </SvgIcon>\r\n    );\r\n}\r\n\r\nfunction TransitionComponent(props) {\r\n    const style = useSpring({\r\n        from: {opacity: 0, transform: 'translate3d(20px,0,0)'},\r\n        to: {opacity: props.in ? 1 : 0, transform: `translate3d(${props.in ? 0 : 20}px,0,0)`},\r\n    });\r\n\r\n    return (\r\n        <animated.div style={style}>\r\n            <Collapse {...props} />\r\n        </animated.div>\r\n    );\r\n}\r\n\r\nTransitionComponent.propTypes = {\r\n    /**\r\n     * Show the component; triggers the enter or exit states\r\n     */\r\n    in: PropTypes.bool,\r\n};\r\n\r\nconst StyledTreeItem = withStyles((theme) => ({\r\n    iconContainer: {\r\n        '& .close': {\r\n            opacity: 0.1,\r\n        },\r\n    },\r\n    group: {\r\n        marginLeft: 7,\r\n        paddingLeft: 18,\r\n        borderLeft: `1px dashed ${fade(theme.palette.text.primary, 0.4)}`,\r\n    },\r\n}))((props) => <TreeItem {...props} TransitionComponent={TransitionComponent}/>);\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        height: 'auto',\r\n        flexGrow: 1,\r\n        maxWidth: '100%',\r\n        fontSize: '2rem !important'\r\n    },\r\n});\r\n\r\nconst itemsFromBackend = [\r\n    {id: uuid(), content: 'First task'},\r\n    {id: uuid(), content: 'Second task'}\r\n];\r\n\r\nconst columnsFromBackend = {\r\n    [uuid()]: {\r\n        name: 'Requested',\r\n        items: itemsFromBackend\r\n    },\r\n    [uuid()]: {\r\n        name: 'In Proggress',\r\n        items: []\r\n    },\r\n    [uuid()]: {\r\n        name: 'Done',\r\n        items: []\r\n    }\r\n};\r\n\r\nconst onDragEnd = (result, columns, setColumns) => {\r\n    if (!result.destination) return;\r\n    const {source, destination} = result;\r\n    if (source.droppableId !== destination.droppableId) {\r\n        const sourceColumn = columns[source.droppableId];\r\n        const destColumn = columns[destination.droppableId];\r\n        const sourceItems = [...sourceColumn.items];\r\n        const destItems = [...destColumn.items];\r\n        const [removed] = sourceItems.splice(source.index, 1);\r\n        destItems.splice(destination.index, 0, removed);\r\n        setColumns({\r\n            ...columns,\r\n            [source.droppableId]: {\r\n                ...sourceColumn,\r\n                items: sourceItems\r\n            },\r\n            [destination.droppableId]: {\r\n                ...destColumn,\r\n                items: destItems\r\n            }\r\n        })\r\n    } else {\r\n        const column = columns[source.droppableId];\r\n        const copiedItems = [...column.items];\r\n        const [removed] = copiedItems.splice(source.index, 1);\r\n        copiedItems.splice(destination.index, 0, removed);\r\n        setColumns({\r\n            ...columns,\r\n            [source.droppableId]: {\r\n                ...column,\r\n                items: copiedItems\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\nexport default function CustomizedTreeView(props) {\r\n    const classes = useStyles();\r\n    const [menu, setMenu] = useState(false)\r\n    const [x, setX] = useState(0)\r\n    const [y, setY] = useState(0)\r\n    const [id, setId] = useState(null)\r\n    const [group_id, setGroup_id] = useState(null)\r\n    const [columns, setColumns] = useState(columnsFromBackend)\r\n\r\n\r\n    useEffect(\r\n        () => {\r\n            window.onclick = () => {\r\n                setMenu(false)\r\n                if (props.movingGroupStatus) {\r\n                    props.endeMovingGroup()\r\n                }\r\n            }\r\n\r\n            window.onscroll = () => setMenu(false)\r\n            // window.onmousedown = () => setMenu(false)\r\n        }, [props.movingGroupStatus]\r\n    )\r\n\r\n    const myContextMenu = (event, group_id, id) => {\r\n        event.stopPropagation();\r\n        console.log('item id: ', id)\r\n        event.preventDefault()\r\n        setMenu(!menu)\r\n        setX(event.clientX)\r\n        setY(event.clientY)\r\n        setGroup_id(group_id)\r\n        setId(id)\r\n    }\r\n\r\n    const onClickHandler = (type, group_id, id) => {\r\n\r\n        switch (type) {\r\n            case 'add': {\r\n                props.setActionToggleSubModal(type, group_id, id);\r\n                break;\r\n            }\r\n            case 'edit': {\r\n                props.subGroupActions('get', id);\r\n                props.setActionToggleSubModal(type);\r\n                break;\r\n            }\r\n            case 'move': {\r\n                props.subGroupActions('get', id);\r\n                props.startMovingGroup()\r\n                break;\r\n            }\r\n            default: {\r\n                props.subGroupActions('get', id);\r\n                props.subGroupActions('delete', id);\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    const treeItemRender = (group_id, id) => {\r\n\r\n        return props.data.map(\r\n            item => {\r\n                if (parseInt(item.parent_id) === parseInt(id)) {\r\n                    let groupId = item.group_id ? item.group_id.id : false\r\n                    if (parseInt(groupId) === parseInt(group_id)) {\r\n                        return (\r\n                            <div\r\n                                className={styls.block}\r\n                                key={item.id}\r\n                            >\r\n                                <StyledTreeItem\r\n                                    onContextMenu={event => myContextMenu(event, item.group_id.id, item.id)}\r\n                                    key={item.id}\r\n                                    nodeId={`\"${item.id}\"`}\r\n                                    label={item.name}\r\n                                    fontSize={'20px'}>\r\n                                    {\r\n                                        treeItemRender(item.group_id.id, item.id)\r\n                                    }\r\n                                </StyledTreeItem>\r\n                                {\r\n                                    props.movingGroupStatus ?\r\n                                        <ButtonUi\r\n                                            onclick={item => movingHandler(item)}\r\n                                        >\r\n                                            <Icon.ArrowLeft className={styls.leftArrow}/>\r\n                                        </ButtonUi>\r\n                                        :\r\n                                        null\r\n                                }\r\n                            </div>\r\n                        )\r\n                    } else {\r\n                        return null;\r\n                    }\r\n                } else {\r\n                    return null;\r\n                }\r\n            }\r\n        )\r\n    }\r\n\r\n\r\n    const movingHandler = id => {\r\n        alert('he')\r\n        console.log(id)\r\n    }\r\n\r\n    return (\r\n\r\n        <>\r\n            <div style={{display: 'flex', justifyContent: 'center', height: '100%'}}>\r\n                <DragDropContext onDragEnd={result => onDragEnd(result, columns, setColumns)}>\r\n                    {\r\n                        Object.entries(columns).map(([id, column]) => {\r\n                            return (\r\n                                <div key={id}>\r\n                                    <h2>{column.name}</h2>\r\n                                    <Droppable droppableId={id}>\r\n                                        {\r\n                                            (provided, snapshot) => {\r\n                                                return (\r\n                                                    <div\r\n                                                        {...provided.droppableProps}\r\n                                                        ref={provided.innerRef}\r\n                                                        style={{\r\n                                                            background: snapshot.isDraggingOver ? 'lightblue' : 'lightgrey',\r\n                                                            padding: 4,\r\n                                                            width: 250,\r\n                                                            minHeight: 500,\r\n                                                        }}\r\n                                                    >\r\n                                                        {\r\n                                                            column.items.map((item, index) => {\r\n                                                                return (\r\n                                                                    <Draggable\r\n                                                                        key={item.id}\r\n                                                                        draggableId={item.id}\r\n                                                                        index={index}\r\n                                                                    >\r\n                                                                        {\r\n                                                                            (provided, snapshot) => {\r\n                                                                                return (\r\n                                                                                    <div\r\n                                                                                        ref={provided.innerRef}\r\n                                                                                        {...provided.draggableProps}\r\n                                                                                        {...provided.dragHandleProps}\r\n                                                                                        style={{\r\n                                                                                            userSelect: \"none\",\r\n                                                                                            padding: 16,\r\n                                                                                            margin: \"0 0 8px 0\",\r\n                                                                                            minHeight: '50px',\r\n                                                                                            backgroundColor: snapshot.isDragging ? '#263b4a' : '#456C86',\r\n                                                                                            color: 'white',\r\n                                                                                            ...provided.draggableProps.style\r\n                                                                                        }}\r\n                                                                                    >\r\n                                                                                        {\r\n                                                                                            item.content\r\n                                                                                        }\r\n                                                                                    </div>\r\n                                                                                )\r\n                                                                            }\r\n                                                                        }\r\n                                                                    </Draggable>\r\n                                                                )\r\n                                                            })\r\n                                                        }\r\n                                                        {\r\n                                                            provided.placeholder\r\n                                                        }\r\n                                                    </div>\r\n                                                )\r\n                                            }\r\n                                        }\r\n                                    </Droppable>\r\n                                </div>\r\n                            )\r\n                        })\r\n                    }\r\n                </DragDropContext>\r\n            </div>\r\n            {\r\n                menu ?\r\n                    <ContextMenu\r\n                        onClick={onClickHandler}\r\n                        left={x}\r\n                        top={y}\r\n                        id={id}\r\n                        group_id={group_id}\r\n                    />\r\n                    :\r\n                    null\r\n            }\r\n            <TreeView\r\n                style={{marginBottom: 100}}\r\n                className={classes.root}\r\n                defaultExpanded={['1']}\r\n                defaultCollapseIcon={<MinusSquare/>}\r\n                defaultExpandIcon={<PlusSquare/>}\r\n                defaultEndIcon={<CloseSquare/>}\r\n            >\r\n                <StyledTreeItem\r\n                    // onContextMenu={event => myContextMenu(event, props.mainId)}\r\n                    nodeId={`${props.mainId}`}\r\n                    label={props.mainName}\r\n                >\r\n                    {\r\n                        props.data.length ?\r\n                            props.data.map(\r\n                                item => {\r\n\r\n                                    return item.group_id && !item.parent_id ?\r\n\r\n                                        props.mainId === item.group_id.id ?\r\n                                            <div\r\n                                                className={styls.block}\r\n                                                key={item.id}\r\n                                            >\r\n                                                <StyledTreeItem\r\n                                                    onContextMenu={event => myContextMenu(event, item.group_id.id, item.id)}\r\n                                                    key={item.id}\r\n                                                    nodeId={`\"${item.id}\"`}\r\n                                                    label={item.name}\r\n                                                    fontSize={'20px'}>\r\n                                                    {\r\n                                                        treeItemRender(item.group_id.id, item.id) ? treeItemRender(item.group_id.id, item.id) : 'empty'\r\n                                                    }\r\n                                                </StyledTreeItem>\r\n                                                {\r\n                                                    props.movingGroupStatus ?\r\n                                                        <ButtonUi>\r\n                                                            <Icon.ArrowLeft className={styls.leftArrow}/>\r\n                                                        </ButtonUi>\r\n                                                        :\r\n                                                        null\r\n                                                }\r\n                                            </div>\r\n                                            :\r\n                                            null\r\n                                        :\r\n                                        null\r\n                                }\r\n                            )\r\n                            :\r\n                            null\r\n                    }\r\n                </StyledTreeItem>\r\n            </TreeView>\r\n        </>\r\n    );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}