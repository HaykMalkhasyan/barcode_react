{"ast":null,"code":"var _this = this;\n\nimport { GET_CATEGORIES_REQUEST, GET_CATEGORIES_FAIL, GET_CATEGORIES_SUCCESS, GET_CATEGORY_REQUEST, GET_CATEGORY_FAIL, GET_CATEGORY_SUCCESS, ADD_CATEGORY_REQUEST, ADD_CATEGORY_FAIL, ADD_CATEGORY_SUCCESS, EDIT_CATEGORY_REQUEST, EDIT_CATEGORY_FAIL, EDIT_CATEGORY_SUCCESS, DELETE_CATEGORY_REQUEST, DELETE_CATEGORY_FAIL, DELETE_CATEGORY_SUCCESS, SET_MODAL_VALUES } from \"./actionTypes\";\nvar cols = 'id,name';\nvar url = \"Items/Category\";\nexport var getCategories = function getCategories() {\n  return {\n    types: [GET_CATEGORIES_REQUEST, GET_CATEGORIES_FAIL, GET_CATEGORIES_SUCCESS],\n    promise: function promise(apiClient) {\n      return apiClient.get(url, JSON.stringify({\n        cols: cols\n      }));\n    }\n  };\n};\nexport var getCategory = function getCategory(id) {\n  return {\n    types: [GET_CATEGORY_REQUEST, GET_CATEGORY_FAIL, GET_CATEGORY_SUCCESS],\n    promise: function promise(apiClient) {\n      return apiClient.get(url, JSON.stringify({\n        param: {\n          id: id\n        }\n      }));\n    }\n  };\n};\nexport var addCategory = function addCategory(data) {\n  console.log(data);\n  var types = [ADD_CATEGORY_REQUEST, ADD_CATEGORY_FAIL, ADD_CATEGORY_SUCCESS];\n\n  var promise = function promise(apiClient) {\n    return apiClient.post(url, JSON.stringify({\n      data: data,\n      cols: cols\n    }));\n  };\n\n  if (data.id) {\n    types = [EDIT_CATEGORY_REQUEST, EDIT_CATEGORY_FAIL, EDIT_CATEGORY_SUCCESS];\n\n    promise = function promise(apiClient) {\n      return apiClient.put(url, JSON.stringify({\n        data: data,\n        cols: cols,\n        id: data.id\n      }));\n    };\n  }\n\n  return {\n    types: types,\n    promise: promise\n  };\n};\nexport var deleteCategory = function deleteCategory(id) {\n  return {\n    types: [DELETE_CATEGORY_REQUEST, DELETE_CATEGORY_FAIL, DELETE_CATEGORY_SUCCESS],\n    promise: function promise(apiClient) {\n      return apiClient.delete(url, JSON.stringify({\n        id: id,\n        cols: cols\n      }));\n    }\n  };\n};\nexport var categoryModal = function categoryModal(type, modal) {\n  return {\n    type: type.toUpperCase() + '_MODAL',\n    modal: modal\n  };\n};\nexport var setModalValues = function setModalValues(value) {\n  return {\n    type: SET_MODAL_VALUES,\n    value: value\n  };\n};\nexport var toggle = function toggle(type, id) {\n  _this.props.categoryModal(type, !_this.props.modal[type]);\n\n  _this.props.setModalValues({\n    'parent_id': id\n  });\n\n  if (type === \"edit\" && id) {\n    _this.props.getCategory(id);\n  }\n};","map":{"version":3,"sources":["C:/Users/User/Desktop/barcode/src/redux/categories/actions.js"],"names":["GET_CATEGORIES_REQUEST","GET_CATEGORIES_FAIL","GET_CATEGORIES_SUCCESS","GET_CATEGORY_REQUEST","GET_CATEGORY_FAIL","GET_CATEGORY_SUCCESS","ADD_CATEGORY_REQUEST","ADD_CATEGORY_FAIL","ADD_CATEGORY_SUCCESS","EDIT_CATEGORY_REQUEST","EDIT_CATEGORY_FAIL","EDIT_CATEGORY_SUCCESS","DELETE_CATEGORY_REQUEST","DELETE_CATEGORY_FAIL","DELETE_CATEGORY_SUCCESS","SET_MODAL_VALUES","cols","url","getCategories","types","promise","apiClient","get","JSON","stringify","getCategory","id","param","addCategory","data","console","log","post","put","deleteCategory","delete","categoryModal","type","modal","toUpperCase","setModalValues","value","toggle","props"],"mappings":"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","sourcesContent":["import {\r\n    GET_CATEGORIES_REQUEST,GET_CATEGORIES_FAIL,GET_CATEGORIES_SUCCESS,\r\n    GET_CATEGORY_REQUEST,GET_CATEGORY_FAIL,GET_CATEGORY_SUCCESS,\r\n    ADD_CATEGORY_REQUEST,ADD_CATEGORY_FAIL,ADD_CATEGORY_SUCCESS,\r\n    EDIT_CATEGORY_REQUEST,EDIT_CATEGORY_FAIL,EDIT_CATEGORY_SUCCESS,\r\n    DELETE_CATEGORY_REQUEST,DELETE_CATEGORY_FAIL,DELETE_CATEGORY_SUCCESS,\r\n    SET_MODAL_VALUES\r\n} from \"./actionTypes\";\r\n\r\n\r\nlet cols =  'id,name';\r\nlet url = `Items/Category`;\r\nexport const getCategories = () => {\r\n    return {\r\n        types: [GET_CATEGORIES_REQUEST,GET_CATEGORIES_FAIL,GET_CATEGORIES_SUCCESS],\r\n        promise: (apiClient) => apiClient.get(url, JSON.stringify({ cols }))\r\n    }\r\n}\r\n\r\nexport const getCategory = ( id ) => {\r\n    return {\r\n        types: [GET_CATEGORY_REQUEST,GET_CATEGORY_FAIL,GET_CATEGORY_SUCCESS],\r\n        promise: (apiClient) => apiClient.get(url, JSON.stringify({ param:{id} }))\r\n    }\r\n};\r\n\r\nexport const addCategory = (data) => {\r\n    console.log(data)\r\n    let types = [ADD_CATEGORY_REQUEST,ADD_CATEGORY_FAIL,ADD_CATEGORY_SUCCESS];\r\n    let promise = (apiClient) => apiClient.post(url,JSON.stringify({data,cols}))\r\n    if(data.id){\r\n        types = [EDIT_CATEGORY_REQUEST,EDIT_CATEGORY_FAIL,EDIT_CATEGORY_SUCCESS];\r\n        promise = (apiClient) => apiClient.put(url,JSON.stringify({data,cols,id:data.id}));\r\n    }\r\n    return {\r\n        types: types,\r\n        promise: promise\r\n    }\r\n};\r\n\r\nexport const deleteCategory = ( id ) => {\r\n    return {\r\n        types: [DELETE_CATEGORY_REQUEST,DELETE_CATEGORY_FAIL,DELETE_CATEGORY_SUCCESS],\r\n        promise: (apiClient) => apiClient.delete(url, JSON.stringify({ id,cols }))\r\n    }\r\n};\r\n\r\n\r\nexport const categoryModal = (type,modal) => {\r\n    return {\r\n        type: type.toUpperCase()+'_MODAL',\r\n        modal\r\n    }\r\n}\r\n\r\nexport const setModalValues = (value) => {\r\n    return {\r\n        type: SET_MODAL_VALUES,\r\n        value\r\n    }\r\n}\r\n\r\nexport const toggle = (type,id) => {\r\n    this.props.categoryModal(type,!this.props.modal[type])\r\n    this.props.setModalValues({'parent_id':id})\r\n    if(type===\"edit\" && id){\r\n        this.props.getCategory(id)\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}