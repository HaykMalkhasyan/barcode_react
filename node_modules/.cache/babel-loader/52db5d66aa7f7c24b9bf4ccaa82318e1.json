{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\User\\\\Desktop\\\\barcode\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\barcode\\\\src\\\\components\\\\dropdown\\\\dropdown.js\";\nimport React, { useState } from 'react';\nimport { Dropdown, DropdownMenu, DropdownToggle } from 'reactstrap';\n\nvar DropdownComponent = function DropdownComponent(props) {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      dropdownOpen = _useState2[0],\n      setDropdownOpen = _useState2[1];\n\n  var toggle = function toggle() {\n    return setDropdownOpen(function (prevState) {\n      return !prevState;\n    });\n  };\n\n  return React.createElement(Dropdown, {\n    isOpen: dropdownOpen,\n    toggle: toggle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, React.createElement(DropdownToggle, {\n    tag: \"span\",\n    \"data-toggle\": \"dropdown\",\n    \"aria-expanded\": dropdownOpen,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, \"Custom Dropdown Content\"), React.createElement(DropdownMenu, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, props.data.map(function (value) {\n    return React.createElement(\"div\", {\n      onClick: toggle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }, value.name);\n  }), React.createElement(\"div\", {\n    onClick: toggle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, \"Custom dropdown item\"), React.createElement(\"div\", {\n    onClick: toggle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, \"Custom dropdown item\"), React.createElement(\"div\", {\n    onClick: toggle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, \"Custom dropdown item\"), React.createElement(\"div\", {\n    onClick: toggle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, \"Custom dropdown item\")));\n};\n\nexport default DropdownComponent;","map":{"version":3,"sources":["C:/Users/User/Desktop/barcode/src/components/dropdown/dropdown.js"],"names":["React","useState","Dropdown","DropdownMenu","DropdownToggle","DropdownComponent","props","dropdownOpen","setDropdownOpen","toggle","prevState","data","map","value","name"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,QAAT,EAAmBC,YAAnB,EAAiCC,cAAjC,QAAuD,YAAvD;;AAEA,IAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,CAACC,KAAD,EAAW;AAAA,kBACOL,QAAQ,CAAC,KAAD,CADf;AAAA;AAAA,MAC1BM,YAD0B;AAAA,MACZC,eADY;;AAGjC,MAAMC,MAAM,GAAG,SAATA,MAAS;AAAA,WAAMD,eAAe,CAAC,UAAAE,SAAS;AAAA,aAAI,CAACA,SAAL;AAAA,KAAV,CAArB;AAAA,GAAf;;AAEA,SACI,oBAAC,QAAD;AAAU,IAAA,MAAM,EAAEH,YAAlB;AAAgC,IAAA,MAAM,EAAEE,MAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,cAAD;AACI,IAAA,GAAG,EAAC,MADR;AAEI,mBAAY,UAFhB;AAGI,qBAAeF,YAHnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BADJ,EAQI,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKD,KAAK,CAACK,IAAN,CAAWC,GAAX,CAAe,UAACC,KAAD,EAAW;AACvB,WAAO;AAAK,MAAA,OAAO,EAAEJ,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAuBI,KAAK,CAACC,IAA7B,CAAP;AAEH,GAHA,CADL,EAKI;AAAK,IAAA,OAAO,EAAEL,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BALJ,EAMI;AAAK,IAAA,OAAO,EAAEA,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BANJ,EAOI;AAAK,IAAA,OAAO,EAAEA,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAPJ,EAQI;AAAK,IAAA,OAAO,EAAEA,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BARJ,CARJ,CADJ;AAqBH,CA1BD;;AA4BA,eAAeJ,iBAAf","sourcesContent":["import React, { useState } from 'react';\r\nimport { Dropdown, DropdownMenu, DropdownToggle } from 'reactstrap';\r\n\r\nconst DropdownComponent = (props) => {\r\n    const [dropdownOpen, setDropdownOpen] = useState(false);\r\n\r\n    const toggle = () => setDropdownOpen(prevState => !prevState);\r\n\r\n    return (\r\n        <Dropdown isOpen={dropdownOpen} toggle={toggle}>\r\n            <DropdownToggle\r\n                tag=\"span\"\r\n                data-toggle=\"dropdown\"\r\n                aria-expanded={dropdownOpen}\r\n            >\r\n                Custom Dropdown Content\r\n            </DropdownToggle>\r\n            <DropdownMenu>\r\n                {props.data.map((value) => {\r\n                    return <div onClick={toggle}>{value.name}</div>\r\n\r\n                })}\r\n                <div onClick={toggle}>Custom dropdown item</div>\r\n                <div onClick={toggle}>Custom dropdown item</div>\r\n                <div onClick={toggle}>Custom dropdown item</div>\r\n                <div onClick={toggle}>Custom dropdown item</div>\r\n            </DropdownMenu>\r\n        </Dropdown>\r\n    );\r\n}\r\n\r\nexport default DropdownComponent;"]},"metadata":{},"sourceType":"module"}