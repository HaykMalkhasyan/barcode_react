{"ast":null,"code":"import { GET_POSITIONS_REQUEST, GET_POSITIONS_FAIL, GET_POSITIONS_SUCCESS, GET_POSITION_REQUEST, GET_POSITION_FAIL, GET_POSITION_SUCCESS, ADD_POSITION_REQUEST, ADD_POSITION_FAIL, ADD_POSITION_SUCCESS, EDIT_POSITION_REQUEST, EDIT_POSITION_FAIL, EDIT_POSITION_SUCCESS, DELETE_POSITION_REQUEST, DELETE_POSITION_FAIL, DELETE_POSITION_SUCCESS, SET_MODAL_VALUES, HANDLE } from \"./actionTypes\";\nimport { ADD_CATEGORY_FAIL, ADD_CATEGORY_REQUEST, ADD_CATEGORY_SUCCESS, DELETE_CATEGORY_FAIL, DELETE_CATEGORY_REQUEST, DELETE_CATEGORY_SUCCESS, EDIT_CATEGORY_FAIL, EDIT_CATEGORY_REQUEST, EDIT_CATEGORY_SUCCESS, GET_CATEGORIES_FAIL, GET_CATEGORIES_REQUEST, GET_CATEGORIES_SUCCESS, GET_CATEGORY_FAIL, GET_CATEGORY_REQUEST, GET_CATEGORY_SUCCESS } from \"../categories/actionTypes\";\nvar cols = 'id,name';\nvar url = \"User/Position\";\nexport var categoryActions = function categoryActions(type, data) {\n  switch (type) {\n    case \"get\":\n      return {\n        types: [GET_POSITION_REQUEST, GET_POSITION_FAIL, GET_POSITION_SUCCESS],\n        promise: function promise(apiClient) {\n          return apiClient.get(url, JSON.stringify({\n            param: {\n              id: data.id\n            }\n          }));\n        }\n      };\n\n    case \"getAll\":\n      return {\n        types: [GET_POSITIONS_REQUEST, GET_POSITIONS_FAIL, GET_POSITIONS_SUCCESS],\n        promise: function promise(apiClient) {\n          return apiClient.get(url, JSON.stringify({\n            cols: cols\n          }));\n        }\n      };\n\n    case \"add\":\n      return {\n        types: [ADD_POSITION_REQUEST, ADD_POSITION_FAIL, ADD_POSITION_SUCCESS],\n        promise: function promise(apiClient) {\n          return apiClient.post(url, JSON.stringify({\n            data: data,\n            cols: cols\n          }));\n        }\n      };\n\n    case \"edit\":\n      return {\n        types: [EDIT_POSITION_REQUEST, EDIT_POSITION_FAIL, EDIT_POSITION_SUCCESS],\n        promise: function promise(apiClient) {\n          return apiClient.put(url, JSON.stringify({\n            id: data.id,\n            data: data,\n            cols: cols\n          }));\n        }\n      };\n\n    case \"delete\":\n      return {\n        types: [DELETE_POSITION_REQUEST, DELETE_POSITION_FAIL, DELETE_POSITION_SUCCESS],\n        promise: function promise(apiClient) {\n          return apiClient.delete(url, JSON.stringify({\n            id: data.id,\n            data: data,\n            cols: cols\n          }));\n        }\n      };\n\n    default:\n      return;\n  }\n};\nexport var handle = function handle(id, parentId) {\n  return {\n    type: HANDLE,\n    id: id,\n    parentId: parentId\n  };\n};\nexport var positionModal = function positionModal(type, modal) {\n  return {\n    type: type.toUpperCase() + '_MODAL',\n    modal: modal\n  };\n};\nexport var setModalValues = function setModalValues(key, value) {\n  return {\n    type: SET_MODAL_VALUES,\n    key: key,\n    value: value\n  };\n};","map":{"version":3,"sources":["C:/Users/User/Desktop/barcode/src/redux/positions/actions.js"],"names":["GET_POSITIONS_REQUEST","GET_POSITIONS_FAIL","GET_POSITIONS_SUCCESS","GET_POSITION_REQUEST","GET_POSITION_FAIL","GET_POSITION_SUCCESS","ADD_POSITION_REQUEST","ADD_POSITION_FAIL","ADD_POSITION_SUCCESS","EDIT_POSITION_REQUEST","EDIT_POSITION_FAIL","EDIT_POSITION_SUCCESS","DELETE_POSITION_REQUEST","DELETE_POSITION_FAIL","DELETE_POSITION_SUCCESS","SET_MODAL_VALUES","HANDLE","ADD_CATEGORY_FAIL","ADD_CATEGORY_REQUEST","ADD_CATEGORY_SUCCESS","DELETE_CATEGORY_FAIL","DELETE_CATEGORY_REQUEST","DELETE_CATEGORY_SUCCESS","EDIT_CATEGORY_FAIL","EDIT_CATEGORY_REQUEST","EDIT_CATEGORY_SUCCESS","GET_CATEGORIES_FAIL","GET_CATEGORIES_REQUEST","GET_CATEGORIES_SUCCESS","GET_CATEGORY_FAIL","GET_CATEGORY_REQUEST","GET_CATEGORY_SUCCESS","cols","url","categoryActions","type","data","types","promise","apiClient","get","JSON","stringify","param","id","post","put","delete","handle","parentId","positionModal","modal","toUpperCase","setModalValues","key","value"],"mappings":"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","sourcesContent":["import {\r\n    GET_POSITIONS_REQUEST,GET_POSITIONS_FAIL,GET_POSITIONS_SUCCESS,\r\n    GET_POSITION_REQUEST,GET_POSITION_FAIL,GET_POSITION_SUCCESS,\r\n    ADD_POSITION_REQUEST,ADD_POSITION_FAIL,ADD_POSITION_SUCCESS,\r\n    EDIT_POSITION_REQUEST,EDIT_POSITION_FAIL,EDIT_POSITION_SUCCESS,\r\n    DELETE_POSITION_REQUEST,DELETE_POSITION_FAIL,DELETE_POSITION_SUCCESS,\r\n    SET_MODAL_VALUES,\r\n    HANDLE\r\n} from \"./actionTypes\";\r\nimport {\r\n    ADD_CATEGORY_FAIL,\r\n    ADD_CATEGORY_REQUEST,\r\n    ADD_CATEGORY_SUCCESS, DELETE_CATEGORY_FAIL,\r\n    DELETE_CATEGORY_REQUEST, DELETE_CATEGORY_SUCCESS,\r\n    EDIT_CATEGORY_FAIL,\r\n    EDIT_CATEGORY_REQUEST,\r\n    EDIT_CATEGORY_SUCCESS,\r\n    GET_CATEGORIES_FAIL,\r\n    GET_CATEGORIES_REQUEST,\r\n    GET_CATEGORIES_SUCCESS,\r\n    GET_CATEGORY_FAIL,\r\n    GET_CATEGORY_REQUEST,\r\n    GET_CATEGORY_SUCCESS\r\n} from \"../categories/actionTypes\";\r\n\r\nlet cols =  'id,name';\r\nlet url = `User/Position`;\r\n\r\n\r\nexport const categoryActions = (type,data) => {\r\n    switch(type) {\r\n        case \"get\":\r\n            return {\r\n                types: [GET_POSITION_REQUEST,GET_POSITION_FAIL,GET_POSITION_SUCCESS],\r\n                promise: (apiClient) => apiClient.get(url, JSON.stringify({ param:{id:data.id} }))\r\n            }\r\n        case \"getAll\":\r\n            return {\r\n                types: [GET_POSITIONS_REQUEST,GET_POSITIONS_FAIL,GET_POSITIONS_SUCCESS],\r\n                promise: (apiClient) => apiClient.get(url, JSON.stringify({ cols }))\r\n            }\r\n        case \"add\":\r\n            return {\r\n                types: [ADD_POSITION_REQUEST,ADD_POSITION_FAIL,ADD_POSITION_SUCCESS],\r\n                promise: (apiClient) => apiClient.post(url, JSON.stringify({data, cols}))\r\n            }\r\n        case \"edit\":\r\n            return {\r\n                types: [EDIT_POSITION_REQUEST,EDIT_POSITION_FAIL,EDIT_POSITION_SUCCESS],\r\n                promise: (apiClient) => apiClient.put(url,JSON.stringify({id:data.id,data,cols}))\r\n            }\r\n        case \"delete\":\r\n            return {\r\n                types: [DELETE_POSITION_REQUEST,DELETE_POSITION_FAIL,DELETE_POSITION_SUCCESS],\r\n                promise: (apiClient) => apiClient.delete(url, JSON.stringify({id:data.id, data,cols }))\r\n            }\r\n        default:\r\n            return ;\r\n    }\r\n};\r\n\r\n\r\n\r\nexport const handle = (id,parentId) => {\r\n    return {\r\n        type: HANDLE,\r\n        id,\r\n        parentId,\r\n    }\r\n}\r\n\r\nexport const positionModal = (type,modal) => {\r\n    return {\r\n        type: type.toUpperCase()+'_MODAL',\r\n        modal\r\n    }\r\n}\r\n\r\nexport const setModalValues = (key,value) => {\r\n    return {\r\n        type: SET_MODAL_VALUES,\r\n        key,\r\n        value\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}