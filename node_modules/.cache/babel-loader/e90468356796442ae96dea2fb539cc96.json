{"ast":null,"code":"import _objectWithoutProperties from \"C:\\\\Users\\\\User\\\\Desktop\\\\barcode\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\barcode\\\\src\\\\app\\\\app.js\";\n// import external modules\nimport React, { Component } from \"react\";\nimport { Redirect, Route, Switch } from \"react-router-dom\";\nimport \"react-perfect-scrollbar/dist/css/styles.css\"; // import internal(own) modules\n\nimport { connect } from 'react-redux';\nimport Router from \"./router\";\nimport history from \"../history\";\nimport { getSession } from \"../utility/session\";\n\nvar PrivateRoute = function PrivateRoute(_ref) {\n  var Component = _ref.component,\n      rest = _objectWithoutProperties(_ref, [\"component\"]);\n\n  return React.createElement(Route, Object.assign({}, rest, {\n    render: function render(props) {\n      return true ? React.createElement(Component, Object.assign({}, props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 14\n        },\n        __self: this\n      })) : React.createElement(Redirect, {\n        to: \"/login\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15\n        },\n        __self: this\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }));\n}; // const App = props => <Router />;\n// eslint-disable-next-line react/require-render-return\n\n\nfunction App(props) {\n  var authUser = props.auth.authUser;\n  return React.createElement(PrivateRoute, {\n    path: \"/\",\n    authUser: authUser,\n    component: Router,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }); // if (!this.props.authUser) {\n  //     return <Redirect to='/login'/>;\n  // }\n}\n\nfunction mapStateToProps(state) {\n  return state;\n}\n\nexport default connect(mapStateToProps)(App);","map":{"version":3,"sources":["C:/Users/User/Desktop/barcode/src/app/app.js"],"names":["React","Component","Redirect","Route","Switch","connect","Router","history","getSession","PrivateRoute","component","rest","props","App","authUser","auth","mapStateToProps","state"],"mappings":";;AAAA;AACA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,QAAR,EAAkBC,KAAlB,EAAyBC,MAAzB,QAAsC,kBAAtC;AACA,OAAO,6CAAP,C,CACA;;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,OAAP,MAAoB,YAApB;AACA,SAAQC,UAAR,QAAyB,oBAAzB;;AAEA,IAAMC,YAAY,GAAG,SAAfA,YAAe;AAAA,MAAcR,SAAd,QAAGS,SAAH;AAAA,MAA4BC,IAA5B;;AAAA,SACjB,oBAAC,KAAD,oBAAWA,IAAX;AAAiB,IAAA,MAAM,EAAE,gBAACC,KAAD;AAAA,aACrB,OACM,oBAAC,SAAD,oBAAeA,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADN,GAEM,oBAAC,QAAD;AAAU,QAAA,EAAE,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHe;AAAA,KAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADiB;AAAA,CAArB,C,CAOA;AACA;;;AACC,SAASC,GAAT,CAAaD,KAAb,EAAoB;AAChB,MAAIE,QAAQ,GAAGF,KAAK,CAACG,IAAN,CAAWD,QAA1B;AACD,SACI,oBAAC,YAAD;AAAc,IAAA,IAAI,EAAC,GAAnB;AAAwB,IAAA,QAAQ,EAAIA,QAApC;AAA8C,IAAA,SAAS,EAAER,MAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAFiB,CAKb;AACA;AACA;AAIP;;AAID,SAASU,eAAT,CAAyBC,KAAzB,EAAgC;AAC5B,SAAOA,KAAP;AACH;;AAED,eAAeZ,OAAO,CAClBW,eADkB,CAAP,CAEbH,GAFa,CAAf","sourcesContent":["// import external modules\r\nimport React, {Component} from \"react\";\r\nimport {Redirect, Route, Switch} from \"react-router-dom\";\r\nimport \"react-perfect-scrollbar/dist/css/styles.css\";\r\n// import internal(own) modules\r\nimport {connect} from 'react-redux';\r\nimport Router from \"./router\";\r\nimport history from \"../history\";\r\nimport {getSession} from \"../utility/session\";\r\n\r\nconst PrivateRoute = ({ component: Component, ...rest }) => (\r\n    <Route {...rest} render={(props) => (\r\n        true\r\n            ? <Component {...props} />\r\n            : <Redirect to='/login' />\r\n    )} />\r\n)\r\n// const App = props => <Router />;\r\n// eslint-disable-next-line react/require-render-return\r\n function App(props) {\r\n     let authUser = props.auth.authUser\r\n    return(\r\n        <PrivateRoute path='/'  authUser = {authUser} component={Router} />\r\n    )\r\n        // if (!this.props.authUser) {\r\n        //     return <Redirect to='/login'/>;\r\n        // }\r\n\r\n    \r\n\r\n}\r\n\r\n\r\n\r\nfunction mapStateToProps(state) {\r\n    return state;\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n)(App);\r\n"]},"metadata":{},"sourceType":"module"}