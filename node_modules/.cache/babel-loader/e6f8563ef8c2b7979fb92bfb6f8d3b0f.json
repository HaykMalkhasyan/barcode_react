{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\User\\\\Desktop\\\\barcode\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\User\\\\Desktop\\\\barcode\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\User\\\\Desktop\\\\barcode\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\User\\\\Desktop\\\\barcode\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\User\\\\Desktop\\\\barcode\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\barcode\\\\src\\\\containers\\\\pages\\\\products\\\\modal\\\\tab\\\\productTab.js\";\nimport React, { Component } from \"react\";\nimport { Col, FormGroup, Input, Label, Nav, NavItem, NavLink, Row, TabContent, TabPane } from \"reactstrap\";\nimport classnames from \"classnames\";\nimport Translate from \"../../../../../Translate\";\nimport MultiSelect from \"../../../../../components/select/multiSelect\";\nimport { ObjectToArray, RenameKeys } from \"../../../../../utility/utils\";\nimport GroupModal from \"./group/groupModal\"; // import DropdownComponent from \"../../../../../components/dropdown/dropdown\";\n// import {setModalValues} from \"../../../../../redux/products/actions\";\n\nimport CodeContent from \"./code/content\";\nimport UploadButton from \"../../../../../components/buttons/upploadBtnUI\";\nimport classes from './productTab.module.css';\nimport ButtonUi from \"../../../../../components/buttons/buttonUi\";\nimport RestoreFromTrashIcon from '@material-ui/icons/RestoreFromTrash';\nimport AddToHomeScreenIcon from '@material-ui/icons/AddToHomeScreen';\n\nvar TabsBorderBottom =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(TabsBorderBottom, _Component);\n\n  function TabsBorderBottom(props) {\n    var _this;\n\n    _classCallCheck(this, TabsBorderBottom);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(TabsBorderBottom).call(this, props));\n\n    _this.toggle1 = function () {\n      _this.setState({\n        modal: !_this.state.modal\n      });\n    };\n\n    _this.toggle = function (tab) {\n      if (_this.state.activeTab !== tab) {\n        _this.setState({\n          activeTab: tab\n        });\n      }\n    };\n\n    _this.setGroupId = function (id) {\n      _this.setState({\n        key: id\n      });\n    };\n\n    _this.uploadImageHandler = function (event) {\n      _this.setState({\n        valImg: event.target.files\n      });\n\n      _this.props.SetUploadImages(event.target.name, event.target.files);\n    };\n\n    _this.imagesRender = function () {\n      var imgData = _this.state.valImg;\n      var imgObject = [];\n\n      if (imgData) {\n        var _iteratorNormalCompletion = true;\n        var _didIteratorError = false;\n        var _iteratorError = undefined;\n\n        try {\n          for (var _iterator = imgData[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n            var item = _step.value;\n            imgObject.push(React.createElement(Col, {\n              key: item.size + Math.random(),\n              md: 3,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 66\n              },\n              __self: this\n            }, React.createElement(\"div\", {\n              className: classes.imageWindow,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 70\n              },\n              __self: this\n            }, React.createElement(\"div\", {\n              className: classes.imgBord,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 71\n              },\n              __self: this\n            }, React.createElement(\"img\", {\n              className: classes.imgBordImage,\n              src: URL.createObjectURL(item),\n              alt: item.name,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 72\n              },\n              __self: this\n            }), React.createElement(\"div\", {\n              className: classes.conttroller,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 73\n              },\n              __self: this\n            }), React.createElement(\"div\", {\n              className: classes.btns,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 74\n              },\n              __self: this\n            }, React.createElement(\"div\", {\n              className: classes.conttrollerBtnsMain,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 75\n              },\n              __self: this\n            }, React.createElement(ButtonUi, {\n              color: 'primary',\n              variant: \"contained\",\n              padding: '5px',\n              width: 'auto',\n              height: 'auto',\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 76\n              },\n              __self: this\n            }, React.createElement(AddToHomeScreenIcon, {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 83\n              },\n              __self: this\n            }))), React.createElement(\"div\", {\n              className: classes.conttrollerBtnsDelete,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 86\n              },\n              __self: this\n            }, React.createElement(ButtonUi, {\n              color: 'secondary',\n              variant: \"contained\",\n              padding: '5px',\n              width: 'auto',\n              height: 'auto',\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 87\n              },\n              __self: this\n            }, React.createElement(RestoreFromTrashIcon, {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 94\n              },\n              __self: this\n            }))))))));\n          }\n        } catch (err) {\n          _didIteratorError = true;\n          _iteratorError = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion && _iterator.return != null) {\n              _iterator.return();\n            }\n          } finally {\n            if (_didIteratorError) {\n              throw _iteratorError;\n            }\n          }\n        }\n      }\n\n      return imgObject;\n    };\n\n    _this.state = {\n      activeTab: \"code\",\n      modal: false,\n      key: null,\n      btnType: null,\n      id: null,\n      valImg: null\n    };\n\n    _this.props.supplierActions(\"getAll\");\n\n    _this.props.groupActions(\"getAll\");\n\n    return _this;\n  }\n\n  _createClass(TabsBorderBottom, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, React.createElement(Nav, {\n        tabs: true,\n        className: \"nav-border-bottom\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, React.createElement(NavItem, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, React.createElement(NavLink, {\n        className: classnames({\n          active: this.state.activeTab === \"classifiers\"\n        }),\n        onClick: function onClick() {\n          _this2.toggle(\"classifiers\");\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, React.createElement(Translate, {\n        name: 'classifiers',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }))), React.createElement(NavItem, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }, React.createElement(NavLink, {\n        className: classnames({\n          active: this.state.activeTab === \"suppliers\"\n        }),\n        onClick: function onClick() {\n          _this2.toggle(\"suppliers\");\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }, React.createElement(Translate, {\n        name: \"suppliers\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }))), React.createElement(NavItem, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      }, React.createElement(NavLink, {\n        className: classnames({\n          active: this.state.activeTab === \"code\"\n        }),\n        onClick: function onClick() {\n          _this2.toggle(\"code\");\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      }, React.createElement(Translate, {\n        name: \"code\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      }))), React.createElement(NavItem, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      }, React.createElement(NavLink, {\n        className: classnames({\n          active: this.state.activeTab === \"description\"\n        }),\n        onClick: function onClick() {\n          _this2.toggle(\"description\");\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      }, React.createElement(Translate, {\n        name: \"description\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        },\n        __self: this\n      }))), React.createElement(NavItem, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162\n        },\n        __self: this\n      }, React.createElement(NavLink, {\n        className: classnames({\n          active: this.state.activeTab === \"images\"\n        }),\n        onClick: function onClick() {\n          _this2.toggle(\"images\");\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163\n        },\n        __self: this\n      }, React.createElement(Translate, {\n        name: \"images\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171\n        },\n        __self: this\n      })))), React.createElement(TabContent, {\n        activeTab: this.state.activeTab,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175\n        },\n        __self: this\n      }, React.createElement(TabPane, {\n        tabId: \"classifiers\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176\n        },\n        __self: this\n      }, Object.keys(this.props.groups).map(function (item, index) {\n        return React.createElement(Row, {\n          key: index,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 181\n          },\n          __self: this\n        }, React.createElement(Col, {\n          md: 3,\n          style: {\n            padding: '11px'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 184\n          },\n          __self: this\n        }, React.createElement(\"b\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 185\n          },\n          __self: this\n        }, _this2.props.groups[item].name)), React.createElement(Col, {\n          md: 9,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 189\n          },\n          __self: this\n        }, React.createElement(GroupModal, {\n          getSubGroups: _this2.props.getSubGroups,\n          data: _this2.props.subGroups,\n          productGroups: _this2.props.productGroups,\n          group: _this2.props.groups[item],\n          name: _this2.props.groups[item].name,\n          lang: _this2.props.lang,\n          handleOpen: _this2.props.handleOpen,\n          selectGroup: _this2.props.selectGroup,\n          selected: _this2.props.selectedGroups,\n          setModalValues: _this2.props.setModalValues,\n          product: _this2.props.product,\n          id: item,\n          dataId: _this2.props.groups[item].id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 190\n          },\n          __self: this\n        })));\n      })), React.createElement(TabPane, {\n        tabId: \"suppliers\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 213\n        },\n        __self: this\n      }, React.createElement(MultiSelect, {\n        name: \"suppliers\",\n        handleChange: this.props.setModalValues,\n        data: RenameKeys(ObjectToArray(this.props.suppliers), ['name', 'name'], ['value', 'label']),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 214\n        },\n        __self: this\n      })), React.createElement(TabPane, {\n        tabId: \"code\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227\n        },\n        __self: this\n      }, React.createElement(Col, {\n        sm: \"12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 228\n        },\n        __self: this\n      }, React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 230\n        },\n        __self: this\n      }, React.createElement(CodeContent, Object.assign({}, this.props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 231\n        },\n        __self: this\n      })))))), React.createElement(TabPane, {\n        tabId: \"description\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 237\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 238\n        },\n        __self: this\n      }, React.createElement(Col, {\n        sm: \"12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 239\n        },\n        __self: this\n      }, React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 240\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"description\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 241\n        },\n        __self: this\n      }, React.createElement(Translate, {\n        name: 'description',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 241\n        },\n        __self: this\n      })), React.createElement(Input, {\n        type: \"textarea\",\n        id: \"description\",\n        rows: \"5\",\n        value: this.props.product.description ? this.props.product.description || '' : '',\n        onChange: function onChange(event) {\n          return _this2.props.setModalValues(\"description\", event.target.value);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 242\n        },\n        __self: this\n      }))))), React.createElement(TabPane, {\n        tabId: \"images\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 253\n        },\n        __self: this\n      }, React.createElement(\"header\", {\n        className: \"d-flex justify-content-center p-1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 254\n        },\n        __self: this\n      }, React.createElement(FormGroup, {\n        encType: \"multipart/form-data\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 255\n        },\n        __self: this\n      }, React.createElement(UploadButton, {\n        color: 'primary',\n        variant: 'outlined',\n        name: 'upImages',\n        onChange: this.uploadImageHandler,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 256\n        },\n        __self: this\n      }))), React.createElement(\"section\", {\n        className: \"p-1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 264\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 265\n        },\n        __self: this\n      }, this.imagesRender())))));\n    }\n  }]);\n\n  return TabsBorderBottom;\n}(Component);\n\nexport default TabsBorderBottom;","map":{"version":3,"sources":["C:/Users/User/Desktop/barcode/src/containers/pages/products/modal/tab/productTab.js"],"names":["React","Component","Col","FormGroup","Input","Label","Nav","NavItem","NavLink","Row","TabContent","TabPane","classnames","Translate","MultiSelect","ObjectToArray","RenameKeys","GroupModal","CodeContent","UploadButton","classes","ButtonUi","RestoreFromTrashIcon","AddToHomeScreenIcon","TabsBorderBottom","props","toggle1","setState","modal","state","toggle","tab","activeTab","setGroupId","id","key","uploadImageHandler","event","valImg","target","files","SetUploadImages","name","imagesRender","imgData","imgObject","item","push","size","Math","random","imageWindow","imgBord","imgBordImage","URL","createObjectURL","conttroller","btns","conttrollerBtnsMain","conttrollerBtnsDelete","btnType","supplierActions","groupActions","active","Object","keys","groups","map","index","padding","getSubGroups","subGroups","productGroups","lang","handleOpen","selectGroup","selectedGroups","setModalValues","product","suppliers","description","value"],"mappings":"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","sourcesContent":["import React, {Component} from \"react\";\r\nimport {Col, FormGroup, Input, Label, Nav, NavItem, NavLink, Row, TabContent, TabPane,} from \"reactstrap\";\r\nimport classnames from \"classnames\";\r\nimport Translate from \"../../../../../Translate\";\r\nimport MultiSelect from \"../../../../../components/select/multiSelect\"\r\nimport {ObjectToArray, RenameKeys} from \"../../../../../utility/utils\";\r\nimport GroupModal from \"./group/groupModal\";\r\n// import DropdownComponent from \"../../../../../components/dropdown/dropdown\";\r\n// import {setModalValues} from \"../../../../../redux/products/actions\";\r\nimport CodeContent from \"./code/content\";\r\nimport UploadButton from \"../../../../../components/buttons/upploadBtnUI\";\r\nimport classes from './productTab.module.css';\r\nimport ButtonUi from \"../../../../../components/buttons/buttonUi\";\r\nimport RestoreFromTrashIcon from '@material-ui/icons/RestoreFromTrash';\r\nimport AddToHomeScreenIcon from '@material-ui/icons/AddToHomeScreen';\r\n\r\nclass TabsBorderBottom extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            activeTab: \"code\",\r\n            modal: false,\r\n            key: null,\r\n            btnType: null,\r\n            id: null,\r\n            valImg: null\r\n        };\r\n        this.props.supplierActions(\"getAll\");\r\n        this.props.groupActions(\"getAll\");\r\n\r\n    }\r\n\r\n    toggle1 = () => {\r\n        this.setState({\r\n            modal: !this.state.modal\r\n        });\r\n    }\r\n    toggle = tab => {\r\n        if (this.state.activeTab !== tab) {\r\n            this.setState({\r\n                activeTab: tab\r\n            });\r\n        }\r\n    };\r\n\r\n    setGroupId = id => {\r\n        this.setState({\r\n            key: id\r\n        });\r\n    }\r\n\r\n    uploadImageHandler = event => {\r\n        this.setState({\r\n            valImg: event.target.files\r\n        })\r\n        this.props.SetUploadImages(event.target.name, event.target.files)\r\n    }\r\n\r\n    imagesRender = () => {\r\n        let imgData = this.state.valImg\r\n        let imgObject = []\r\n        if (imgData) {\r\n            for(let item of imgData)  {\r\n                imgObject.push(\r\n                    <Col\r\n                        key={item.size + Math.random()}\r\n                        md={3}\r\n                    >\r\n                        <div className={classes.imageWindow}>\r\n                            <div className={classes.imgBord}>\r\n                                <img className={classes.imgBordImage} src={URL.createObjectURL(item)} alt={item.name}/>\r\n                                <div className={classes.conttroller}/>\r\n                                <div className={classes.btns}>\r\n                                    <div className={classes.conttrollerBtnsMain}>\r\n                                        <ButtonUi\r\n                                            color={'primary'}\r\n                                            variant={\"contained\"}\r\n                                            padding={'5px'}\r\n                                            width={'auto'}\r\n                                            height={'auto'}\r\n                                        >\r\n                                            <AddToHomeScreenIcon/>\r\n                                        </ButtonUi>\r\n                                    </div>\r\n                                    <div className={classes.conttrollerBtnsDelete}>\r\n                                        <ButtonUi\r\n                                            color={'secondary'}\r\n                                            variant={\"contained\"}\r\n                                            padding={'5px'}\r\n                                            width={'auto'}\r\n                                            height={'auto'}\r\n                                        >\r\n                                            <RestoreFromTrashIcon/>\r\n                                        </ButtonUi>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </Col>\r\n                )\r\n            }\r\n        }\r\n        return imgObject;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Nav tabs className=\"nav-border-bottom\">\r\n                    <NavItem>\r\n                        <NavLink\r\n                            className={classnames({\r\n                                active: this.state.activeTab === \"classifiers\"\r\n                            })}\r\n                            onClick={() => {\r\n                                this.toggle(\"classifiers\");\r\n                            }}\r\n                        >\r\n                            <Translate name={'classifiers'}/>\r\n                        </NavLink>\r\n                    </NavItem>\r\n\r\n\r\n                    <NavItem>\r\n                        <NavLink\r\n                            className={classnames({\r\n                                active: this.state.activeTab === \"suppliers\"\r\n                            })}\r\n                            onClick={() => {\r\n                                this.toggle(\"suppliers\");\r\n                            }}\r\n                        >\r\n                            <Translate name={\"suppliers\"}/>\r\n                        </NavLink>\r\n                    </NavItem>\r\n\r\n                    <NavItem>\r\n                        <NavLink\r\n                            className={classnames({\r\n                                active: this.state.activeTab === \"code\"\r\n                            })}\r\n                            onClick={() => {\r\n                                this.toggle(\"code\");\r\n                            }}\r\n                        >\r\n                            <Translate name={\"code\"}/>\r\n                        </NavLink>\r\n                    </NavItem>\r\n                    <NavItem>\r\n                        <NavLink\r\n                            className={classnames({\r\n                                active: this.state.activeTab === \"description\"\r\n                            })}\r\n                            onClick={() => {\r\n                                this.toggle(\"description\");\r\n                            }}\r\n                        >\r\n                            <Translate name={\"description\"}/>\r\n                        </NavLink>\r\n                    </NavItem>\r\n                    <NavItem>\r\n                        <NavLink\r\n                            className={classnames({\r\n                                active: this.state.activeTab === \"images\"\r\n                            })}\r\n                            onClick={() => {\r\n                                this.toggle(\"images\");\r\n                            }}\r\n                        >\r\n                            <Translate name={\"images\"}/>\r\n                        </NavLink>\r\n                    </NavItem>\r\n                </Nav>\r\n                <TabContent activeTab={this.state.activeTab}>\r\n                    <TabPane tabId=\"classifiers\">\r\n                        {\r\n                            Object.keys(this.props.groups).map(\r\n                                (item, index) => {\r\n                                    return (\r\n                                        <Row\r\n                                            key={index}\r\n                                        >\r\n                                            <Col md={3} style={{padding: '11px'}}>\r\n                                                <b>\r\n                                                    {this.props.groups[item].name}\r\n                                                </b>\r\n                                            </Col>\r\n                                            <Col md={9}>\r\n                                                <GroupModal\r\n                                                    getSubGroups={this.props.getSubGroups}\r\n                                                    data={this.props.subGroups}\r\n                                                    productGroups={this.props.productGroups}\r\n                                                    group={this.props.groups[item]}\r\n                                                    name={this.props.groups[item].name}\r\n                                                    lang={this.props.lang}\r\n                                                    handleOpen={this.props.handleOpen}\r\n                                                    selectGroup={this.props.selectGroup}\r\n                                                    selected={this.props.selectedGroups}\r\n                                                    setModalValues={this.props.setModalValues}\r\n                                                    product={this.props.product}\r\n                                                    id={item}\r\n                                                    dataId={this.props.groups[item].id}\r\n                                                />\r\n                                            </Col>\r\n                                        </Row>\r\n                                    )\r\n                                }\r\n                            )\r\n                        }\r\n                    </TabPane>\r\n\r\n                    <TabPane tabId=\"suppliers\">\r\n                        <MultiSelect\r\n                            name={\"suppliers\"}\r\n                            handleChange={this.props.setModalValues}\r\n                            data={\r\n                                RenameKeys(\r\n                                    ObjectToArray(this.props.suppliers),\r\n                                    ['name', 'name'],\r\n                                    ['value', 'label']\r\n                                )\r\n                            }\r\n                        />\r\n                    </TabPane>\r\n                    <TabPane tabId=\"code\">\r\n                        <Row>\r\n                            <Col sm=\"12\">\r\n\r\n                                <FormGroup>\r\n                                    <CodeContent {...this.props} />\r\n                                </FormGroup>\r\n\r\n                            </Col>\r\n                        </Row>\r\n                    </TabPane>\r\n                    <TabPane tabId=\"description\">\r\n                        <Row>\r\n                            <Col sm=\"12\">\r\n                                <FormGroup>\r\n                                    <Label for=\"description\"><Translate name={'description'}/></Label>\r\n                                    <Input\r\n                                        type=\"textarea\"\r\n                                        id=\"description\"\r\n                                        rows=\"5\"\r\n                                        value={this.props.product.description ? this.props.product.description || '' : ''}\r\n                                        onChange={event => this.props.setModalValues(\"description\", event.target.value)}\r\n                                    />\r\n                                </FormGroup>\r\n                            </Col>\r\n                        </Row>\r\n                    </TabPane>\r\n                    <TabPane tabId=\"images\">\r\n                        <header className=\"d-flex justify-content-center p-1\">\r\n                            <FormGroup encType=\"multipart/form-data\">\r\n                                    <UploadButton\r\n                                        color={'primary'}\r\n                                        variant={'outlined'}\r\n                                        name={'upImages'}\r\n                                        onChange={this.uploadImageHandler}\r\n                                    />\r\n                            </FormGroup>\r\n                        </header>\r\n                        <section className=\"p-1\">\r\n                            <Row>\r\n                                {this.imagesRender()}\r\n                            </Row>\r\n                        </section>\r\n                    </TabPane>\r\n                </TabContent>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TabsBorderBottom;"]},"metadata":{},"sourceType":"module"}