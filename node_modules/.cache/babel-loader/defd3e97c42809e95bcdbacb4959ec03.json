{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\User\\\\Desktop\\\\barcode\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"C:\\\\Users\\\\User\\\\Desktop\\\\barcode\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\User\\\\Desktop\\\\barcode\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\User\\\\Desktop\\\\barcode\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\User\\\\Desktop\\\\barcode\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\User\\\\Desktop\\\\barcode\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\barcode\\\\src\\\\containers\\\\pages\\\\products\\\\modal\\\\tab\\\\code\\\\content.js\";\nimport React from 'react';\nimport { Input, Table, InputGroup, Button } from 'reactstrap';\nimport Translate from \"../../../../../../Translate\";\nimport { Settings, Plus, Trash2 } from \"react-feather\";\nimport DropdownComponent from \"../../../../../../components/dropdown/dropdown\";\n\nvar Example =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Example, _React$Component);\n\n  function Example() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Example);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Example)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      currentInputValue: {\n        barecode: \"\",\n        type: null\n      },\n      error: false\n    };\n\n    _this.addBarcodeType = function (name, id) {\n      var newCurrentInput = _objectSpread({}, _this.state.currentInputValue);\n\n      newCurrentInput.type = id;\n\n      _this.setState({\n        currentInputValue: newCurrentInput\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(Example, [{\n    key: \"addBarcode\",\n    value: function addBarcode() {\n      if (this.state.currentInputValue.barecode !== \"\") {\n        this.props.barcodeActions(\"add\", this.state.currentInputValue);\n\n        var newCurrentInput = _objectSpread({}, this.state.currentInputValue);\n\n        newCurrentInput.barecode = \"\";\n        this.setState({\n          currentInputValue: newCurrentInput,\n          error: false\n        });\n      } else {\n        this.setState({\n          error: true\n        });\n      }\n    }\n  }, {\n    key: \"deleteBarcode\",\n    value: function deleteBarcode(code) {\n      this.props.barcodeActions(\"delete\", code);\n    }\n  }, {\n    key: \"changeBarcode\",\n    value: function changeBarcode(value) {\n      var newCurrentInput = _objectSpread({}, this.state.currentInputValue);\n\n      newCurrentInput.barecode = value;\n      this.setState({\n        currentInputValue: newCurrentInput\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      console.log('this state', this.state.currentInputValue);\n      var props = this.props;\n      return React.createElement(Table, {\n        borderless: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, React.createElement(\"thead\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, React.createElement(Translate, {\n        name: \"barcode\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      })), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, React.createElement(Settings, {\n        size: 20,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      })))), React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, this.props.product.barcode && this.props.product.barcode.map(function (value, index) {\n        return React.createElement(\"tr\", {\n          key: index,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 61\n          },\n          __self: this\n        }, console.log('value:', value.barcode ? value.barcode : 'error'), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 65\n          },\n          __self: this\n        }, value.barcode ? \"\".concat(value.barcode.barecode, \" : \").concat(value.barcode.type) : null), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 73\n          },\n          __self: this\n        }, React.createElement(Button, {\n          size: \"sm\",\n          color: \"danger\",\n          className: \"mb-0\",\n          onClick: function onClick() {\n            props.barcodeActions(\"delete\", value.barcode.barecode);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 74\n          },\n          __self: this\n        }, React.createElement(Trash2, {\n          size: 16,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 77\n          },\n          __self: this\n        }))));\n      }), React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, React.createElement(InputGroup, {\n        size: \"sm\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, this.state.currentInputValue.type !== null ? React.createElement(\"span\", {\n        className: \"bg-primary\",\n        style: {\n          padding: '3px 5px',\n          borderRadius: '5px 0 0 5px',\n          color: '#fff',\n          fontWeight: 600,\n          fontSize: '13px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, this.props.types.map(function (type) {\n        return type.id === _this2.state.currentInputValue.type ? type.name : null;\n      })) : null, React.createElement(Input, {\n        type: \"text\",\n        className: \"form-control  \".concat(this.state.error ? 'is-invalid' : ''),\n        id: \"barcode\",\n        value: this.state.currentInputValue.barecode ? this.state.currentInputValue.barecode || '' : '',\n        onChange: function onChange(event) {\n          return _this2.changeBarcode(event.target.value);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }), React.createElement(DropdownComponent // setBarcodeType={this.props.setBarcodeType}\n      , {\n        types: this.props.types // onChange={this.props.setModalValues}\n        ,\n        onClick: this.addBarcodeType,\n        name: \"type\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }))), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }, React.createElement(Button, {\n        size: \"sm\",\n        color: \"primary\",\n        onClick: function onClick() {\n          _this2.addBarcode();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, React.createElement(Plus, {\n        size: 16,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }))))));\n    }\n  }]);\n\n  return Example;\n}(React.Component);\n\nexport { Example as default };","map":{"version":3,"sources":["C:/Users/User/Desktop/barcode/src/containers/pages/products/modal/tab/code/content.js"],"names":["React","Input","Table","InputGroup","Button","Translate","Settings","Plus","Trash2","DropdownComponent","Example","state","currentInputValue","barecode","type","error","addBarcodeType","name","id","newCurrentInput","setState","props","barcodeActions","code","value","console","log","product","barcode","map","index","padding","borderRadius","color","fontWeight","fontSize","types","event","changeBarcode","target","addBarcode","Component"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport {Input, Table, InputGroup, Button} from 'reactstrap';\r\nimport Translate from \"../../../../../../Translate\";\r\nimport {Settings, Plus, Trash2} from \"react-feather\";\r\nimport DropdownComponent from \"../../../../../../components/dropdown/dropdown\";\r\n\r\n\r\nexport default class Example extends React.Component {\r\n\r\n    state = {\r\n        currentInputValue: {\r\n            barecode: \"\",\r\n            type: null\r\n        },\r\n        error: false\r\n    }\r\n\r\n    addBarcode() {\r\n        if (this.state.currentInputValue.barecode !== \"\") {\r\n            this.props.barcodeActions(\"add\", this.state.currentInputValue);\r\n            let newCurrentInput = {...this.state.currentInputValue};\r\n            newCurrentInput.barecode = \"\";\r\n            this.setState({currentInputValue: newCurrentInput, error: false})\r\n        } else {\r\n            this.setState({error: true})\r\n        }\r\n    }\r\n\r\n    addBarcodeType = (name, id) => {\r\n        let newCurrentInput = {...this.state.currentInputValue};\r\n        newCurrentInput.type = id;\r\n        this.setState({\r\n            currentInputValue: newCurrentInput\r\n        })\r\n    }\r\n\r\n    deleteBarcode(code) {\r\n        this.props.barcodeActions(\"delete\", code);\r\n    }\r\n\r\n    changeBarcode(value) {\r\n        let newCurrentInput = {...this.state.currentInputValue};\r\n        newCurrentInput.barecode = value;\r\n        this.setState({currentInputValue: newCurrentInput})\r\n    }\r\n\r\n    render() {\r\n        console.log('this state', this.state.currentInputValue)\r\n        let props = this.props;\r\n        return (\r\n            <Table borderless>\r\n                <thead>\r\n                <tr>\r\n                    <th><Translate name={\"barcode\"}/></th>\r\n                    <th><Settings size={20}></Settings></th>\r\n                </tr>\r\n                </thead>\r\n                <tbody>\r\n                {this.props.product.barcode && this.props.product.barcode.map(function (value, index) {\r\n                    return (\r\n                        <tr key={index}>\r\n                            {\r\n                                console.log('value:', value.barcode ? value.barcode : 'error')\r\n                            }\r\n                            <td>\r\n                                {\r\n                                    value.barcode ?\r\n                                        `${value.barcode.barecode} : ${value.barcode.type}`\r\n                                        :\r\n                                        null\r\n                                }\r\n                            </td>\r\n                            <td>\r\n                                <Button size=\"sm\" color=\"danger\" className=\"mb-0\" onClick={() => {\r\n                                    props.barcodeActions(\"delete\", value.barcode.barecode)\r\n                                }}>\r\n                                    <Trash2 size={16}/>\r\n                                </Button>\r\n                            </td>\r\n                        </tr>\r\n                    )\r\n                })}\r\n                <tr>\r\n                    <td>\r\n                        <InputGroup size=\"sm\">\r\n                            {\r\n                                this.state.currentInputValue.type !== null ?\r\n                                    <span\r\n                                        className=\"bg-primary\"\r\n                                        style={{\r\n                                            padding: '3px 5px',\r\n                                            borderRadius: '5px 0 0 5px',\r\n                                            color: '#fff',\r\n                                            fontWeight: 600,\r\n                                            fontSize: '13px'\r\n                                        }}\r\n                                    >\r\n                                        {\r\n                                            this.props.types.map(\r\n                                                type => type.id === this.state.currentInputValue.type ?\r\n                                                    type.name\r\n                                                    :\r\n                                                    null\r\n                                            )\r\n                                        }\r\n                                    </span>\r\n                                    :\r\n                                    null\r\n                            }\r\n                            <Input\r\n                                type=\"text\"\r\n                                className={`form-control  ${this.state.error ? 'is-invalid' : ''}`}\r\n                                id=\"barcode\"\r\n                                value={this.state.currentInputValue.barecode ? this.state.currentInputValue.barecode || '' : ''}\r\n                                onChange={event => this.changeBarcode(event.target.value)}\r\n                            />\r\n                            <DropdownComponent\r\n                                // setBarcodeType={this.props.setBarcodeType}\r\n                                types={this.props.types}\r\n                                // onChange={this.props.setModalValues}\r\n                                onClick={this.addBarcodeType}\r\n                                name='type'\r\n                            />\r\n                        </InputGroup>\r\n                    </td>\r\n                    <td>\r\n                        <Button size=\"sm\" color=\"primary\" onClick={() => {\r\n                            this.addBarcode()\r\n                        }}>\r\n                            <Plus size={16}/>\r\n                        </Button>\r\n                    </td>\r\n                </tr>\r\n                </tbody>\r\n\r\n            </Table>\r\n        );\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}