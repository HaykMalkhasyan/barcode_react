{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\User\\\\Desktop\\\\barcode\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport { GET_SUPPLIERS_REQUEST, GET_SUPPLIERS_FAIL, GET_SUPPLIERS_SUCCESS, GET_SUPPLIER_REQUEST, GET_SUPPLIER_FAIL, GET_SUPPLIER_SUCCESS, ADD_SUPPLIER_REQUEST, ADD_SUPPLIER_FAIL, ADD_SUPPLIER_SUCCESS, EDIT_SUPPLIER_REQUEST, EDIT_SUPPLIER_FAIL, EDIT_SUPPLIER_SUCCESS, DELETE_SUPPLIER_REQUEST, DELETE_SUPPLIER_FAIL, DELETE_SUPPLIER_SUCCESS, GET_BANKS_REQUEST, GET_BANKS_FAIL, GET_BANKS_SUCCESS, SET_SUPPLIER_MODAL, TOGGLE_SUPPLIER_MODAL, GET_Currency_REQUEST, GET_Currency_FAIL, GET_Currency_SUCCESS, SUPPLIERS_ADD_MODAL, SET_SUPPLIERS_VALUE, FETCH_SUPPLIER_REQUEST, FETCH_SUPPLIER_FAIL, FETCH_SUPPLIER_SUCCESS, SUPPLIERS_OPEN_MODAL, SET_ERROR, EMPTY_VALUE, SUCCES_VALUE } from \"./actionTypes\";\nimport { IsRequiredField, IsRequiredFields, Push, Put } from \"../../utility/utils\";\nvar INIT_STATE = {\n  suppliers: [],\n  supplier: {},\n  banks: [],\n  currency: [],\n  modal: {},\n  required: [\"name\"],\n  loading: false,\n  success: false,\n  fail: false,\n  errors: {},\n  tin: {},\n\n  /*---------------------------------*/\n  isOpen: false,\n  modalType: '',\n  setSupplier: {\n    name: '',\n    hh: '',\n    hvhh: '',\n    address: '',\n    tin: [],\n    director: '',\n    phone: [],\n    active: 0,\n    type: 0\n  },\n  errorMessage: null,\n  checkValueStatus: {\n    name: false,\n    hh: false,\n    hvhh: false,\n    address: false,\n    director: false\n  }\n};\nexport default (function () {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : INIT_STATE;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case GET_SUPPLIERS_REQUEST:\n      return _objectSpread({}, state, {\n        loading: true,\n        success: false,\n        modal: {},\n        fail: false,\n        errors: {}\n      });\n\n    case GET_SUPPLIERS_FAIL:\n      return _objectSpread({}, state, {\n        loading: false,\n        success: false,\n        modal: {},\n        fail: true\n      });\n\n    case GET_SUPPLIERS_SUCCESS:\n      return _objectSpread({}, state, {\n        loading: false,\n        success: true,\n        fail: false,\n        suppliers: action.result.results,\n        modal: {},\n        errors: {}\n      });\n\n    case GET_SUPPLIER_REQUEST:\n      return _objectSpread({}, state, {\n        loading: true,\n        success: false,\n        fail: false,\n        errors: {}\n      });\n\n    case GET_SUPPLIER_FAIL:\n      return _objectSpread({}, state, {\n        loading: false,\n        success: false,\n        fail: true\n      });\n\n    case GET_SUPPLIER_SUCCESS:\n      return _objectSpread({}, state, {\n        loading: false,\n        success: true,\n        fail: false,\n        setSupplier: action.result,\n        errors: {}\n      });\n\n    case ADD_SUPPLIER_REQUEST:\n      return _objectSpread({}, state, {\n        loading: true,\n        success: false,\n        fail: false,\n        errors: IsRequiredFields(state.required, state.supplier, state.errors)\n      });\n\n    case ADD_SUPPLIER_FAIL:\n      return _objectSpread({}, state, {\n        loading: false,\n        success: false,\n        fail: true\n      });\n\n    case ADD_SUPPLIER_SUCCESS:\n      return _objectSpread({}, state, {\n        loading: false,\n        success: true,\n        fail: false,\n        modal: {},\n        suppliers: _objectSpread({}, JSON.parse(action.result.data), state.suppliers)\n      });\n\n    case EDIT_SUPPLIER_REQUEST:\n      return _objectSpread({}, state, {\n        loading: true,\n        success: false,\n        fail: false,\n        errors: IsRequiredFields(state.required, state.supplier, state.errors)\n      });\n\n    case EDIT_SUPPLIER_FAIL:\n      return _objectSpread({}, state, {\n        loading: false,\n        success: false,\n        fail: true\n      });\n\n    case EDIT_SUPPLIER_SUCCESS:\n      return _objectSpread({}, state, {\n        loading: false,\n        success: true,\n        fail: false,\n        modal: {},\n        isOpen: false,\n        setSupplier: {\n          name: '',\n          hh: '',\n          hvhh: '',\n          address: '',\n          tin: [],\n          director: '',\n          phone: [],\n          active: 0,\n          type: 0\n        },\n        suppliers: Put(state.suppliers, action.result)\n      });\n\n    case DELETE_SUPPLIER_REQUEST:\n      return _objectSpread({}, state, {\n        loading: true,\n        success: false,\n        fail: false\n      });\n\n    case DELETE_SUPPLIER_FAIL:\n      return _objectSpread({}, state, {\n        loading: false,\n        success: false,\n        fail: true\n      });\n\n    case DELETE_SUPPLIER_SUCCESS:\n      delete state.suppliers[JSON.parse(action.result.data)];\n      return _objectSpread({}, state, {\n        loading: false,\n        success: true,\n        fail: false,\n        modal: {},\n        supplier: {},\n        suppliers: state.suppliers\n      });\n\n    case GET_BANKS_REQUEST:\n      return _objectSpread({}, state, {\n        loading: true,\n        success: false,\n        modal: {},\n        fail: false,\n        errors: {}\n      });\n\n    case GET_BANKS_FAIL:\n      return _objectSpread({}, state, {\n        loading: false,\n        success: false,\n        modal: {},\n        fail: true\n      });\n\n    case GET_BANKS_SUCCESS:\n      return _objectSpread({}, state, {\n        banks: action.result.results,\n        modal: {},\n        loading: false,\n        success: true,\n        fail: false,\n        errors: {}\n      });\n\n    case GET_Currency_REQUEST:\n      return _objectSpread({}, state, {\n        loading: true,\n        success: false,\n        modal: {},\n        fail: false,\n        errors: {}\n      });\n\n    case GET_Currency_FAIL:\n      return _objectSpread({}, state, {\n        loading: false,\n        success: false,\n        modal: {},\n        fail: true\n      });\n\n    case GET_Currency_SUCCESS:\n      return _objectSpread({}, state, {\n        currency: action.result.results,\n        modal: {},\n        loading: false,\n        success: true,\n        fail: false,\n        errors: {}\n      });\n\n    case SET_SUPPLIER_MODAL:\n      if (typeof action.index !== 'undefined') {\n        if (!state.supplier[action.key]) {\n          state.supplier[action.key] = [];\n        }\n\n        if (typeof action.add === 'undefined') {\n          state.supplier[action.key][action.index] = action.value;\n        } else if (action.add) {\n          state.supplier[action.key][action.index + 1] = action.value;\n        } else {\n          state.supplier[action.key].splice(action.index, 1);\n        }\n      } else {\n        state.supplier[action.key] = action.value;\n      }\n\n      return _objectSpread({}, state, {\n        errors: IsRequiredField(state.required, action, state.errors)\n      });\n\n    case TOGGLE_SUPPLIER_MODAL:\n      state.modal[action.modalType] = !state.modal[action.modalType];\n\n      if (action.obj) {\n        if (action.modalType === \"edit\") {\n          state.supplier[action.obj.key] = action.obj.value;\n        } else {\n          state.supplier = action.obj;\n        }\n      }\n\n      return _objectSpread({}, state, {\n        errors: {}\n      });\n\n    /*---------------------------------*/\n\n    case SUPPLIERS_ADD_MODAL:\n      return _objectSpread({}, state, {\n        isOpen: !state.isOpen,\n        modalType: action.text,\n        setSupplier: action.cleanSuppliers\n      });\n\n    case SUPPLIERS_OPEN_MODAL:\n      return _objectSpread({}, state, {\n        isOpen: !state.isOpen,\n        modalType: action.text\n      });\n\n    case SET_SUPPLIERS_VALUE:\n      return _objectSpread({}, state, {\n        setSupplier: action.setSupplier\n      });\n\n    case FETCH_SUPPLIER_REQUEST:\n      return _objectSpread({}, state, {\n        loading: true,\n        success: false,\n        fail: false\n      });\n\n    case FETCH_SUPPLIER_FAIL:\n      return _objectSpread({}, state, {\n        loading: false,\n        success: false,\n        fail: true\n      });\n\n    case FETCH_SUPPLIER_SUCCESS:\n      console.log(action.result);\n      return _objectSpread({}, state, {\n        loading: false,\n        success: true,\n        fail: false,\n        isOpen: false,\n        suppliers: Push(state.suppliers, action.result),\n        setSupplier: action.cleanSuppliers\n      });\n\n    case EMPTY_VALUE:\n      var newCheckValueStatusError = state.checkValueStatus;\n      newCheckValueStatusError[action.name] = 'the field must not be empty';\n      return _objectSpread({}, state, {\n        checkValueStatus: newCheckValueStatusError\n      });\n\n    case SUCCES_VALUE:\n      var newCheckValueStatusSuccess = state.checkValueStatus;\n      newCheckValueStatusSuccess[action.name] = false;\n      return _objectSpread({}, state, {\n        checkValueStatus: newCheckValueStatusSuccess[action.name]\n      });\n\n    default:\n      return _objectSpread({}, state);\n  }\n});","map":{"version":3,"sources":["C:/Users/User/Desktop/barcode/src/redux/suppliers/reducer.js"],"names":["GET_SUPPLIERS_REQUEST","GET_SUPPLIERS_FAIL","GET_SUPPLIERS_SUCCESS","GET_SUPPLIER_REQUEST","GET_SUPPLIER_FAIL","GET_SUPPLIER_SUCCESS","ADD_SUPPLIER_REQUEST","ADD_SUPPLIER_FAIL","ADD_SUPPLIER_SUCCESS","EDIT_SUPPLIER_REQUEST","EDIT_SUPPLIER_FAIL","EDIT_SUPPLIER_SUCCESS","DELETE_SUPPLIER_REQUEST","DELETE_SUPPLIER_FAIL","DELETE_SUPPLIER_SUCCESS","GET_BANKS_REQUEST","GET_BANKS_FAIL","GET_BANKS_SUCCESS","SET_SUPPLIER_MODAL","TOGGLE_SUPPLIER_MODAL","GET_Currency_REQUEST","GET_Currency_FAIL","GET_Currency_SUCCESS","SUPPLIERS_ADD_MODAL","SET_SUPPLIERS_VALUE","FETCH_SUPPLIER_REQUEST","FETCH_SUPPLIER_FAIL","FETCH_SUPPLIER_SUCCESS","SUPPLIERS_OPEN_MODAL","SET_ERROR","EMPTY_VALUE","SUCCES_VALUE","IsRequiredField","IsRequiredFields","Push","Put","INIT_STATE","suppliers","supplier","banks","currency","modal","required","loading","success","fail","errors","tin","isOpen","modalType","setSupplier","name","hh","hvhh","address","director","phone","active","type","errorMessage","checkValueStatus","state","action","result","results","JSON","parse","data","index","key","add","value","splice","obj","text","cleanSuppliers","console","log","newCheckValueStatusError","newCheckValueStatusSuccess"],"mappings":"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","sourcesContent":["import {\r\n    GET_SUPPLIERS_REQUEST,\r\n    GET_SUPPLIERS_FAIL,\r\n    GET_SUPPLIERS_SUCCESS,\r\n    GET_SUPPLIER_REQUEST,\r\n    GET_SUPPLIER_FAIL,\r\n    GET_SUPPLIER_SUCCESS,\r\n    ADD_SUPPLIER_REQUEST,\r\n    ADD_SUPPLIER_FAIL,\r\n    ADD_SUPPLIER_SUCCESS,\r\n    EDIT_SUPPLIER_REQUEST,\r\n    EDIT_SUPPLIER_FAIL,\r\n    EDIT_SUPPLIER_SUCCESS,\r\n    DELETE_SUPPLIER_REQUEST,\r\n    DELETE_SUPPLIER_FAIL,\r\n    DELETE_SUPPLIER_SUCCESS,\r\n    GET_BANKS_REQUEST,\r\n    GET_BANKS_FAIL,\r\n    GET_BANKS_SUCCESS,\r\n    SET_SUPPLIER_MODAL,\r\n    TOGGLE_SUPPLIER_MODAL,\r\n    GET_Currency_REQUEST,\r\n    GET_Currency_FAIL,\r\n    GET_Currency_SUCCESS,\r\n    SUPPLIERS_ADD_MODAL,\r\n    SET_SUPPLIERS_VALUE,\r\n    FETCH_SUPPLIER_REQUEST,\r\n    FETCH_SUPPLIER_FAIL,\r\n    FETCH_SUPPLIER_SUCCESS, SUPPLIERS_OPEN_MODAL, SET_ERROR, EMPTY_VALUE, SUCCES_VALUE,\r\n} from \"./actionTypes\";\r\nimport {IsRequiredField, IsRequiredFields, Push, Put} from \"../../utility/utils\";\r\n\r\n\r\nconst INIT_STATE = {\r\n    suppliers: [],\r\n    supplier: {},\r\n    banks: [],\r\n    currency: [],\r\n    modal: {},\r\n    required: [\r\n        \"name\",\r\n    ],\r\n    loading: false,\r\n    success: false,\r\n    fail: false,\r\n    errors: {},\r\n    tin: {},\r\n    /*---------------------------------*/\r\n    isOpen: false,\r\n    modalType: '',\r\n    setSupplier: {\r\n        name: '',\r\n        hh: '',\r\n        hvhh: '',\r\n        address: '',\r\n        tin: [],\r\n        director: '',\r\n        phone: [],\r\n        active: 0,\r\n        type: 0\r\n    },\r\n    errorMessage: null,\r\n    checkValueStatus: {\r\n        name: false,\r\n        hh: false,\r\n        hvhh: false,\r\n        address: false,\r\n        director: false,\r\n    },\r\n};\r\n\r\n\r\nexport default (state = INIT_STATE, action) => {\r\n    switch (action.type) {\r\n        case GET_SUPPLIERS_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n                success: false,\r\n                modal: {},\r\n                fail: false,\r\n                errors: {},\r\n            };\r\n        case GET_SUPPLIERS_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: false,\r\n                modal: {},\r\n                fail: true,\r\n            };\r\n        case GET_SUPPLIERS_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: true,\r\n                fail: false,\r\n                suppliers: action.result.results,\r\n                modal: {},\r\n                errors: {},\r\n            };\r\n        case GET_SUPPLIER_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n                success: false,\r\n                fail: false,\r\n                errors: {},\r\n            };\r\n        case GET_SUPPLIER_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: false,\r\n                fail: true,\r\n            };\r\n        case GET_SUPPLIER_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: true,\r\n                fail: false,\r\n                setSupplier: action.result,\r\n                errors: {},\r\n            };\r\n        case ADD_SUPPLIER_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n                success: false,\r\n                fail: false,\r\n                errors: IsRequiredFields(state.required, state.supplier, state.errors)\r\n            }\r\n        case ADD_SUPPLIER_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: false,\r\n                fail: true,\r\n\r\n            };\r\n        case ADD_SUPPLIER_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: true,\r\n                fail: false,\r\n                modal: {},\r\n                suppliers: {\r\n                    ...JSON.parse(action.result.data),\r\n                    ...state.suppliers,\r\n                }\r\n            };\r\n        case EDIT_SUPPLIER_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n                success: false,\r\n                fail: false,\r\n                errors: IsRequiredFields(state.required, state.supplier, state.errors)\r\n            }\r\n        case EDIT_SUPPLIER_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: false,\r\n                fail: true,\r\n\r\n            };\r\n        case EDIT_SUPPLIER_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: true,\r\n                fail: false,\r\n                modal: {},\r\n                isOpen: false,\r\n                setSupplier: {\r\n                    name: '',\r\n                    hh: '',\r\n                    hvhh: '',\r\n                    address: '',\r\n                    tin: [],\r\n                    director: '',\r\n                    phone: [],\r\n                    active: 0,\r\n                    type: 0\r\n                },\r\n                suppliers: Put(state.suppliers, action.result)\r\n            };\r\n        case DELETE_SUPPLIER_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n                success: false,\r\n                fail: false,\r\n            }\r\n        case DELETE_SUPPLIER_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: false,\r\n                fail: true,\r\n\r\n            };\r\n        case DELETE_SUPPLIER_SUCCESS:\r\n            delete state.suppliers[JSON.parse(action.result.data)]\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: true,\r\n                fail: false,\r\n                modal: {},\r\n                supplier: {},\r\n                suppliers: state.suppliers\r\n            };\r\n        case GET_BANKS_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n                success: false,\r\n                modal: {},\r\n                fail: false,\r\n                errors: {},\r\n            };\r\n        case GET_BANKS_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: false,\r\n                modal: {},\r\n                fail: true,\r\n            };\r\n        case GET_BANKS_SUCCESS:\r\n            return {\r\n                ...state,\r\n                banks: action.result.results,\r\n                modal: {},\r\n                loading: false,\r\n                success: true,\r\n                fail: false,\r\n                errors: {},\r\n            };\r\n        case GET_Currency_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n                success: false,\r\n                modal: {},\r\n                fail: false,\r\n                errors: {},\r\n            };\r\n        case GET_Currency_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: false,\r\n                modal: {},\r\n                fail: true,\r\n            };\r\n        case GET_Currency_SUCCESS:\r\n            return {\r\n                ...state,\r\n                currency: action.result.results,\r\n                modal: {},\r\n                loading: false,\r\n                success: true,\r\n                fail: false,\r\n                errors: {},\r\n            };\r\n        case SET_SUPPLIER_MODAL:\r\n            if (typeof action.index !== 'undefined') {\r\n                if (!state.supplier[action.key]) {\r\n                    state.supplier[action.key] = []\r\n                }\r\n                if (typeof action.add === 'undefined') {\r\n                    state.supplier[action.key][action.index] = action.value;\r\n                } else if (action.add) {\r\n                    state.supplier[action.key][action.index + 1] = action.value;\r\n                } else {\r\n                    state.supplier[action.key].splice(action.index, 1);\r\n                }\r\n            } else {\r\n                state.supplier[action.key] = action.value;\r\n            }\r\n            return {\r\n                ...state,\r\n                errors: IsRequiredField(state.required, action, state.errors)\r\n            };\r\n        case TOGGLE_SUPPLIER_MODAL:\r\n            state.modal[action.modalType] = !state.modal[action.modalType];\r\n\r\n            if (action.obj) {\r\n                if (action.modalType === \"edit\") {\r\n                    state.supplier[action.obj.key] = action.obj.value\r\n                } else {\r\n                    state.supplier = action.obj\r\n                }\r\n            }\r\n\r\n            return {\r\n                ...state,\r\n                errors: {}\r\n            }\r\n        /*---------------------------------*/\r\n        case SUPPLIERS_ADD_MODAL:\r\n            return {\r\n                ...state,\r\n                isOpen: !state.isOpen,\r\n                modalType: action.text,\r\n                setSupplier: action.cleanSuppliers\r\n            }\r\n        case  SUPPLIERS_OPEN_MODAL:\r\n            return {\r\n                ...state,\r\n                isOpen: !state.isOpen,\r\n                modalType: action.text\r\n            }\r\n        case SET_SUPPLIERS_VALUE:\r\n            return {\r\n                ...state, setSupplier: action.setSupplier\r\n            }\r\n        case FETCH_SUPPLIER_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n                success: false,\r\n                fail: false\r\n            }\r\n        case FETCH_SUPPLIER_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: false,\r\n                fail: true,\r\n\r\n            };\r\n        case FETCH_SUPPLIER_SUCCESS:\r\n            console.log(action.result);\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: true,\r\n                fail: false,\r\n                isOpen: false,\r\n                suppliers: Push(state.suppliers, action.result),\r\n                setSupplier: action.cleanSuppliers\r\n            };\r\n        case EMPTY_VALUE:\r\n            let newCheckValueStatusError = state.checkValueStatus\r\n            newCheckValueStatusError[action.name] = 'the field must not be empty'\r\n            return {\r\n                ...state,\r\n                checkValueStatus: newCheckValueStatusError\r\n            }\r\n        case SUCCES_VALUE:\r\n            let newCheckValueStatusSuccess = state.checkValueStatus;\r\n            newCheckValueStatusSuccess[action.name] = false;\r\n            return {\r\n                ...state,\r\n                checkValueStatus: newCheckValueStatusSuccess[action.name]\r\n            }\r\n        default:\r\n            return {...state};\r\n    }\r\n};\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}