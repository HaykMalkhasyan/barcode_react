{"ast":null,"code":"import SessionStorage from '../services/SessionStorage';\nexport var saveSession = function saveSession(_ref, remember) {\n  var accessToken = _ref.accessToken,\n      expireAt = _ref.expireAt,\n      refreshToken = _ref.refreshToken,\n      user = _ref.user,\n      id = _ref.id;\n  var withUser = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n  var options = {\n    path: '/',\n    expires: new Date(Date.now() + expireAt * 1000)\n  };\n  SessionStorage.set('token', accessToken, options);\n\n  if (withUser) {\n    SessionStorage.set('user', user, options);\n  }\n}; //\n// export const saveUserDataSession = (data) => {\n//     const now = new Date();\n//     const time = now.getTime();\n//     const expireTime = time + 1000 * 36000;\n//     now.setTime(expireTime);\n//     const rememberOptions = {\n//         path: '/',\n//         expires: new Date(now * 1000 + (30 * 24 * 3600 * 1000))\n//     };\n//     SessionStorage.set('userData', data, rememberOptions);\n// };\n//\n// export const destroySession = () => {\n//     const options = {\n//         path: '/'\n//     };\n//\n//     SessionStorage.remove('token', options);\n//     SessionStorage.remove('tokenExpiresAt', options);\n//     SessionStorage.remove('refreshToken', options);\n//     SessionStorage.remove('user', options);\n//     SessionStorage.remove('sessionId', options);\n// };\n//\n// export const destroyTokenSession = () => {\n//     const options = {\n//         path: '/'\n//     };\n//     SessionStorage.remove('token', options);\n//     SessionStorage.remove('tokenExpiresAt', options);\n//     SessionStorage.remove('refreshToken', options);\n// };","map":{"version":3,"sources":["C:/Users/User/Desktop/barcode/src/utility/session.js"],"names":["SessionStorage","saveSession","remember","accessToken","expireAt","refreshToken","user","id","withUser","options","path","expires","Date","now","set"],"mappings":"AAAA,OAAOA,cAAP,MAA2B,4BAA3B;AAGA,OAAO,IAAMC,WAAW,GAAG,SAAdA,WAAc,OAAkDC,QAAlD,EAAgF;AAAA,MAA9EC,WAA8E,QAA9EA,WAA8E;AAAA,MAAjEC,QAAiE,QAAjEA,QAAiE;AAAA,MAAvDC,YAAuD,QAAvDA,YAAuD;AAAA,MAAzCC,IAAyC,QAAzCA,IAAyC;AAAA,MAAnCC,EAAmC,QAAnCA,EAAmC;AAAA,MAApBC,QAAoB,uEAAT,IAAS;AACvG,MAAMC,OAAO,GAAG;AACZC,IAAAA,IAAI,EAAE,GADM;AAEZC,IAAAA,OAAO,EAAE,IAAIC,IAAJ,CAAUA,IAAI,CAACC,GAAL,KAAaT,QAAQ,GAAC,IAAhC;AAFG,GAAhB;AAIAJ,EAAAA,cAAc,CAACc,GAAf,CAAmB,OAAnB,EAA4BX,WAA5B,EAAyCM,OAAzC;;AACA,MAAID,QAAJ,EAAc;AACVR,IAAAA,cAAc,CAACc,GAAf,CAAmB,MAAnB,EAA2BR,IAA3B,EAAiCG,OAAjC;AACH;AACJ,CATM,C,CAWP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import SessionStorage from '../services/SessionStorage';\r\n\r\n\r\nexport const saveSession = ({accessToken, expireAt, refreshToken, user, id}, remember, withUser = true) => {\r\n    const options = {\r\n        path: '/',\r\n        expires: new Date( Date.now() + expireAt*1000),\r\n    };\r\n    SessionStorage.set('token', accessToken, options);\r\n    if (withUser) {\r\n        SessionStorage.set('user', user, options);\r\n    }\r\n};\r\n\r\n//\r\n// export const saveUserDataSession = (data) => {\r\n//     const now = new Date();\r\n//     const time = now.getTime();\r\n//     const expireTime = time + 1000 * 36000;\r\n//     now.setTime(expireTime);\r\n//     const rememberOptions = {\r\n//         path: '/',\r\n//         expires: new Date(now * 1000 + (30 * 24 * 3600 * 1000))\r\n//     };\r\n//     SessionStorage.set('userData', data, rememberOptions);\r\n// };\r\n//\r\n// export const destroySession = () => {\r\n//     const options = {\r\n//         path: '/'\r\n//     };\r\n//\r\n//     SessionStorage.remove('token', options);\r\n//     SessionStorage.remove('tokenExpiresAt', options);\r\n//     SessionStorage.remove('refreshToken', options);\r\n//     SessionStorage.remove('user', options);\r\n//     SessionStorage.remove('sessionId', options);\r\n// };\r\n//\r\n// export const destroyTokenSession = () => {\r\n//     const options = {\r\n//         path: '/'\r\n//     };\r\n//     SessionStorage.remove('token', options);\r\n//     SessionStorage.remove('tokenExpiresAt', options);\r\n//     SessionStorage.remove('refreshToken', options);\r\n// };\r\n\r\n"]},"metadata":{},"sourceType":"module"}