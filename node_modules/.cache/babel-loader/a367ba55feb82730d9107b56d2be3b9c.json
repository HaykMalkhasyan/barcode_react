{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\User\\\\Desktop\\\\barcode\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport { GET_LANGUAGES_REQUEST, GET_LANGUAGES_FAIL, GET_LANGUAGES_SUCCESS, GET_TRANSLATIONS_REQUEST, GET_TRANSLATIONS_FAIL, GET_TRANSLATIONS_SUCCESS, SET_ACTIVE_LANGUAGE, SET_MODAL_LANGUAGE, TOGGLE_MODAL_LANGUAGE, SET_TRANSLATIONS_REQUEST, SET_TRANSLATIONS_FAIL, SET_TRANSLATIONS_SUCCESS, SET_TRANSLATE, TOGGLE_TRANSLATION_MODAL, SET_TRANSLATION_MODAL, GET_TRANSLATION_REQUEST, GET_TRANSLATION_FAIL, GET_TRANSLATION_SUCCESS, EDIT_TRANSLATION_REQUEST, EDIT_TRANSLATION_FAIL, EDIT_TRANSLATION_SUCCESS, DELETE_TRANSLATION_REQUEST, DELETE_TRANSLATION_FAIL, DELETE_TRANSLATION_SUCCESS, GET_TRANSLATION_SIZE_REQUEST, GET_TRANSLATION_SIZE_FAIL, GET_TRANSLATION_SIZE_SUCCESS } from \"./actionTypes\";\nimport SessionStorage from \"../../services/SessionStorage\";\nimport { ChangeTranslation, IsRequiredField, IsRequiredFields, Push, RemoveItem, changeAddedTranslations } from '../../utility/utils'; // import {SET_GROUP_MODAL} from \"../group/actionTypes\";\n\nvar INIT_STATE = {\n  languages: [],\n  modalLang: SessionStorage.get(\"lang\") ? SessionStorage.get(\"lang\") : 'am',\n  translations: {},\n  translation: {},\n  translationsSize: [],\n  translationSize: {},\n  active: SessionStorage.get(\"lang\") ? SessionStorage.get(\"lang\") : 'am',\n  changeWord: [],\n  modal: {},\n  loading: false,\n  success: false,\n  fail: false,\n  errors: {},\n  required: [\"value\"],\n  status: false\n};\nexport default (function () {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : INIT_STATE;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case GET_LANGUAGES_REQUEST:\n      return _objectSpread({}, state, {\n        loading: true,\n        success: false,\n        fail: false,\n        errors: {}\n      });\n\n    case GET_LANGUAGES_FAIL:\n      return _objectSpread({}, state, {\n        loading: false,\n        success: false,\n        fail: true\n      });\n\n    case GET_LANGUAGES_SUCCESS:\n      return _objectSpread({}, state, {\n        loading: false,\n        success: true,\n        fail: false,\n        languages: action.result.results,\n        errors: {}\n      });\n\n    case GET_TRANSLATIONS_REQUEST:\n      return _objectSpread({}, state, {\n        loading: true,\n        success: false,\n        fail: false,\n        errors: {}\n      });\n\n    case GET_TRANSLATIONS_FAIL:\n      return _objectSpread({}, state, {\n        loading: false,\n        success: false,\n        fail: true\n      });\n\n    case GET_TRANSLATIONS_SUCCESS:\n      var actionData = action.result.results;\n      actionData.push({\n        id: 1000,\n        key: 'for test',\n        value: 'for test',\n        language: 'am'\n      });\n      actionData.push({\n        id: 1001,\n        key: 'for test',\n        value: 'for test',\n        language: 'ru'\n      });\n      actionData.push({\n        id: 1002,\n        key: 'for test',\n        value: 'for test',\n        language: 'en'\n      });\n      return _objectSpread({}, state, {\n        translations: actionData,\n        status: !!action.result.results.length,\n        loading: false,\n        success: true,\n        fail: false,\n        errors: {}\n      });\n\n    case GET_TRANSLATION_SIZE_REQUEST:\n      return _objectSpread({}, state, {\n        loading: true,\n        success: false,\n        fail: false,\n        errors: {}\n      });\n\n    case GET_TRANSLATION_SIZE_FAIL:\n      return _objectSpread({}, state, {\n        loading: false,\n        success: false,\n        fail: true\n      });\n\n    case GET_TRANSLATION_SIZE_SUCCESS:\n      var actionTranslationData = action.result.results;\n      actionTranslationData.push({\n        id: 1000,\n        key: 'for test',\n        value: 'for test',\n        language: 'am'\n      });\n      actionTranslationData.push({\n        id: 1001,\n        key: 'for test',\n        value: 'for test',\n        language: 'ru'\n      });\n      actionTranslationData.push({\n        id: 1002,\n        key: 'for test',\n        value: 'for test',\n        language: 'en'\n      });\n      return _objectSpread({}, state, {\n        translationsSize: actionData,\n        status: !!action.result.results.length,\n        loading: false,\n        success: true,\n        fail: false,\n        errors: {}\n      });\n\n    case SET_TRANSLATIONS_REQUEST:\n      return _objectSpread({}, state, {\n        loading: true,\n        success: false,\n        fail: false,\n        errors: {},\n        status: false\n      });\n\n    case SET_TRANSLATIONS_FAIL:\n      return _objectSpread({}, state, {\n        loading: false,\n        success: false,\n        fail: true,\n        status: false\n      });\n\n    case SET_TRANSLATIONS_SUCCESS:\n      return _objectSpread({}, state, {\n        loading: false,\n        success: true,\n        fail: false,\n        translations: changeAddedTranslations(state.translations, action.result),\n        errors: {},\n        status: true\n      });\n\n    case SET_TRANSLATE:\n      return _objectSpread({}, state, {\n        translations: Push(state.translations, action.result)\n      });\n\n    case SET_ACTIVE_LANGUAGE:\n      return _objectSpread({}, state, {\n        active: action.lang\n      });\n\n    case SET_MODAL_LANGUAGE:\n      return _objectSpread({}, state, {\n        modalLang: action.lang\n      });\n\n    case TOGGLE_MODAL_LANGUAGE:\n      return _objectSpread({}, state, {\n        modalLang: state.active\n      });\n\n    /*---------------------------------------------------*/\n\n    case TOGGLE_TRANSLATION_MODAL:\n      state.modal[action.modalType] = !state.modal[action.modalType];\n\n      if (action.obj) {\n        if (action.modalType === 'edit') {\n          state.translation[action.obj.key] = action.obj.value;\n        } else {\n          state.translation = action.obj;\n        }\n      }\n\n      return _objectSpread({}, state, {\n        errors: {}\n      });\n\n    case SET_TRANSLATION_MODAL:\n      state.translation[action.key] = action.value;\n      return _objectSpread({}, state, {\n        errors: IsRequiredField(state.required, action, state.errors)\n      });\n\n    case GET_TRANSLATION_REQUEST:\n      return _objectSpread({}, state, {\n        loading: true,\n        success: false,\n        fail: false,\n        errors: {}\n      });\n\n    case GET_TRANSLATION_FAIL:\n      return _objectSpread({}, state, {\n        loading: false,\n        success: false,\n        fail: true\n      });\n\n    case GET_TRANSLATION_SUCCESS:\n      return _objectSpread({}, state, {\n        loading: false,\n        success: true,\n        fail: false,\n        translation: action.result,\n        errors: {}\n      });\n\n    case EDIT_TRANSLATION_REQUEST:\n      return _objectSpread({}, state, {\n        loading: true,\n        success: false,\n        fail: false,\n        modal: {},\n        errors: IsRequiredFields(state.required, state.translation, state.errors)\n      });\n\n    case EDIT_TRANSLATION_FAIL:\n      return _objectSpread({}, state, {\n        loading: false,\n        success: false,\n        fail: true\n      });\n\n    case EDIT_TRANSLATION_SUCCESS:\n      return _objectSpread({}, state, {\n        translations: ChangeTranslation(state.translations, action.result),\n        loading: false,\n        success: true,\n        fail: false,\n        modal: {},\n        translation: {}\n      });\n\n    case DELETE_TRANSLATION_REQUEST:\n      return _objectSpread({}, state, {\n        loading: true,\n        success: false,\n        fail: false,\n        modal: {}\n      });\n\n    case DELETE_TRANSLATION_FAIL:\n      return _objectSpread({}, state, {\n        loading: false,\n        success: false,\n        fail: true\n      });\n\n    case DELETE_TRANSLATION_SUCCESS:\n      return _objectSpread({}, state, {\n        translations: RemoveItem(state.translations, action.result),\n        loading: false,\n        success: true,\n        fail: false,\n        modal: {},\n        datas: {}\n      });\n\n    default:\n      return _objectSpread({}, state);\n  }\n});","map":{"version":3,"sources":["C:/Users/User/Desktop/barcode/src/redux/lang/reducer.js"],"names":["GET_LANGUAGES_REQUEST","GET_LANGUAGES_FAIL","GET_LANGUAGES_SUCCESS","GET_TRANSLATIONS_REQUEST","GET_TRANSLATIONS_FAIL","GET_TRANSLATIONS_SUCCESS","SET_ACTIVE_LANGUAGE","SET_MODAL_LANGUAGE","TOGGLE_MODAL_LANGUAGE","SET_TRANSLATIONS_REQUEST","SET_TRANSLATIONS_FAIL","SET_TRANSLATIONS_SUCCESS","SET_TRANSLATE","TOGGLE_TRANSLATION_MODAL","SET_TRANSLATION_MODAL","GET_TRANSLATION_REQUEST","GET_TRANSLATION_FAIL","GET_TRANSLATION_SUCCESS","EDIT_TRANSLATION_REQUEST","EDIT_TRANSLATION_FAIL","EDIT_TRANSLATION_SUCCESS","DELETE_TRANSLATION_REQUEST","DELETE_TRANSLATION_FAIL","DELETE_TRANSLATION_SUCCESS","GET_TRANSLATION_SIZE_REQUEST","GET_TRANSLATION_SIZE_FAIL","GET_TRANSLATION_SIZE_SUCCESS","SessionStorage","ChangeTranslation","IsRequiredField","IsRequiredFields","Push","RemoveItem","changeAddedTranslations","INIT_STATE","languages","modalLang","get","translations","translation","translationsSize","translationSize","active","changeWord","modal","loading","success","fail","errors","required","status","state","action","type","result","results","actionData","push","id","key","value","language","length","actionTranslationData","lang","modalType","obj","datas"],"mappings":"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","sourcesContent":["import {\r\n    GET_LANGUAGES_REQUEST,\r\n    GET_LANGUAGES_FAIL,\r\n    GET_LANGUAGES_SUCCESS,\r\n    GET_TRANSLATIONS_REQUEST,\r\n    GET_TRANSLATIONS_FAIL,\r\n    GET_TRANSLATIONS_SUCCESS,\r\n    SET_ACTIVE_LANGUAGE,\r\n    SET_MODAL_LANGUAGE,\r\n    TOGGLE_MODAL_LANGUAGE,\r\n    SET_TRANSLATIONS_REQUEST,\r\n    SET_TRANSLATIONS_FAIL,\r\n    SET_TRANSLATIONS_SUCCESS,\r\n    SET_TRANSLATE,\r\n    TOGGLE_TRANSLATION_MODAL,\r\n    SET_TRANSLATION_MODAL,\r\n    GET_TRANSLATION_REQUEST,\r\n    GET_TRANSLATION_FAIL,\r\n    GET_TRANSLATION_SUCCESS,\r\n    EDIT_TRANSLATION_REQUEST,\r\n    EDIT_TRANSLATION_FAIL,\r\n    EDIT_TRANSLATION_SUCCESS,\r\n    DELETE_TRANSLATION_REQUEST,\r\n    DELETE_TRANSLATION_FAIL,\r\n    DELETE_TRANSLATION_SUCCESS, GET_TRANSLATION_SIZE_REQUEST, GET_TRANSLATION_SIZE_FAIL, GET_TRANSLATION_SIZE_SUCCESS\r\n} from \"./actionTypes\";\r\nimport SessionStorage from \"../../services/SessionStorage\";\r\nimport {ChangeTranslation, IsRequiredField, IsRequiredFields, Push, RemoveItem, changeAddedTranslations} from '../../utility/utils';\r\n// import {SET_GROUP_MODAL} from \"../group/actionTypes\";\r\nconst INIT_STATE = {\r\n    languages: [],\r\n    modalLang: SessionStorage.get(\"lang\") ? SessionStorage.get(\"lang\") : 'am',\r\n    translations: {},\r\n    translation: {},\r\n    translationsSize: [],\r\n    translationSize: {},\r\n    active: SessionStorage.get(\"lang\") ? SessionStorage.get(\"lang\") : 'am',\r\n    changeWord: [],\r\n    modal: {},\r\n    loading: false,\r\n    success: false,\r\n    fail: false,\r\n    errors: {},\r\n    required:[\"value\"],\r\n    status: false,\r\n};\r\n\r\n\r\nexport default (state = INIT_STATE, action) => {\r\n    switch (action.type) {\r\n        case GET_LANGUAGES_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n                success: false,\r\n                fail: false,\r\n                errors: {},\r\n            };\r\n        case GET_LANGUAGES_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: false,\r\n                fail: true,\r\n            };\r\n        case GET_LANGUAGES_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: true,\r\n                fail: false,\r\n                languages: action.result.results,\r\n                errors: {},\r\n            };\r\n        case GET_TRANSLATIONS_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n                success: false,\r\n                fail: false,\r\n                errors: {},\r\n            };\r\n        case GET_TRANSLATIONS_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: false,\r\n                fail: true,\r\n            };\r\n        case GET_TRANSLATIONS_SUCCESS:\r\n            let actionData = action.result.results;\r\n            actionData.push({id: 1000, key: 'for test', value: 'for test', language: 'am'})\r\n            actionData.push({id: 1001, key: 'for test', value: 'for test', language: 'ru'})\r\n            actionData.push({id: 1002, key: 'for test', value: 'for test', language: 'en'})\r\n            return {\r\n                ...state,\r\n                translations: actionData,\r\n                status: !!action.result.results.length,\r\n                loading: false,\r\n                success: true,\r\n                fail: false,\r\n                errors: {}\r\n            };\r\n        case GET_TRANSLATION_SIZE_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n                success: false,\r\n                fail: false,\r\n                errors: {},\r\n            };\r\n        case GET_TRANSLATION_SIZE_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: false,\r\n                fail: true,\r\n            };\r\n        case GET_TRANSLATION_SIZE_SUCCESS:\r\n            let actionTranslationData = action.result.results;\r\n            actionTranslationData.push({id: 1000, key: 'for test', value: 'for test', language: 'am'})\r\n            actionTranslationData.push({id: 1001, key: 'for test', value: 'for test', language: 'ru'})\r\n            actionTranslationData.push({id: 1002, key: 'for test', value: 'for test', language: 'en'})\r\n            return {\r\n                ...state,\r\n                translationsSize: actionData,\r\n                status: !!action.result.results.length,\r\n                loading: false,\r\n                success: true,\r\n                fail: false,\r\n                errors: {}\r\n            };\r\n        case SET_TRANSLATIONS_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n                success: false,\r\n                fail: false,\r\n                errors: {},\r\n                status: false\r\n            };\r\n        case SET_TRANSLATIONS_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: false,\r\n                fail: true,\r\n                status: false\r\n            };\r\n        case SET_TRANSLATIONS_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: true,\r\n                fail: false,\r\n                translations: changeAddedTranslations(state.translations, action.result),\r\n                errors: {},\r\n                status: true\r\n            }\r\n            case SET_TRANSLATE:\r\n            return {\r\n                ...state,\r\n                translations: Push(state.translations, action.result),\r\n            }\r\n        case SET_ACTIVE_LANGUAGE:\r\n            return {\r\n                ...state,\r\n                active: action.lang,\r\n            };\r\n        case SET_MODAL_LANGUAGE:\r\n            return {\r\n                ...state,\r\n                modalLang: action.lang,\r\n            };\r\n        case  TOGGLE_MODAL_LANGUAGE:\r\n            return {\r\n                ...state,\r\n                modalLang: state.active,\r\n            }\r\n            /*---------------------------------------------------*/\r\n        case TOGGLE_TRANSLATION_MODAL:\r\n            state.modal[action.modalType] = !state.modal[action.modalType];\r\n\r\n            if (action.obj) {\r\n                if (action.modalType === 'edit') {\r\n                    state.translation[action.obj.key] = action.obj.value;\r\n                } else {\r\n                    state.translation = action.obj\r\n                }\r\n            }\r\n            return {\r\n                ...state, errors: {}\r\n            };\r\n        case SET_TRANSLATION_MODAL:\r\n            state.translation[action.key] = action.value;\r\n            return {\r\n                ...state,\r\n                errors: IsRequiredField(state.required,action,state.errors)\r\n            }\r\n        case GET_TRANSLATION_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n                success: false,\r\n                fail: false,\r\n                errors: {}\r\n            }\r\n        case GET_TRANSLATION_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: false,\r\n                fail: true,\r\n            }\r\n        case GET_TRANSLATION_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: true,\r\n                fail: false,\r\n                translation: action.result,\r\n                errors: {},\r\n            }\r\n        case EDIT_TRANSLATION_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n                success: false,\r\n                fail: false,\r\n                modal: {},\r\n                errors:IsRequiredFields(state.required,state.translation,state.errors)\r\n            }\r\n        case EDIT_TRANSLATION_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: false,\r\n                fail: true,\r\n            }\r\n        case EDIT_TRANSLATION_SUCCESS:\r\n            return {\r\n                ...state,\r\n                translations: ChangeTranslation(state.translations, action.result),\r\n                loading: false,\r\n                success: true,\r\n                fail: false,\r\n                modal: {},\r\n                translation: {}\r\n            }\r\n        case DELETE_TRANSLATION_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n                success: false,\r\n                fail: false,\r\n                modal: {},\r\n            }\r\n        case DELETE_TRANSLATION_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: false,\r\n                fail: true,\r\n            }\r\n        case DELETE_TRANSLATION_SUCCESS:\r\n            return {\r\n                ...state,\r\n                translations: RemoveItem(state.translations, action.result),\r\n                loading: false,\r\n                success: true,\r\n                fail: false,\r\n                modal: {},\r\n                datas: {}\r\n            }\r\n        default:\r\n            return {...state};\r\n    }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}