{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\User\\\\Desktop\\\\barcode\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _defineProperty from \"C:\\\\Users\\\\User\\\\Desktop\\\\barcode\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"C:\\\\Users\\\\User\\\\Desktop\\\\barcode\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\User\\\\Desktop\\\\barcode\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport SessionStorage from \"./SessionStorage\";\nimport axios from \"axios\";\n\nvar ApiClient =\n/*#__PURE__*/\nfunction () {\n  function ApiClient() {\n    _classCallCheck(this, ApiClient);\n\n    this.configs = {};\n    this.defaultConfigs = {};\n    this.API_URI = process.env.REACT_APP_API_URL;\n    var token = SessionStorage.get(\"token\");\n    var headers = {\n      \"Content-Type\": \"application/json\"\n    };\n\n    if (token) {\n      headers[\"Token\"] = token;\n    }\n\n    this.defaultConfigs = {\n      headers: headers,\n      path: \"\",\n      params: {}\n    };\n    this.resetConfigs();\n  }\n\n  _createClass(ApiClient, [{\n    key: \"getRuntimeConfigs\",\n    value: function getRuntimeConfigs() {\n      var token = SessionStorage.get(\"token\");\n      var headers = {\n        \"Content-Type\": \"application/json\"\n      };\n\n      if (token) {\n        headers[\"Token\"] = token;\n      }\n\n      return Object.assign({}, this.configs, {\n        headers: headers\n      });\n    }\n  }, {\n    key: \"resetConfigs\",\n    value: function resetConfigs() {\n      this.configs = Object.assign({}, this.defaultConfigs);\n    }\n  }, {\n    key: \"setConfig\",\n    value: function setConfig(key, value) {\n      this.configs = Object.assign({}, this.configs, _defineProperty({}, key, value));\n    }\n  }, {\n    key: \"mergeConfigs\",\n    value: function mergeConfigs(path, data, headers, configs) {\n      var runtimeConfigs = this.getRuntimeConfigs();\n      var responseType = {};\n\n      if (data && data.responseType) {\n        responseType = data.responseType;\n      }\n\n      var params = {\n        path: path,\n        data: data\n      };\n      return Object.assign({}, runtimeConfigs, Object.assign({}, configs, _objectSpread({}, responseType, {\n        params: Object.assign({}, runtimeConfigs.params, params),\n        headers: Object.assign({}, runtimeConfigs.headers, headers) // paramsSerializer: function(params) {\n        //     return qs.stringify(params, { arrayFormat: \"brackets\" });\n        // }\n\n      })));\n    }\n  }, {\n    key: \"get\",\n    value: function get(uri) {\n      var params = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      var headers = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n      var configs = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n      return axios.get(\"\".concat(this.API_URI), this.mergeConfigs(uri, params, headers, configs)).then(function (response) {\n        return response.data;\n      });\n    }\n  }, {\n    key: \"post\",\n    value: function post(uri, data) {\n      var params = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n      var headers = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n      var configs = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : {\n        hasFile: false\n      };\n      var formData = new FormData();\n\n      if (configs.hasFile) {\n        for (var key in data) {\n          if (Array.isArray(data[key])) {\n            for (var i = 0; i < data[key].length; i++) {\n              formData.append(\"\".concat(key, \"[]\"), data[key][i]);\n            }\n          } else {\n            formData.set(key, data[key]);\n          }\n        }\n\n        data = formData;\n      }\n\n      console.log(params);\n      return axios.post(\"\".concat(this.API_URI, \"/\").concat(uri), this.mergeConfigs(params, headers, configs)).then(function (response) {\n        return response.data;\n      });\n    }\n  }, {\n    key: \"put\",\n    value: function put(uri, data) {\n      var params = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n      var headers = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n      var configs = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : {\n        hasFile: false\n      };\n      var formData = new FormData();\n\n      if (configs.hasFile) {\n        for (var key in data) {\n          if (Array.isArray(data[key])) {\n            for (var i = 0; i < data[key].length; i++) {\n              formData.append(\"\".concat(key, \"[]\"), data[key][i]);\n            }\n          } else {\n            formData.set(key, data[key]);\n          }\n        }\n\n        data = formData;\n      }\n\n      return axios.put(\"\".concat(this.API_URI, \"/\").concat(uri), data, this.mergeConfigs(params, headers, configs)).then(function (response) {\n        return response.data;\n      });\n    }\n  }, {\n    key: \"delete\",\n    value: function _delete(uri) {\n      var params = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      var headers = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n      var configs = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n      return axios.delete(\"\".concat(this.API_URI), this.mergeConfigs(uri, params, headers, configs)).then(function (response) {\n        return response.data;\n      });\n    }\n  }, {\n    key: \"upload\",\n    value: function upload(uri, form, data) {\n      var params = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n      var headers = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : {};\n      var configs = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : {\n        multiple: false\n      };\n      var files = form.files;\n\n      if (!Array.isArray(files)) {\n        files = new Array(files);\n      }\n\n      var formData = new FormData(); // formData.append('files', files);\n\n      files.forEach(function (item, i) {\n        formData.append(\"data[\" + i + \"][file]\", item);\n        formData.append(\"data[\" + i + \"][type]\", form.type);\n        formData.append(\"data[\" + i + \"][caption]\", \"caption \" + i);\n        formData.append(\"data[\" + i + \"][credit]\", \"credit \" + i);\n      });\n      return this.post(uri, formData, params, headers, configs);\n    }\n  }], [{\n    key: \"cancelToken\",\n    value: function cancelToken() {\n      var CancelToken = axios.CancelToken;\n      return CancelToken.source();\n    }\n  }]);\n\n  return ApiClient;\n}();\n\nexport { ApiClient as default };","map":{"version":3,"sources":["C:/Users/User/Desktop/barcode/src/services/Api.js"],"names":["SessionStorage","axios","ApiClient","configs","defaultConfigs","API_URI","process","env","REACT_APP_API_URL","token","get","headers","path","params","resetConfigs","Object","assign","key","value","data","runtimeConfigs","getRuntimeConfigs","responseType","uri","mergeConfigs","then","response","hasFile","formData","FormData","Array","isArray","i","length","append","set","console","log","post","put","delete","form","multiple","files","forEach","item","type","CancelToken","source"],"mappings":"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","sourcesContent":["import SessionStorage from \"./SessionStorage\";\r\nimport axios from \"axios\";\r\n\r\nexport default class ApiClient {\r\n    configs = {};\r\n    defaultConfigs = {};\r\n    API_URI = process.env.REACT_APP_API_URL;\r\n\r\n    constructor() {\r\n        const token = SessionStorage.get(\"token\");\r\n        let headers = {\r\n            \"Content-Type\": \"application/json\"\r\n        };\r\n\r\n        if (token) {\r\n            headers[\"Token\"] = token;\r\n        }\r\n\r\n        this.defaultConfigs = {\r\n            headers,\r\n            path:\"\",\r\n            params: {}\r\n        };\r\n\r\n        this.resetConfigs();\r\n    }\r\n\r\n    getRuntimeConfigs() {\r\n        const token = SessionStorage.get(\"token\");\r\n\r\n        let headers = {\r\n            \"Content-Type\": \"application/json\"\r\n        };\r\n\r\n        if (token) {\r\n            headers[\"Token\"] = token;\r\n        }\r\n        return Object.assign({}, this.configs, {\r\n            headers\r\n        });\r\n    }\r\n\r\n    resetConfigs() {\r\n        this.configs = Object.assign({}, this.defaultConfigs);\r\n    }\r\n\r\n    setConfig(key, value) {\r\n        this.configs = Object.assign({}, this.configs, {\r\n            [key]: value\r\n        });\r\n    }\r\n\r\n    mergeConfigs(path, data, headers, configs) {\r\n        const runtimeConfigs = this.getRuntimeConfigs();\r\n        let responseType = {};\r\n\r\n        if (data && data.responseType) {\r\n            responseType = data.responseType;\r\n        }\r\n        let params = {\r\n            path:path,\r\n            data:data\r\n        }\r\n        return Object.assign(\r\n            {},\r\n            runtimeConfigs,\r\n            Object.assign(\r\n                {},\r\n                configs,\r\n                {\r\n                    ...responseType,\r\n                    params: Object.assign({}, runtimeConfigs.params, params),\r\n                    headers: Object.assign({}, runtimeConfigs.headers, headers),\r\n                    // paramsSerializer: function(params) {\r\n                    //     return qs.stringify(params, { arrayFormat: \"brackets\" });\r\n                    // }\r\n                }\r\n            )\r\n        );\r\n    }\r\n\r\n    static cancelToken() {\r\n        const CancelToken = axios.CancelToken;\r\n        return CancelToken.source();\r\n    }\r\n\r\n    get(uri, params = {}, headers = {}, configs = {}) {\r\n        return axios.get(`${this.API_URI}`, this.mergeConfigs(uri,params, headers, configs)\r\n        ).then(response => response.data);\r\n    }\r\n\r\n    post(uri, data, params = {}, headers = {}, configs = { hasFile: false }) {\r\n        let formData = new FormData();\r\n\r\n        if (configs.hasFile) {\r\n            for (let key in data) {\r\n                if (Array.isArray(data[key])) {\r\n                    for (let i = 0; i < data[key].length; i++) {\r\n                        formData.append(`${key}[]`, data[key][i]);\r\n                    }\r\n                } else {\r\n                    formData.set(key, data[key]);\r\n                }\r\n            }\r\n            data = formData;\r\n        }\r\n        console.log(params)\r\n        return axios.post(`${this.API_URI}/${uri}`,\r\n            this.mergeConfigs(params, headers, configs)\r\n        ).then(response => response.data);\r\n    }\r\n\r\n    put(uri, data, params = {}, headers = {}, configs = { hasFile: false }) {\r\n        let formData = new FormData();\r\n\r\n        if (configs.hasFile) {\r\n            for (let key in data) {\r\n                if (Array.isArray(data[key])) {\r\n                    for (let i = 0; i < data[key].length; i++) {\r\n                        formData.append(`${key}[]`, data[key][i]);\r\n                    }\r\n                } else {\r\n                    formData.set(key, data[key]);\r\n                }\r\n            }\r\n            data = formData;\r\n        }\r\n        return axios.put(`${this.API_URI}/${uri}`, data,\r\n            this.mergeConfigs(params, headers, configs)\r\n        ).then(response => response.data);\r\n    }\r\n\r\n    delete(uri, params = {}, headers = {}, configs = {}) {\r\n        return axios.delete(`${this.API_URI}`,\r\n            this.mergeConfigs(uri,params, headers, configs)\r\n        ).then(response => response.data);\r\n    }\r\n\r\n    upload(uri, form, data, params = {}, headers = {}, configs = { multiple: false }) {\r\n        let files = form.files;\r\n        if (!Array.isArray(files)) {\r\n            files = new Array(files);\r\n        }\r\n        let formData = new FormData();\r\n        // formData.append('files', files);\r\n        files.forEach((item, i) => {\r\n            formData.append(\"data[\" + i + \"][file]\", item);\r\n            formData.append(\"data[\" + i + \"][type]\", form.type);\r\n            formData.append(\"data[\" + i + \"][caption]\", \"caption \" + i);\r\n            formData.append(\"data[\" + i + \"][credit]\", \"credit \" + i);\r\n        });\r\n\r\n        return this.post(uri, formData, params, headers, configs);\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}