{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\User\\\\Desktop\\\\barcode\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _defineProperty from \"C:\\\\Users\\\\User\\\\Desktop\\\\barcode\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"C:\\\\Users\\\\User\\\\Desktop\\\\barcode\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\User\\\\Desktop\\\\barcode\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport SessionStorage from \"./SessionStorage\";\nimport axios from \"axios\";\n\nvar ApiClient =\n/*#__PURE__*/\nfunction () {\n  function ApiClient() {\n    _classCallCheck(this, ApiClient);\n\n    this.configs = {};\n    this.defaultConfigs = {};\n    this.API_URI = process.env.REACT_APP_API_URL;\n    this.defaultConfigs = {\n      headers: {},\n      path: \"\",\n      params: {}\n    };\n    this.resetConfigs();\n  }\n\n  _createClass(ApiClient, [{\n    key: \"getRuntimeConfigs\",\n    value: function getRuntimeConfigs() {\n      var token = SessionStorage.get(\"token\");\n      var lang = SessionStorage.get(\"lang\") ? SessionStorage.get(\"lang\") : 'am';\n      var headers = {\n        \"Content-Type\": \"application/json\",\n        \"Lang\": lang\n      };\n\n      if (token) {\n        headers[\"Token\"] = token;\n      }\n\n      return Object.assign({}, this.configs, {\n        headers: headers\n      });\n    }\n  }, {\n    key: \"resetConfigs\",\n    value: function resetConfigs() {\n      this.configs = Object.assign({}, this.defaultConfigs);\n    }\n  }, {\n    key: \"setConfig\",\n    value: function setConfig(key, value) {\n      this.configs = Object.assign({}, this.configs, _defineProperty({}, key, value));\n    }\n  }, {\n    key: \"mergeConfigs\",\n    value: function mergeConfigs(path, data, headers, configs) {\n      var runtimeConfigs = this.getRuntimeConfigs();\n      var responseType = {};\n\n      if (data && data.responseType) {\n        responseType = data.responseType;\n      }\n\n      var params = {\n        path: path,\n        data: data\n      };\n      return Object.assign({}, runtimeConfigs, Object.assign({}, configs, _objectSpread({}, responseType, {\n        params: Object.assign({}, runtimeConfigs.params, params),\n        headers: Object.assign({}, runtimeConfigs.headers, headers) // paramsSerializer: function(params) {\n        //     return qs.stringify(params, { arrayFormat: \"brackets\" });\n        // }\n\n      })));\n    }\n  }, {\n    key: \"get\",\n    value: function get(uri) {\n      var params = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      var headers = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n      var configs = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n      return axios.get(\"\".concat(this.API_URI), this.mergeConfigs(uri, params, headers, configs)).then(function (response) {\n        return response.data;\n      });\n    }\n  }, {\n    key: \"post\",\n    value: function post(uri) {\n      var params = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      var headers = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n      var configs = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {\n        hasFile: false\n      };\n      return axios.post(\"\".concat(this.API_URI), uri, this.mergeConfigs(uri, params, headers, configs)).then(function (response) {\n        return response.data;\n      });\n    }\n  }, {\n    key: \"put\",\n    value: function put(uri) {\n      var params = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      var headers = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n      var configs = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {\n        hasFile: false\n      };\n      return axios.put(\"\".concat(this.API_URI), uri, this.mergeConfigs(uri, params, headers, configs)).then(function (response) {\n        return response.data;\n      });\n    }\n  }, {\n    key: \"delete\",\n    value: function _delete(uri) {\n      var params = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      var headers = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n      var configs = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n      return axios.delete(\"\".concat(this.API_URI), this.mergeConfigs(uri, params, headers, configs)).then(function (response) {\n        return response.data;\n      });\n    }\n  }, {\n    key: \"upload\",\n    value: function upload(uri, form, data) {\n      var params = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n      var headers = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : {};\n      var configs = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : {\n        multiple: false\n      };\n      var files = form.files[0];\n      console.log(files);\n\n      if (!Array.isArray(files)) {\n        files = new Array(files);\n      }\n\n      var formData = new FormData(); // // formData.append('files', files);\n\n      Array.from(files).forEach(function (item, i) {\n        // console.log(item,form.type,i)\n        formData.append(\"data[\" + i + \"][file]\", item);\n        formData.append(\"data[\" + i + \"][type]\", form.type);\n        formData.append(\"data[\" + i + \"][caption]\", \"caption \" + i);\n        formData.append(\"data[\" + i + \"][credit]\", \"credit \" + i);\n      }); // console.log(formData)\n\n      return this.post(uri, formData, params, headers, configs);\n    }\n  }], [{\n    key: \"cancelToken\",\n    value: function cancelToken() {\n      var CancelToken = axios.CancelToken;\n      return CancelToken.source();\n    }\n  }]);\n\n  return ApiClient;\n}();\n\nexport { ApiClient as default };","map":{"version":3,"sources":["C:/Users/User/Desktop/barcode/src/services/Api.js"],"names":["SessionStorage","axios","ApiClient","configs","defaultConfigs","API_URI","process","env","REACT_APP_API_URL","headers","path","params","resetConfigs","token","get","lang","Object","assign","key","value","data","runtimeConfigs","getRuntimeConfigs","responseType","uri","mergeConfigs","then","response","hasFile","post","put","delete","form","multiple","files","console","log","Array","isArray","formData","FormData","from","forEach","item","i","append","type","CancelToken","source"],"mappings":"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","sourcesContent":["import SessionStorage from \"./SessionStorage\";\r\nimport axios from \"axios\";\r\n\r\nexport default class ApiClient {\r\n    configs = {};\r\n    defaultConfigs = {};\r\n    API_URI = process.env.REACT_APP_API_URL;\r\n\r\n    constructor() {\r\n        this.defaultConfigs = {\r\n            headers:{},\r\n            path:\"\",\r\n            params: {}\r\n        };\r\n        this.resetConfigs();\r\n    }\r\n\r\n    getRuntimeConfigs() {\r\n        const token = SessionStorage.get(\"token\");\r\n        const lang = SessionStorage.get(\"lang\")?SessionStorage.get(\"lang\"):'am';\r\n        let headers = {\r\n            \"Content-Type\": \"application/json\",\r\n            \"Lang\": lang,\r\n        };\r\n        if (token) {\r\n            headers[\"Token\"] = token;\r\n        }\r\n        return Object.assign({}, this.configs, {\r\n            headers\r\n        });\r\n    }\r\n\r\n    resetConfigs() {\r\n        this.configs = Object.assign({}, this.defaultConfigs);\r\n    }\r\n\r\n    setConfig(key, value) {\r\n        this.configs = Object.assign({}, this.configs, {\r\n            [key]: value\r\n        });\r\n    }\r\n\r\n    mergeConfigs(path, data, headers, configs) {\r\n        const runtimeConfigs = this.getRuntimeConfigs();\r\n        let responseType = {};\r\n\r\n        if (data && data.responseType) {\r\n            responseType = data.responseType;\r\n        }\r\n        let params = {\r\n            path:path,\r\n            data:data\r\n        }\r\n        return Object.assign(\r\n            {},\r\n            runtimeConfigs,\r\n            Object.assign(\r\n                {},\r\n                configs,\r\n                {\r\n                    ...responseType,\r\n                    params: Object.assign({}, runtimeConfigs.params, params),\r\n                    headers: Object.assign({}, runtimeConfigs.headers, headers),\r\n                    // paramsSerializer: function(params) {\r\n                    //     return qs.stringify(params, { arrayFormat: \"brackets\" });\r\n                    // }\r\n                }\r\n            )\r\n        );\r\n    }\r\n\r\n    static cancelToken() {\r\n        const CancelToken = axios.CancelToken;\r\n        return CancelToken.source();\r\n    }\r\n\r\n    get(uri, params = {}, headers = {}, configs = {}) {\r\n        return axios.get(`${this.API_URI}`, this.mergeConfigs(uri,params, headers, configs)\r\n        ).then(response => response.data);\r\n    }\r\n\r\n    post(uri, params = {}, headers = {}, configs = { hasFile: false }) {\r\n        return axios.post(`${this.API_URI}`,uri,\r\n            this.mergeConfigs(uri,params, headers, configs)\r\n        ).then(response => response.data);\r\n    }\r\n\r\n    put(uri, params = {}, headers = {}, configs = { hasFile: false }) {\r\n        return axios.put(`${this.API_URI}`,uri,\r\n            this.mergeConfigs(uri,params, headers, configs)\r\n        ).then(response => response.data);\r\n    }\r\n\r\n    delete(uri, params = {}, headers = {}, configs = {}) {\r\n        return axios.delete(`${this.API_URI}`,\r\n            this.mergeConfigs(uri,params, headers, configs)\r\n        ).then(response => response.data);\r\n    }\r\n\r\n    upload(uri, form, data, params = {}, headers = {}, configs = { multiple: false }) {\r\n        let files = form.files[0];\r\n    console.log(files)\r\n        if (!Array.isArray(files)) {\r\n            files = new Array(files);\r\n        }\r\n        let formData = new FormData();\r\n        // // formData.append('files', files);\r\n        Array.from(files).forEach((item, i) => {\r\n            // console.log(item,form.type,i)\r\n            formData.append(\"data[\" + i + \"][file]\", item);\r\n            formData.append(\"data[\" + i + \"][type]\", form.type);\r\n            formData.append(\"data[\" + i + \"][caption]\", \"caption \" + i);\r\n            formData.append(\"data[\" + i + \"][credit]\", \"credit \" + i);\r\n        });\r\n        // console.log(formData)\r\n\r\n        return this.post(uri, formData, params, headers, configs);\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}