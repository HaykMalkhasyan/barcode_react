{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\User\\\\Desktop\\\\barcode\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nimport _readOnlyError from \"C:\\\\Users\\\\User\\\\Desktop\\\\barcode\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/readOnlyError\";\nvar _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\barcode\\\\src\\\\containers\\\\users\\\\userModal.js\";\nimport React, { useState } from \"react\";\nimport { Col, Row, Form, FormGroup, Label, Button, ModalBody, ModalFooter, Input } from \"reactstrap\";\nimport Translate from \"../../Translate\";\nimport jwt from \"jwt-simple\";\n\nvar AddContact = function AddContact(_ref) {\n  var id = _ref.id,\n      props = _ref.props;\n  // let firstname, lastname, username, password, position, active;\n  var user = props.user[0];\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 7),\n      firstname = _useState2[0],\n      setFirstName = _useState2[1],\n      lastname = _useState2[2],\n      username = _useState2[3],\n      password = _useState2[4],\n      position = _useState2[5],\n      active = _useState2[6];\n\n  console.log(props.user);\n  return React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, React.createElement(ModalBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, React.createElement(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, React.createElement(Col, {\n    md: 6,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, React.createElement(FormGroup, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, React.createElement(Label, {\n    for: \"firstName\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, React.createElement(Translate, {\n    name: \"firstname\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  })), React.createElement(\"input\", {\n    className: \"form-control\",\n    type: \"text\",\n    name: \"firstname\",\n    id: \"firstName\",\n    onChange: function onChange(event) {\n      return setFirstName(event.target.value);\n    },\n    value: user && user.firstname ? user.firstname : \"\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }))), React.createElement(Col, {\n    md: 6,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, React.createElement(FormGroup, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, React.createElement(Label, {\n    for: \"lastName\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, React.createElement(Translate, {\n    name: \"lastname\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  })), React.createElement(\"input\", {\n    className: \"form-control\",\n    type: \"text\",\n    name: \"lastname\",\n    id: \"lastName\" // ref={node => (lastname = node)}\n    ,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  })))), React.createElement(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, React.createElement(Col, {\n    md: 6,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, React.createElement(FormGroup, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, React.createElement(Label, {\n    for: \"username\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, React.createElement(Translate, {\n    name: \"username\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  })), React.createElement(\"input\", {\n    className: \"form-control\",\n    type: \"text\",\n    name: \"username\",\n    id: \"username\" // ref={node => (username = node)}\n    ,\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }))), React.createElement(Col, {\n    md: 6,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, React.createElement(FormGroup, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, React.createElement(Label, {\n    for: \"password\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, React.createElement(Translate, {\n    name: \"password\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  })), React.createElement(\"input\", {\n    className: \"form-control\",\n    type: \"password\",\n    name: \"password\",\n    id: \"password\" // ref={node => (password = node)}\n    ,\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  })))), React.createElement(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, React.createElement(Col, {\n    md: 6,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, React.createElement(FormGroup, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, React.createElement(Label, {\n    for: \"position\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, React.createElement(Translate, {\n    name: \"position\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  })), React.createElement(Input, {\n    type: \"select\",\n    id: \"position\",\n    name: \"position\",\n    ref: function ref(node) {\n      return position = (_readOnlyError(\"position\"), node);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, props.positions.map(function (item, key) {\n    return React.createElement(\"option\", {\n      value: item.id,\n      key: key,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, item.name);\n  })))), React.createElement(Col, {\n    md: 6,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, React.createElement(FormGroup, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, React.createElement(Label, {\n    for: \"active\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, React.createElement(Translate, {\n    name: \"active\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  })), React.createElement(Input, {\n    type: \"select\",\n    id: \"active\",\n    name: \"active\",\n    ref: function ref(node) {\n      return active = (_readOnlyError(\"active\"), node);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }, React.createElement(\"option\", {\n    value: \"0\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }, \"\\u0531\\u0575\\u0578\"), React.createElement(\"option\", {\n    value: \"1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }, \"\\u0548\\u0579\")))))), React.createElement(ModalFooter, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  }, React.createElement(Button, {\n    color: \"primary\",\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }, React.createElement(Translate, {\n    name: \"add\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }))));\n};\n\nexport default AddContact;","map":{"version":3,"sources":["C:/Users/User/Desktop/barcode/src/containers/users/userModal.js"],"names":["React","useState","Col","Row","Form","FormGroup","Label","Button","ModalBody","ModalFooter","Input","Translate","jwt","AddContact","id","props","user","firstname","setFirstName","lastname","username","password","position","active","console","log","event","target","value","node","positions","map","item","key","name"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport { Col, Row, Form, FormGroup, Label, Button, ModalBody, ModalFooter,Input } from \"reactstrap\";\r\nimport Translate from \"../../Translate\";\r\nimport jwt from \"jwt-simple\";\r\n\r\nconst AddContact = ({ id, props }) => {\r\n\r\n    // let firstname, lastname, username, password, position, active;\r\n    let user = props.user[0];\r\n    const [firstname,setFirstName, lastname, username, password, position, active] = useState('')\r\n    console.log(props.user)\r\n    return (\r\n        <React.Fragment>\r\n            {/*<Form*/}\r\n            {/*    onSubmit={e => {*/}\r\n            {/*        e.preventDefault();*/}\r\n            {/*        if (!firstname.value.trim() || !username.value.trim() || !password.value.trim()) {*/}\r\n            {/*            return;*/}\r\n            {/*        }*/}\r\n            {/*        props.addUser({*/}\r\n            {/*            firstname:firstname.value,*/}\r\n            {/*            lastname:lastname.value,*/}\r\n            {/*            username:username.value,*/}\r\n            {/*            password:jwt.encode(\"\",password.value),*/}\r\n            {/*            position:0,*/}\r\n            {/*            active:0*/}\r\n            {/*        });*/}\r\n            {/*        firstname.value = \"\";*/}\r\n            {/*        lastname.value = \"\";*/}\r\n            {/*        username.value = \"\";*/}\r\n            {/*        password.value = \"\";*/}\r\n            {/*        position.value = \"\";*/}\r\n            {/*        active.value = \"\";*/}\r\n            {/*    }}*/}\r\n            {/*>*/}\r\n                <ModalBody>\r\n                    <Row>\r\n                        <Col md={6}>\r\n                            <FormGroup>\r\n                                <Label for=\"firstName\"><Translate name=\"firstname\"/></Label>\r\n                                <input\r\n                                    className=\"form-control\"\r\n                                    type=\"text\"\r\n                                    name=\"firstname\"\r\n                                    id=\"firstName\"\r\n                                    onChange={event => setFirstName(event.target.value)}\r\n                                    value={(user && user.firstname)?user.firstname:\"\"}\r\n                                    required\r\n                                />\r\n                            </FormGroup>\r\n                        </Col>\r\n                        <Col md={6}>\r\n                            <FormGroup>\r\n                                <Label for=\"lastName\"><Translate name=\"lastname\"/></Label>\r\n                                <input\r\n                                    className=\"form-control\"\r\n                                    type=\"text\"\r\n                                    name=\"lastname\"\r\n                                    id=\"lastName\"\r\n                                    // ref={node => (lastname = node)}\r\n                                />\r\n                            </FormGroup>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col md={6}>\r\n                            <FormGroup>\r\n                                <Label for=\"username\"><Translate name=\"username\"/></Label>\r\n                                <input\r\n                                    className=\"form-control\"\r\n                                    type=\"text\"\r\n                                    name=\"username\"\r\n                                    id=\"username\"\r\n                                    // ref={node => (username = node)}\r\n                                    required\r\n                                />\r\n                            </FormGroup>\r\n                        </Col>\r\n                        <Col md={6}>\r\n                            <FormGroup>\r\n                                <Label for=\"password\"><Translate name=\"password\"/></Label>\r\n                                <input\r\n                                    className=\"form-control\"\r\n                                    type=\"password\"\r\n                                    name=\"password\"\r\n                                    id=\"password\"\r\n                                    // ref={node => (password = node)}\r\n                                    required\r\n                                />\r\n                            </FormGroup>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col md={6}>\r\n                            <FormGroup>\r\n                                <Label for=\"position\"><Translate name=\"position\"/></Label>\r\n                                <Input type=\"select\" id=\"position\" name=\"position\" ref={node => (position = node)} >\r\n                                    {props.positions.map((item, key)=>{\r\n                                        return <option value={item.id} key={key}>{item.name}</option>\r\n                                    })}\r\n                                </Input>\r\n                            </FormGroup>\r\n                        </Col>\r\n                        <Col md={6}>\r\n                            <FormGroup>\r\n                                <Label for=\"active\"><Translate name=\"active\"/></Label>\r\n                                <Input type=\"select\" id=\"active\" name=\"active\" ref={node => (active = node)} >\r\n                                    <option value=\"0\">Այո</option>\r\n                                    <option value=\"1\">Ոչ</option>\r\n                                </Input>\r\n                            </FormGroup>\r\n                        </Col>\r\n                    </Row>\r\n\r\n                </ModalBody>\r\n                <ModalFooter>\r\n                    <Button color=\"primary\" type=\"submit\">\r\n                        <Translate name=\"add\"/>\r\n                    </Button>\r\n                </ModalFooter>\r\n            {/*</Form>*/}\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default AddContact;"]},"metadata":{},"sourceType":"module"}