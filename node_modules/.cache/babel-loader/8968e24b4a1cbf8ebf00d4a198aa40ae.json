{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\User\\\\Desktop\\\\barcode\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\barcode\\\\src\\\\components\\\\dropdown\\\\dropdown.js\";\nimport React, { useState } from \"react\";\nimport { Col, Row, FormGroup, Label, Button, ModalBody, ModalFooter, CustomInput } from \"reactstrap\";\nimport { ChevronDown, ChevronRight } from 'react-feather';\nimport Translate from \"../../Translate\"; // import MenuItem from \"./menuItem\";\n\nvar DropDownItem = function DropDownItem(props) {\n  var _useState = useState(props.checked, false),\n      _useState2 = _slicedToArray(_useState, 3),\n      checked = _useState2[0],\n      open = _useState2[1],\n      setValue = _useState2[2];\n\n  function handle() {\n    setValue(!checked);\n    console.log(checked);\n  }\n\n  return React.createElement(\"li\", {\n    className: \"list-group-item list-group-item-action no-border  bg-lighten-4\",\n    key: props.id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, React.createElement(Row, {\n    className: \"todo-list-group-item\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, React.createElement(Col, {\n    sm: \"1\",\n    md: \"1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, React.createElement(Label, {\n    onClick: function onClick() {\n      return handle();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, React.createElement(CustomInput, {\n    type: \"checkbox\",\n    checked: checked,\n    defaultChecked: checked,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }))), React.createElement(Col, {\n    sm: \"10\",\n    md: \"10\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    className: \"mb-0 font-small-3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, React.createElement(Translate, {\n    name: props.name,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }))), React.createElement(Col, {\n    sm: \"1\",\n    md: \"1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, React.createElement(ChevronUp, {\n    size: 18,\n    className: \"mr-2\",\n    onClick: function onClick() {\n      return handle('open', props.id);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }))));\n};\n\nvar DropDown = function DropDown(props) {\n  var pages = props.pages;\n\n  function handle(key) {\n    console.log(key);\n  }\n\n  return React.createElement(\"ul\", {\n    className: \"list-group icheck-task\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, Object.keys(pages).map(function (key) {\n    var checked = true;\n\n    if (pages[key].checked) {\n      checked = pages[key].checked;\n    }\n\n    return React.createElement(DropDownItem, {\n      id: key,\n      key: key,\n      name: pages[key].name,\n      checked: checked,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    });\n  }));\n};\n\nexport default DropDown;","map":{"version":3,"sources":["C:/Users/User/Desktop/barcode/src/components/dropdown/dropdown.js"],"names":["React","useState","Col","Row","FormGroup","Label","Button","ModalBody","ModalFooter","CustomInput","ChevronDown","ChevronRight","Translate","DropDownItem","props","checked","open","setValue","handle","console","log","id","name","DropDown","pages","key","Object","keys","map"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport {Col, Row, FormGroup, Label, Button, ModalBody, ModalFooter, CustomInput} from \"reactstrap\";\nimport {ChevronDown ,ChevronRight} from 'react-feather';\nimport Translate from \"../../Translate\";\n// import MenuItem from \"./menuItem\";\nconst DropDownItem = (props) => {\n    const [checked,open,setValue] = useState(props.checked,false);\n    function handle() {\n        setValue(!checked)\n        console.log(checked)\n    }\n\n    return (\n        <li className={\"list-group-item list-group-item-action no-border  bg-lighten-4\"} key={props.id}>\n            <Row className=\"todo-list-group-item\">\n                <Col sm=\"1\" md=\"1\"><Label  onClick={() => handle() }><CustomInput type=\"checkbox\"  checked = {checked} defaultChecked={checked}/></Label></Col>\n                <Col sm=\"10\" md=\"10\"><p className=\"mb-0 font-small-3\"><Translate name={props.name}/></p></Col>\n            <Col sm=\"1\" md=\"1\"><ChevronUp size={18} className=\"mr-2\" onClick={() => handle('open', props.id)}/></Col>\n            </Row>\n            {/*<ul className=\"list-group icheck-task hide\">*/}\n            {/*{Object.keys(props.pages[key].tools).map(function(id) {*/}\n            {/*    if(props.pages[key].tools[id].checked === undefined){*/}\n            {/*        props.pages[key].tools[id].checked = true*/}\n            {/*    }*/}\n            {/*    */}\n\n            {/*})}*/}\n            {/*</ul>*/}\n        </li>\n    );\n};\n\nconst DropDown = (props) => {\n    let pages = props.pages;\n\n    function handle(key) {\n        console.log(key)\n    }\n\n    return (\n        <ul className=\"list-group icheck-task\">\n            {Object.keys(pages).map(function (key) {\n                let checked = true;\n                if (pages[key].checked) {\n                    checked = pages[key].checked\n                }\n                return <DropDownItem id = {key} key={key} name = {pages[key].name} checked = {checked}/>\n\n\n\n            })}\n        </ul>\n\n\n    );\n\n};\nexport default DropDown;"]},"metadata":{},"sourceType":"module"}