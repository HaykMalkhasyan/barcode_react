{"ast":null,"code":"import { GET_PAGES_REQUEST, GET_PAGES_FAIL, GET_PAGES_SUCCESS, ADD_MENU_FAIL, ADD_MENU_REQUEST, ADD_MENU_SUCCESS, DELETE_MENU_FAIL, DELETE_MENU_REQUEST, DELETE_MENU_SUCCESS, EDIT_MENU_FAIL, EDIT_MENU_REQUEST, EDIT_MENU_SUCCESS, GET_MENU_ITEM_FAIL, GET_MENU_ITEM_REQUEST, GET_MENU_ITEM_SUCCESS, SET_MENU_MODAL, TOGGLE_MENU_MODAL } from \"./actionTypes\";\nvar cols = 'id,name,icon';\nexport var getPages = function getPages() {\n  return {\n    types: [GET_PAGES_REQUEST, GET_PAGES_FAIL, GET_PAGES_SUCCESS],\n    promise: function promise(apiClient) {\n      return apiClient.gett(\"pages/\", {\n        cols: cols\n      });\n    }\n  };\n};\nvar col = 'id, name';\nexport var menuActions = function menuActions(type, data) {\n  switch (type) {\n    case 'get':\n      return {\n        types: [GET_MENU_ITEM_REQUEST, GET_MENU_ITEM_FAIL, GET_MENU_ITEM_SUCCESS],\n        promise: function promise(apiClient) {\n          return apiClient.gett(\"pages/\".concat(data.id), {\n            col: col\n          });\n        }\n      };\n\n    case 'add':\n      var menuItem = {};\n      menuItem.name = data.name;\n      menuItem.icon = data.icon;\n      return {\n        types: [ADD_MENU_REQUEST, ADD_MENU_FAIL, ADD_MENU_SUCCESS],\n        promise: function promise(apiClient) {\n          return apiClient.postt('pages/', menuItem, {\n            col: col\n          });\n        }\n      };\n\n    case 'edit':\n      return {\n        types: [EDIT_MENU_REQUEST, EDIT_MENU_FAIL, EDIT_MENU_SUCCESS],\n        promise: function promise(apiClient) {\n          return apiClient.putt(\"pages/\".concat(data.id), JSON.stringify(data), {\n            col: col\n          });\n        }\n      };\n\n    case 'delete':\n      return {\n        types: [DELETE_MENU_REQUEST, DELETE_MENU_FAIL, DELETE_MENU_SUCCESS],\n        promise: function promise(apiClient) {\n          return apiClient.deletee(\"pages/\".concat(JSON.parse(data.id)), data, {\n            col: col\n          });\n        }\n      };\n\n    default:\n      return;\n  }\n};\nexport var toggleModal = function toggleModal(modalType, id) {\n  var obj = {\n    \"id\": id\n  };\n  return {\n    type: TOGGLE_MENU_MODAL,\n    modalType: modalType,\n    obj: obj\n  };\n};\nexport var setModalValue = function setModalValue(key, value) {\n  return {\n    type: SET_MENU_MODAL,\n    key: key,\n    value: value\n  };\n};","map":{"version":3,"sources":["C:/Users/User/Desktop/barcode/src/redux/pages/actions.js"],"names":["GET_PAGES_REQUEST","GET_PAGES_FAIL","GET_PAGES_SUCCESS","ADD_MENU_FAIL","ADD_MENU_REQUEST","ADD_MENU_SUCCESS","DELETE_MENU_FAIL","DELETE_MENU_REQUEST","DELETE_MENU_SUCCESS","EDIT_MENU_FAIL","EDIT_MENU_REQUEST","EDIT_MENU_SUCCESS","GET_MENU_ITEM_FAIL","GET_MENU_ITEM_REQUEST","GET_MENU_ITEM_SUCCESS","SET_MENU_MODAL","TOGGLE_MENU_MODAL","cols","getPages","types","promise","apiClient","gett","col","menuActions","type","data","id","menuItem","name","icon","postt","putt","JSON","stringify","deletee","parse","toggleModal","modalType","obj","setModalValue","key","value"],"mappings":"AAAA,SACIA,iBADJ,EAEIC,cAFJ,EAGIC,iBAHJ,EAIIC,aAJJ,EAKIC,gBALJ,EAMIC,gBANJ,EAOIC,gBAPJ,EAQIC,mBARJ,EASIC,mBATJ,EAUIC,cAVJ,EAWIC,iBAXJ,EAYIC,iBAZJ,EAaIC,kBAbJ,EAcIC,qBAdJ,EAeIC,qBAfJ,EAgBIC,cAhBJ,EAiBIC,iBAjBJ,QAkBO,eAlBP;AAmBA,IAAIC,IAAI,GAAI,cAAZ;AAEA,OAAO,IAAMC,QAAQ,GAAG,SAAXA,QAAW,GAAM;AAC1B,SAAO;AACHC,IAAAA,KAAK,EAAE,CAACnB,iBAAD,EAAmBC,cAAnB,EAAkCC,iBAAlC,CADJ;AAEHkB,IAAAA,OAAO,EAAE,iBAACC,SAAD;AAAA,aAAeA,SAAS,CAACC,IAAV,WAAwB;AAAEL,QAAAA,IAAI,EAAJA;AAAF,OAAxB,CAAf;AAAA;AAFN,GAAP;AAIH,CALM;AAMP,IAAIM,GAAG,GAAG,UAAV;AAEA,OAAO,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAACC,IAAD,EAAOC,IAAP,EAAgB;AAEvC,UAAQD,IAAR;AACI,SAAK,KAAL;AACI,aAAO;AACHN,QAAAA,KAAK,EAAE,CAACN,qBAAD,EAAwBD,kBAAxB,EAA4CE,qBAA5C,CADJ;AAEHM,QAAAA,OAAO,EAAE,iBAACC,SAAD;AAAA,iBAAeA,SAAS,CAACC,IAAV,iBAAwBI,IAAI,CAACC,EAA7B,GAAmC;AAACJ,YAAAA,GAAG,EAAHA;AAAD,WAAnC,CAAf;AAAA;AAFN,OAAP;;AAIJ,SAAK,KAAL;AACI,UAAIK,QAAQ,GAAG,EAAf;AACAA,MAAAA,QAAQ,CAACC,IAAT,GAAgBH,IAAI,CAACG,IAArB;AACAD,MAAAA,QAAQ,CAACE,IAAT,GAAgBJ,IAAI,CAACI,IAArB;AACA,aAAO;AACHX,QAAAA,KAAK,EAAE,CAACf,gBAAD,EAAmBD,aAAnB,EAAkCE,gBAAlC,CADJ;AAEHe,QAAAA,OAAO,EAAE,iBAAAC,SAAS;AAAA,iBAAIA,SAAS,CAACU,KAAV,CAAgB,QAAhB,EAA0BH,QAA1B,EAAoC;AAACL,YAAAA,GAAG,EAAHA;AAAD,WAApC,CAAJ;AAAA;AAFf,OAAP;;AAIJ,SAAK,MAAL;AACI,aAAO;AACHJ,QAAAA,KAAK,EAAE,CAACT,iBAAD,EAAoBD,cAApB,EAAoCE,iBAApC,CADJ;AAEHS,QAAAA,OAAO,EAAE,iBAAAC,SAAS;AAAA,iBAAIA,SAAS,CAACW,IAAV,iBAAwBN,IAAI,CAACC,EAA7B,GAAmCM,IAAI,CAACC,SAAL,CAAeR,IAAf,CAAnC,EAAyD;AAACH,YAAAA,GAAG,EAAHA;AAAD,WAAzD,CAAJ;AAAA;AAFf,OAAP;;AAIJ,SAAK,QAAL;AACI,aAAO;AACHJ,QAAAA,KAAK,EAAE,CAACZ,mBAAD,EAAsBD,gBAAtB,EAAwCE,mBAAxC,CADJ;AAEHY,QAAAA,OAAO,EAAE,iBAAAC,SAAS;AAAA,iBAAIA,SAAS,CAACc,OAAV,iBAA2BF,IAAI,CAACG,KAAL,CAAWV,IAAI,CAACC,EAAhB,CAA3B,GAAkDD,IAAlD,EAAwD;AAACH,YAAAA,GAAG,EAAHA;AAAD,WAAxD,CAAJ;AAAA;AAFf,OAAP;;AAIJ;AACI;AAzBR;AA2BH,CA7BM;AA+BP,OAAO,IAAMc,WAAW,GAAG,SAAdA,WAAc,CAACC,SAAD,EAAYX,EAAZ,EAAmB;AAC1C,MAAIY,GAAG,GAAG;AAAC,UAAMZ;AAAP,GAAV;AACA,SAAO;AACHF,IAAAA,IAAI,EAAET,iBADH;AAEHsB,IAAAA,SAAS,EAATA,SAFG;AAGHC,IAAAA,GAAG,EAAHA;AAHG,GAAP;AAMH,CARM;AAUP,OAAO,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAACC,GAAD,EAAMC,KAAN,EAAgB;AAEzC,SAAO;AACHjB,IAAAA,IAAI,EAAEV,cADH;AAEH0B,IAAAA,GAAG,EAAHA,GAFG;AAGHC,IAAAA,KAAK,EAALA;AAHG,GAAP;AAKH,CAPM","sourcesContent":["import {\r\n    GET_PAGES_REQUEST,\r\n    GET_PAGES_FAIL,\r\n    GET_PAGES_SUCCESS,\r\n    ADD_MENU_FAIL,\r\n    ADD_MENU_REQUEST,\r\n    ADD_MENU_SUCCESS,\r\n    DELETE_MENU_FAIL,\r\n    DELETE_MENU_REQUEST,\r\n    DELETE_MENU_SUCCESS,\r\n    EDIT_MENU_FAIL,\r\n    EDIT_MENU_REQUEST,\r\n    EDIT_MENU_SUCCESS,\r\n    GET_MENU_ITEM_FAIL,\r\n    GET_MENU_ITEM_REQUEST,\r\n    GET_MENU_ITEM_SUCCESS,\r\n    SET_MENU_MODAL,\r\n    TOGGLE_MENU_MODAL\r\n} from \"./actionTypes\";\r\nlet cols =  'id,name,icon';\r\n\r\nexport const getPages = () => {\r\n    return {\r\n        types: [GET_PAGES_REQUEST,GET_PAGES_FAIL,GET_PAGES_SUCCESS],\r\n        promise: (apiClient) => apiClient.gett(`pages/`,{ cols })\r\n    }\r\n}\r\nlet col = 'id, name';\r\n\r\nexport const menuActions = (type, data) => {\r\n\r\n    switch (type) {\r\n        case 'get':\r\n            return {\r\n                types: [GET_MENU_ITEM_REQUEST, GET_MENU_ITEM_FAIL, GET_MENU_ITEM_SUCCESS],\r\n                promise: (apiClient) => apiClient.gett(`pages/${data.id}`, {col})\r\n            }\r\n        case 'add':\r\n            let menuItem = {};\r\n            menuItem.name = data.name;\r\n            menuItem.icon = data.icon;\r\n            return {\r\n                types: [ADD_MENU_REQUEST, ADD_MENU_FAIL, ADD_MENU_SUCCESS],\r\n                promise: apiClient => apiClient.postt('pages/', menuItem, {col})\r\n            };\r\n        case 'edit':\r\n            return {\r\n                types: [EDIT_MENU_REQUEST, EDIT_MENU_FAIL, EDIT_MENU_SUCCESS],\r\n                promise: apiClient => apiClient.putt(`pages/${data.id}`, JSON.stringify(data), {col})\r\n            }\r\n        case 'delete':\r\n            return {\r\n                types: [DELETE_MENU_REQUEST, DELETE_MENU_FAIL, DELETE_MENU_SUCCESS],\r\n                promise: apiClient => apiClient.deletee(`pages/${JSON.parse(data.id)}`, data, {col})\r\n            }\r\n        default:\r\n            return;\r\n    }\r\n};\r\n\r\nexport const toggleModal = (modalType, id) => {\r\n    let obj = {\"id\": id}\r\n    return {\r\n        type: TOGGLE_MENU_MODAL,\r\n        modalType,\r\n        obj\r\n    }\r\n\r\n};\r\n\r\nexport const setModalValue = (key, value) => {\r\n\r\n    return {\r\n        type: SET_MENU_MODAL,\r\n        key,\r\n        value\r\n    }\r\n};"]},"metadata":{},"sourceType":"module"}