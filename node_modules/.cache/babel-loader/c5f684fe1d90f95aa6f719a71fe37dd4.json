{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\User\\\\Desktop\\\\barcode\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport { GET_GROUPS_REQUEST, GET_GROUPS_FAIL, GET_GROUPS_SUCCESS, GET_GROUP_REQUEST, GET_GROUP_FAIL, GET_GROUP_SUCCESS, ADD_GROUP_REQUEST, ADD_GROUP_FAIL, ADD_GROUP_SUCCESS, EDIT_GROUP_REQUEST, EDIT_GROUP_FAIL, EDIT_GROUP_SUCCESS, DELETE_GROUP_REQUEST, DELETE_GROUP_FAIL, DELETE_GROUP_SUCCESS, GET_SUB_GROUP_REQUEST, GET_SUB_GROUP_FAIL, GET_SUB_GROUP_SUCCESS, ADD_SUB_GROUP_REQUEST, ADD_SUB_GROUP_FAIL, ADD_SUB_GROUP_SUCCESS, EDIT_SUB_GROUP_REQUEST, EDIT_SUB_GROUP_FAIL, EDIT_SUB_GROUP_SUCCESS, DELETE_SUB_GROUP_REQUEST, DELETE_SUB_GROUP_FAIL, DELETE_SUB_GROUP_SUCCESS, SET_GROUP_MODAL, TOGGLE_GROUP_MODAL, TOGGLE_SUB_GROUP_MODAL, OPEN_MENU, SELECT_GROUP, GET_SUB_GROUPS_REQUEST, GET_SUB_GROUPS_FAIL, GET_SUB_GROUPS_SUCCESS } from \"./actionTypes\";\nimport { IsRequiredField, IsRequiredFields, PutObjectValues, RemoveObjectValues } from \"../../utility/utils\";\nimport { openMenu, addElement, editElement, deleteElement } from \"./functions\";\nvar INIT_STATE = {\n  groups: [],\n  group: {},\n  subGroups: [],\n  subGroup: {},\n  modal: {},\n  subModal: {},\n  required: [\"name\"],\n  selected: {},\n  loading: false,\n  success: false,\n  fail: false,\n  errors: {}\n};\nexport default (function () {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : INIT_STATE;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case GET_GROUPS_REQUEST:\n      return _objectSpread({}, state, {\n        loading: true,\n        success: false,\n        fail: false,\n        modal: {},\n        subModal: {},\n        errors: {}\n      });\n\n    case GET_GROUPS_FAIL:\n      return _objectSpread({}, state, {\n        loading: false,\n        success: false,\n        modal: {},\n        subModal: {},\n        fail: true\n      });\n\n    case GET_GROUPS_SUCCESS:\n      return _objectSpread({}, state, {\n        loading: false,\n        success: true,\n        fail: false,\n        modal: {},\n        subModal: {},\n        groups: action.result.results,\n        errors: {}\n      });\n\n    case GET_GROUP_REQUEST:\n      return _objectSpread({}, state, {\n        loading: true,\n        success: false,\n        fail: false,\n        errors: {}\n      });\n\n    case GET_GROUP_FAIL:\n      return _objectSpread({}, state, {\n        loading: false,\n        success: false,\n        fail: true\n      });\n\n    case GET_GROUP_SUCCESS:\n      // console.log('ggg',action.result[Object.keys(action.result)[0]])\n      return _objectSpread({}, state, {\n        loading: false,\n        success: true,\n        fail: false,\n        group: action.result,\n        errors: {}\n      });\n\n    case ADD_GROUP_REQUEST:\n      return _objectSpread({}, state, {\n        loading: true,\n        success: false,\n        fail: false,\n        errors: IsRequiredFields(state.required, state.group, state.errors)\n      });\n\n    case ADD_GROUP_FAIL:\n      return _objectSpread({}, state, {\n        loading: false,\n        success: false,\n        fail: true\n      });\n\n    case ADD_GROUP_SUCCESS:\n      return _objectSpread({}, state, {\n        loading: false,\n        success: true,\n        fail: false,\n        modal: {},\n        groups: action.result\n      });\n\n    case EDIT_GROUP_REQUEST:\n      return _objectSpread({}, state, {\n        loading: true,\n        success: false,\n        fail: false,\n        errors: IsRequiredFields(state.required, state.group, state.errors)\n      });\n\n    case EDIT_GROUP_FAIL:\n      return _objectSpread({}, state, {\n        loading: false,\n        success: false,\n        fail: true\n      });\n\n    case EDIT_GROUP_SUCCESS:\n      return _objectSpread({}, state, {\n        loading: false,\n        success: true,\n        fail: false,\n        modal: {},\n        group: {},\n        groups: PutObjectValues(state.groups, JSON.parse(action.result.data))\n      });\n\n    case DELETE_GROUP_REQUEST:\n      return _objectSpread({}, state, {\n        loading: true,\n        success: false,\n        fail: false\n      });\n\n    case DELETE_GROUP_FAIL:\n      return _objectSpread({}, state, {\n        loading: false,\n        success: false,\n        fail: true\n      });\n\n    case DELETE_GROUP_SUCCESS:\n      return _objectSpread({}, state, {\n        groups: RemoveObjectValues(state.groups, action.result['id']),\n        modal: {},\n        loading: false,\n        success: true,\n        fail: false,\n        group: {}\n      });\n\n    case GET_SUB_GROUP_REQUEST:\n      return _objectSpread({}, state, {\n        loading: true,\n        success: false,\n        fail: false,\n        errors: {}\n      });\n\n    case GET_SUB_GROUP_FAIL:\n      return _objectSpread({}, state, {\n        loading: false,\n        success: false,\n        fail: true\n      });\n\n    case GET_SUB_GROUP_SUCCESS:\n      console.log('GET_SUB_GROUP_SUCCESS', action.result);\n      return _objectSpread({}, state, {\n        loading: false,\n        success: true,\n        fail: false,\n        group: JSON.parse(action.result),\n        errors: {}\n      });\n\n    case GET_SUB_GROUPS_REQUEST:\n      return _objectSpread({}, state, {\n        loading: true,\n        success: false,\n        fail: false,\n        errors: {}\n      });\n\n    case GET_SUB_GROUPS_FAIL:\n      return _objectSpread({}, state, {\n        loading: false,\n        success: false,\n        fail: true\n      });\n\n    case GET_SUB_GROUPS_SUCCESS:\n      return _objectSpread({}, state, {\n        loading: false,\n        success: true,\n        fail: false,\n        subGroups: action.result.results,\n        errors: {}\n      });\n\n    case ADD_SUB_GROUP_REQUEST:\n      return _objectSpread({}, state, {\n        loading: true,\n        success: false,\n        fail: false,\n        errors: IsRequiredFields(state.required, state.group, state.errors)\n      });\n\n    case ADD_SUB_GROUP_FAIL:\n      return _objectSpread({}, state, {\n        loading: false,\n        success: false,\n        fail: true\n      });\n\n    case ADD_SUB_GROUP_SUCCESS:\n      var addEl = JSON.parse(action.result.data);\n      state.groups[addEl.group_id].subGroup = addElement(state.groups[addEl.group_id].subGroup, addEl);\n      return _objectSpread({}, state, {\n        loading: false,\n        success: true,\n        fail: false,\n        subModal: {},\n        groups: state.groups\n      });\n\n    case EDIT_SUB_GROUP_REQUEST:\n      return _objectSpread({}, state, {\n        loading: true,\n        success: false,\n        fail: false,\n        errors: IsRequiredFields(state.required, state.group, state.errors)\n      });\n\n    case EDIT_SUB_GROUP_FAIL:\n      return _objectSpread({}, state, {\n        loading: false,\n        success: false,\n        fail: true\n      });\n\n    case EDIT_SUB_GROUP_SUCCESS:\n      var EditEl = JSON.parse(action.result.data);\n      state.groups[EditEl.group_id].subGroup = editElement(state.groups[EditEl.group_id].subGroup, EditEl);\n      return _objectSpread({}, state, {\n        loading: false,\n        success: true,\n        fail: false,\n        subModal: {},\n        group: {},\n        groups: state.groups\n      });\n\n    case DELETE_SUB_GROUP_REQUEST:\n      return _objectSpread({}, state, {\n        loading: true,\n        success: false,\n        fail: false\n      });\n\n    case DELETE_SUB_GROUP_FAIL:\n      return _objectSpread({}, state, {\n        loading: false,\n        success: false,\n        fail: true\n      });\n\n    case DELETE_SUB_GROUP_SUCCESS:\n      var delEl = JSON.parse(action.result.data);\n      state.groups[delEl.group_id].subGroup = deleteElement(state.groups[delEl.group_id].subGroup, delEl.id);\n      return _objectSpread({}, state, {\n        loading: false,\n        success: true,\n        fail: false,\n        subModal: {},\n        group: {},\n        groups: state.groups\n      });\n\n    case SET_GROUP_MODAL:\n      state.group[action.key] = action.value;\n      return _objectSpread({}, state, {\n        errors: IsRequiredField(state.required, action, state.errors)\n      });\n\n    case TOGGLE_GROUP_MODAL:\n      state.modal[action.modalType] = !state.modal[action.modalType];\n\n      if (action.obj) {\n        if (action.modalType === \"edit\") {\n          state.group[action.obj.key] = action.obj.value;\n        } else {\n          state.group = action.obj;\n        }\n      }\n\n      return _objectSpread({}, state, {\n        errors: {},\n        subModal: {}\n      });\n\n    case TOGGLE_SUB_GROUP_MODAL:\n      state.subModal[action.modalType] = !state.subModal[action.modalType];\n      var obj = action.obj;\n\n      if (obj) {\n        if (action.modalType === \"edit\") {\n          state.group = _objectSpread({}, state.group, obj);\n        } else {\n          state.group = obj;\n        }\n      }\n\n      return _objectSpread({}, state, {\n        errors: {},\n        modal: {}\n      });\n\n    case OPEN_MENU:\n      state.groups[action.group_id].subGroup = openMenu(state.groups[action.group_id].subGroup, action.id, \"open\");\n      return _objectSpread({}, state, {\n        groups: state.groups\n      });\n\n    case SELECT_GROUP:\n      state.selected[action.group_id] = action.value;\n      return _objectSpread({}, state);\n\n    default:\n      return _objectSpread({}, state);\n  }\n});","map":{"version":3,"sources":["C:/Users/User/Desktop/barcode/src/redux/group/reducer.js"],"names":["GET_GROUPS_REQUEST","GET_GROUPS_FAIL","GET_GROUPS_SUCCESS","GET_GROUP_REQUEST","GET_GROUP_FAIL","GET_GROUP_SUCCESS","ADD_GROUP_REQUEST","ADD_GROUP_FAIL","ADD_GROUP_SUCCESS","EDIT_GROUP_REQUEST","EDIT_GROUP_FAIL","EDIT_GROUP_SUCCESS","DELETE_GROUP_REQUEST","DELETE_GROUP_FAIL","DELETE_GROUP_SUCCESS","GET_SUB_GROUP_REQUEST","GET_SUB_GROUP_FAIL","GET_SUB_GROUP_SUCCESS","ADD_SUB_GROUP_REQUEST","ADD_SUB_GROUP_FAIL","ADD_SUB_GROUP_SUCCESS","EDIT_SUB_GROUP_REQUEST","EDIT_SUB_GROUP_FAIL","EDIT_SUB_GROUP_SUCCESS","DELETE_SUB_GROUP_REQUEST","DELETE_SUB_GROUP_FAIL","DELETE_SUB_GROUP_SUCCESS","SET_GROUP_MODAL","TOGGLE_GROUP_MODAL","TOGGLE_SUB_GROUP_MODAL","OPEN_MENU","SELECT_GROUP","GET_SUB_GROUPS_REQUEST","GET_SUB_GROUPS_FAIL","GET_SUB_GROUPS_SUCCESS","IsRequiredField","IsRequiredFields","PutObjectValues","RemoveObjectValues","openMenu","addElement","editElement","deleteElement","INIT_STATE","groups","group","subGroups","subGroup","modal","subModal","required","selected","loading","success","fail","errors","state","action","type","result","results","JSON","parse","data","console","log","addEl","group_id","EditEl","delEl","id","key","value","modalType","obj"],"mappings":"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","sourcesContent":["import {\r\n    GET_GROUPS_REQUEST, GET_GROUPS_FAIL, GET_GROUPS_SUCCESS,\r\n    GET_GROUP_REQUEST, GET_GROUP_FAIL, GET_GROUP_SUCCESS,\r\n    ADD_GROUP_REQUEST, ADD_GROUP_FAIL, ADD_GROUP_SUCCESS,\r\n    EDIT_GROUP_REQUEST, EDIT_GROUP_FAIL, EDIT_GROUP_SUCCESS,\r\n    DELETE_GROUP_REQUEST, DELETE_GROUP_FAIL, DELETE_GROUP_SUCCESS,\r\n    GET_SUB_GROUP_REQUEST, GET_SUB_GROUP_FAIL, GET_SUB_GROUP_SUCCESS,\r\n    ADD_SUB_GROUP_REQUEST, ADD_SUB_GROUP_FAIL, ADD_SUB_GROUP_SUCCESS,\r\n    EDIT_SUB_GROUP_REQUEST, EDIT_SUB_GROUP_FAIL, EDIT_SUB_GROUP_SUCCESS,\r\n    DELETE_SUB_GROUP_REQUEST, DELETE_SUB_GROUP_FAIL, DELETE_SUB_GROUP_SUCCESS,\r\n    SET_GROUP_MODAL, TOGGLE_GROUP_MODAL, TOGGLE_SUB_GROUP_MODAL, OPEN_MENU,\r\n    SELECT_GROUP, GET_SUB_GROUPS_REQUEST, GET_SUB_GROUPS_FAIL, GET_SUB_GROUPS_SUCCESS\r\n} from \"./actionTypes\";\r\nimport {IsRequiredField, IsRequiredFields, PutObjectValues, RemoveObjectValues} from \"../../utility/utils\";\r\nimport {openMenu, addElement, editElement, deleteElement} from \"./functions\";\r\n\r\nconst INIT_STATE = {\r\n    groups: [],\r\n    group: {},\r\n    subGroups: [],\r\n    subGroup: {},\r\n    modal: {},\r\n    subModal: {},\r\n    required: [\"name\"],\r\n    selected: {},\r\n    loading: false,\r\n    success: false,\r\n    fail: false,\r\n    errors: {}\r\n};\r\n\r\nexport default (state = INIT_STATE, action) => {\r\n    switch (action.type) {\r\n        case GET_GROUPS_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n                success: false,\r\n                fail: false,\r\n                modal: {},\r\n                subModal: {},\r\n                errors: {},\r\n            };\r\n        case GET_GROUPS_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: false,\r\n                modal: {},\r\n                subModal: {},\r\n                fail: true,\r\n            };\r\n        case GET_GROUPS_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: true,\r\n                fail: false,\r\n                modal: {},\r\n                subModal: {},\r\n                groups: action.result.results,\r\n                errors: {},\r\n            };\r\n        case GET_GROUP_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n                success: false,\r\n                fail: false,\r\n                errors: {},\r\n            };\r\n        case GET_GROUP_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: false,\r\n                fail: true,\r\n            };\r\n        case GET_GROUP_SUCCESS:\r\n            // console.log('ggg',action.result[Object.keys(action.result)[0]])\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: true,\r\n                fail: false,\r\n                group: action.result,\r\n                errors: {},\r\n            };\r\n        case ADD_GROUP_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n                success: false,\r\n                fail: false,\r\n                errors: IsRequiredFields(state.required, state.group, state.errors)\r\n            }\r\n        case ADD_GROUP_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: false,\r\n                fail: true,\r\n\r\n            };\r\n        case ADD_GROUP_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: true,\r\n                fail: false,\r\n                modal: {},\r\n                groups: action.result\r\n            };\r\n        case EDIT_GROUP_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n                success: false,\r\n                fail: false,\r\n                errors: IsRequiredFields(state.required, state.group, state.errors)\r\n            }\r\n        case EDIT_GROUP_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: false,\r\n                fail: true,\r\n\r\n            };\r\n        case EDIT_GROUP_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: true,\r\n                fail: false,\r\n                modal: {},\r\n                group: {},\r\n                groups: PutObjectValues(state.groups, JSON.parse(action.result.data))\r\n            };\r\n        case DELETE_GROUP_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n                success: false,\r\n                fail: false,\r\n            }\r\n        case DELETE_GROUP_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: false,\r\n                fail: true,\r\n\r\n            };\r\n        case DELETE_GROUP_SUCCESS:\r\n            return {\r\n                ...state,\r\n                groups: RemoveObjectValues(state.groups, action.result['id']),\r\n                modal: {},\r\n                loading: false,\r\n                success: true,\r\n                fail: false,\r\n                group: {}\r\n            };\r\n        case GET_SUB_GROUP_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n                success: false,\r\n                fail: false,\r\n                errors: {},\r\n            };\r\n        case GET_SUB_GROUP_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: false,\r\n                fail: true,\r\n            };\r\n        case GET_SUB_GROUP_SUCCESS:\r\n            console.log('GET_SUB_GROUP_SUCCESS', action.result)\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: true,\r\n                fail: false,\r\n                group: JSON.parse(action.result),\r\n                errors: {},\r\n            };\r\n        case GET_SUB_GROUPS_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n                success: false,\r\n                fail: false,\r\n                errors: {},\r\n            };\r\n        case GET_SUB_GROUPS_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: false,\r\n                fail: true,\r\n            };\r\n        case GET_SUB_GROUPS_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: true,\r\n                fail: false,\r\n                subGroups: action.result.results,\r\n                errors: {},\r\n            };\r\n        case ADD_SUB_GROUP_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n                success: false,\r\n                fail: false,\r\n                errors: IsRequiredFields(state.required, state.group, state.errors)\r\n            }\r\n        case ADD_SUB_GROUP_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: false,\r\n                fail: true,\r\n\r\n            };\r\n        case ADD_SUB_GROUP_SUCCESS:\r\n            let addEl = JSON.parse(action.result.data);\r\n            state.groups[addEl.group_id].subGroup = addElement(state.groups[addEl.group_id].subGroup, addEl);\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: true,\r\n                fail: false,\r\n                subModal: {},\r\n                groups: state.groups\r\n            };\r\n        case EDIT_SUB_GROUP_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n                success: false,\r\n                fail: false,\r\n                errors: IsRequiredFields(state.required, state.group, state.errors)\r\n            }\r\n        case EDIT_SUB_GROUP_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: false,\r\n                fail: true,\r\n\r\n            };\r\n        case EDIT_SUB_GROUP_SUCCESS:\r\n            let EditEl = JSON.parse(action.result.data);\r\n            state.groups[EditEl.group_id].subGroup = editElement(state.groups[EditEl.group_id].subGroup, EditEl);\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: true,\r\n                fail: false,\r\n                subModal: {},\r\n                group: {},\r\n                groups: state.groups\r\n            };\r\n        case DELETE_SUB_GROUP_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n                success: false,\r\n                fail: false,\r\n            }\r\n        case DELETE_SUB_GROUP_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: false,\r\n                fail: true,\r\n\r\n            };\r\n        case DELETE_SUB_GROUP_SUCCESS:\r\n            let delEl = JSON.parse(action.result.data);\r\n            state.groups[delEl.group_id].subGroup = deleteElement(state.groups[delEl.group_id].subGroup, delEl.id);\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: true,\r\n                fail: false,\r\n                subModal: {},\r\n                group: {},\r\n                groups: state.groups\r\n            };\r\n\r\n        case SET_GROUP_MODAL:\r\n            state.group[action.key] = action.value;\r\n            return {\r\n                ...state,\r\n                errors: IsRequiredField(state.required, action, state.errors)\r\n            };\r\n        case TOGGLE_GROUP_MODAL:\r\n            state.modal[action.modalType] = !state.modal[action.modalType];\r\n            if (action.obj) {\r\n                if (action.modalType === \"edit\") {\r\n                    state.group[action.obj.key] = action.obj.value\r\n                } else {\r\n                    state.group = action.obj\r\n                }\r\n            }\r\n\r\n            return {\r\n                ...state,\r\n                errors: {},\r\n                subModal: {}\r\n            }\r\n        case TOGGLE_SUB_GROUP_MODAL:\r\n            state.subModal[action.modalType] = !state.subModal[action.modalType];\r\n            let obj = action.obj\r\n            if (obj) {\r\n                if (action.modalType === \"edit\") {\r\n                    state.group = {\r\n                        ...state.group,\r\n                        ...obj\r\n                    }\r\n                } else {\r\n                    state.group = obj\r\n                }\r\n            }\r\n\r\n            return {\r\n                ...state,\r\n                errors: {},\r\n                modal: {}\r\n            }\r\n        case OPEN_MENU:\r\n            state.groups[action.group_id].subGroup = openMenu(state.groups[action.group_id].subGroup, action.id, \"open\");\r\n            return {\r\n                ...state,\r\n                groups: state.groups\r\n            }\r\n        case SELECT_GROUP:\r\n            state.selected[action.group_id] = action.value\r\n            return {\r\n                ...state,\r\n            }\r\n        default:\r\n            return {...state};\r\n    }\r\n};\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}