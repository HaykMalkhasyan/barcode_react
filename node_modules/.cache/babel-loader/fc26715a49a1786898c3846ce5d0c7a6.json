{"ast":null,"code":"import SessionStorage from '../services/SessionStorage';\nexport var saveSession = function saveSession(_ref) {\n  var token = _ref.token,\n      user = _ref.user,\n      id = _ref.id;\n  var withUser = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n  var options = {\n    path: '/',\n    expires: new Date(Date.now())\n  };\n  SessionStorage.set('token', token, options);\n\n  if (withUser) {\n    SessionStorage.set('user', user, options);\n  }\n};\nexport var getSession = function getSession(key) {\n  SessionStorage.get(key);\n}; //\n// export const saveUserDataSession = (data) => {\n//     const now = new Date();\n//     const time = now.getTime();\n//     const expireTime = time + 1000 * 36000;\n//     now.setTime(expireTime);\n//     const rememberOptions = {\n//         path: '/',\n//         expires: new Date(now * 1000 + (30 * 24 * 3600 * 1000))\n//     };\n//     SessionStorage.set('userData', data, rememberOptions);\n// };\n//\n// export const destroySession = () => {\n//     const options = {\n//         path: '/'\n//     };\n//\n//     SessionStorage.remove('token', options);\n//     SessionStorage.remove('tokenExpiresAt', options);\n//     SessionStorage.remove('refreshToken', options);\n//     SessionStorage.remove('user', options);\n//     SessionStorage.remove('sessionId', options);\n// };\n//\n// export const destroyTokenSession = () => {\n//     const options = {\n//         path: '/'\n//     };\n//     SessionStorage.remove('token', options);\n//     SessionStorage.remove('tokenExpiresAt', options);\n//     SessionStorage.remove('refreshToken', options);\n// };","map":{"version":3,"sources":["C:/Users/User/Desktop/barcode/src/utility/session.js"],"names":["SessionStorage","saveSession","token","user","id","withUser","options","path","expires","Date","now","set","getSession","key","get"],"mappings":"AAAA,OAAOA,cAAP,MAA2B,4BAA3B;AAGA,OAAO,IAAMC,WAAW,GAAG,SAAdA,WAAc,OAAyC;AAAA,MAAvCC,KAAuC,QAAvCA,KAAuC;AAAA,MAA/BC,IAA+B,QAA/BA,IAA+B;AAAA,MAAzBC,EAAyB,QAAzBA,EAAyB;AAAA,MAApBC,QAAoB,uEAAT,IAAS;AAChE,MAAMC,OAAO,GAAG;AACZC,IAAAA,IAAI,EAAE,GADM;AAEZC,IAAAA,OAAO,EAAE,IAAIC,IAAJ,CAAUA,IAAI,CAACC,GAAL,EAAV;AAFG,GAAhB;AAIAV,EAAAA,cAAc,CAACW,GAAf,CAAmB,OAAnB,EAA4BT,KAA5B,EAAmCI,OAAnC;;AACA,MAAID,QAAJ,EAAc;AACVL,IAAAA,cAAc,CAACW,GAAf,CAAmB,MAAnB,EAA2BR,IAA3B,EAAiCG,OAAjC;AACH;AACJ,CATM;AAWP,OAAO,IAAMM,UAAU,GAAG,SAAbA,UAAa,CAACC,GAAD,EAAS;AAC/Bb,EAAAA,cAAc,CAACc,GAAf,CAAmBD,GAAnB;AACH,CAFM,C,CAGP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import SessionStorage from '../services/SessionStorage';\r\n\r\n\r\nexport const saveSession = ({token,  user, id}, withUser = true) => {\r\n    const options = {\r\n        path: '/',\r\n        expires: new Date( Date.now()),\r\n    };\r\n    SessionStorage.set('token', token, options);\r\n    if (withUser) {\r\n        SessionStorage.set('user', user, options);\r\n    }\r\n};\r\n\r\nexport const getSession = (key) => {\r\n    SessionStorage.get(key);\r\n}\r\n//\r\n// export const saveUserDataSession = (data) => {\r\n//     const now = new Date();\r\n//     const time = now.getTime();\r\n//     const expireTime = time + 1000 * 36000;\r\n//     now.setTime(expireTime);\r\n//     const rememberOptions = {\r\n//         path: '/',\r\n//         expires: new Date(now * 1000 + (30 * 24 * 3600 * 1000))\r\n//     };\r\n//     SessionStorage.set('userData', data, rememberOptions);\r\n// };\r\n//\r\n// export const destroySession = () => {\r\n//     const options = {\r\n//         path: '/'\r\n//     };\r\n//\r\n//     SessionStorage.remove('token', options);\r\n//     SessionStorage.remove('tokenExpiresAt', options);\r\n//     SessionStorage.remove('refreshToken', options);\r\n//     SessionStorage.remove('user', options);\r\n//     SessionStorage.remove('sessionId', options);\r\n// };\r\n//\r\n// export const destroyTokenSession = () => {\r\n//     const options = {\r\n//         path: '/'\r\n//     };\r\n//     SessionStorage.remove('token', options);\r\n//     SessionStorage.remove('tokenExpiresAt', options);\r\n//     SessionStorage.remove('refreshToken', options);\r\n// };\r\n\r\n"]},"metadata":{},"sourceType":"module"}