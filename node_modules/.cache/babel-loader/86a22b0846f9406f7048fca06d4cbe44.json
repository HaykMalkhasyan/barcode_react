{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\User\\\\Desktop\\\\barcode\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport { GET_LANGUAGES_REQUEST, GET_LANGUAGES_FAIL, GET_LANGUAGES_SUCCESS, GET_TRANSLATIONS_REQUEST, GET_TRANSLATIONS_FAIL, GET_TRANSLATIONS_SUCCESS, SET_ACTIVE_LANGUAGE, SET_MODAL_LANGUAGE, TOGGLE_MODAL_LANGUAGE, SET_TRANSLATIONS_REQUEST, SET_TRANSLATIONS_FAIL, SET_TRANSLATIONS_SUCCESS, SET_TRANSLATE, TOGGLE_TRANSLATION_MODAL, SET_TRANSLATION_MODAL, GET_TRANSLATION_REQUEST, GET_TRANSLATION_FAIL, GET_TRANSLATION_SUCCESS, EDIT_TRANSLATION_REQUEST, EDIT_TRANSLATION_FAIL, EDIT_TRANSLATION_SUCCESS, DELETE_TRANSLATION_REQUEST, DELETE_TRANSLATION_FAIL, DELETE_TRANSLATION_SUCCESS, GET_TRANSLATION_SIZE_REQUEST, GET_TRANSLATION_SIZE_FAIL, GET_TRANSLATION_SIZE_SUCCESS, SET_TRANSLATION_SIZE_COUNT, GET_TRANSLATION_PAGE_REQUEST, GET_TRANSLATION_PAGE_FAIL, GET_TRANSLATION_PAGE_SUCCESS, GET_TRANSLATION_LANGUAGE_REQUEST, GET_TRANSLATION_LANGUAGE_FAIL, GET_TRANSLATION_LANGUAGE_SUCCESS } from \"./actionTypes\";\nimport SessionStorage from \"../../services/SessionStorage\";\nimport { ChangeTranslation, IsRequiredField, IsRequiredFields, Push, RemoveItem, changeAddedTranslations } from '../../utility/utils'; // import {SET_GROUP_MODAL} from \"../group/actionTypes\";\n\nvar INIT_STATE = {\n  languages: [],\n  modalLang: SessionStorage.get(\"lang\") ? SessionStorage.get(\"lang\") : 'am',\n  translations: {},\n  translation: {},\n  translationsSize: [],\n  activeTranslationLang: 'am',\n  itemsCountPerPage: 10,\n  totalItemsCount: 0,\n  pageRangeDisplayed: 5,\n  activePage: 1,\n  active: SessionStorage.get(\"lang\") ? SessionStorage.get(\"lang\") : 'am',\n  changeWord: [],\n  modal: {},\n  loading: false,\n  success: false,\n  fail: false,\n  errors: {},\n  required: [\"value\"],\n  status: false\n};\nexport default (function () {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : INIT_STATE;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case 'test':\n      return _objectSpread({}, state, {\n        activeTranslationLang: action.lang\n      });\n\n    case GET_LANGUAGES_REQUEST:\n      return _objectSpread({}, state, {\n        loading: true,\n        success: false,\n        fail: false,\n        errors: {}\n      });\n\n    case GET_LANGUAGES_FAIL:\n      return _objectSpread({}, state, {\n        loading: false,\n        success: false,\n        fail: true\n      });\n\n    case GET_LANGUAGES_SUCCESS:\n      return _objectSpread({}, state, {\n        loading: false,\n        success: true,\n        fail: false,\n        languages: action.result.results,\n        errors: {}\n      });\n\n    case GET_TRANSLATIONS_REQUEST:\n      return _objectSpread({}, state, {\n        loading: true,\n        success: false,\n        fail: false,\n        errors: {}\n      });\n\n    case GET_TRANSLATIONS_FAIL:\n      return _objectSpread({}, state, {\n        loading: false,\n        success: false,\n        fail: true\n      });\n\n    case GET_TRANSLATIONS_SUCCESS:\n      var actionData = action.result.results;\n      actionData.push({\n        id: 1000,\n        key: 'for test',\n        value: 'for test',\n        language: 'am'\n      });\n      actionData.push({\n        id: 1001,\n        key: 'for test',\n        value: 'for test',\n        language: 'ru'\n      });\n      actionData.push({\n        id: 1002,\n        key: 'for test',\n        value: 'for test',\n        language: 'en'\n      });\n      return _objectSpread({}, state, {\n        translations: actionData,\n        status: !!action.result.results.length,\n        loading: false,\n        success: true,\n        fail: false,\n        errors: {}\n      });\n\n    case GET_TRANSLATION_SIZE_REQUEST:\n      return _objectSpread({}, state, {\n        loading: true,\n        success: false,\n        fail: false,\n        errors: {}\n      });\n\n    case GET_TRANSLATION_SIZE_FAIL:\n      return _objectSpread({}, state, {\n        loading: false,\n        success: false,\n        fail: true\n      });\n\n    case GET_TRANSLATION_SIZE_SUCCESS:\n      return _objectSpread({}, state, {\n        translationsSize: action.result.results,\n        totalItemsCount: action.result.count,\n        status: !!action.result.results.length,\n        loading: false,\n        success: true,\n        fail: false,\n        errors: {}\n      });\n\n    case GET_TRANSLATION_PAGE_REQUEST:\n      return _objectSpread({}, state, {\n        loading: true,\n        success: false,\n        fail: false,\n        errors: {}\n      });\n\n    case GET_TRANSLATION_PAGE_FAIL:\n      return _objectSpread({}, state, {\n        loading: false,\n        success: false,\n        fail: true\n      });\n\n    case GET_TRANSLATION_PAGE_SUCCESS:\n      return _objectSpread({}, state, {\n        activePage: action.page,\n        translationsSize: action.result.results,\n        status: !!action.result.results.length,\n        loading: false,\n        success: true,\n        fail: false,\n        errors: {}\n      });\n\n    case GET_TRANSLATION_LANGUAGE_REQUEST:\n      return _objectSpread({}, state, {\n        loading: true,\n        success: false,\n        fail: false,\n        errors: {}\n      });\n\n    case GET_TRANSLATION_LANGUAGE_FAIL:\n      return _objectSpread({}, state, {\n        loading: false,\n        success: false,\n        fail: true\n      });\n\n    case GET_TRANSLATION_LANGUAGE_SUCCESS:\n      return _objectSpread({}, state, {\n        activeTranslationLang: action.lang,\n        translationsSize: action.result.results,\n        status: !!action.result.results.length,\n        loading: false,\n        success: true,\n        fail: false,\n        errors: {}\n      });\n\n    case SET_TRANSLATION_SIZE_COUNT:\n      return _objectSpread({}, state, {\n        itemsCountPerPage: action.count\n      });\n\n    case SET_TRANSLATIONS_REQUEST:\n      return _objectSpread({}, state, {\n        loading: true,\n        success: false,\n        fail: false,\n        errors: {},\n        status: false\n      });\n\n    case SET_TRANSLATIONS_FAIL:\n      return _objectSpread({}, state, {\n        loading: false,\n        success: false,\n        fail: true,\n        status: false\n      });\n\n    case SET_TRANSLATIONS_SUCCESS:\n      return _objectSpread({}, state, {\n        loading: false,\n        success: true,\n        fail: false,\n        translations: changeAddedTranslations(state.translations, action.result),\n        errors: {},\n        status: true\n      });\n\n    case SET_TRANSLATE:\n      return _objectSpread({}, state, {\n        translations: Push(state.translations, action.result)\n      });\n\n    case SET_ACTIVE_LANGUAGE:\n      return _objectSpread({}, state, {\n        active: action.lang\n      });\n\n    case SET_MODAL_LANGUAGE:\n      return _objectSpread({}, state, {\n        modalLang: action.lang\n      });\n\n    case TOGGLE_MODAL_LANGUAGE:\n      return _objectSpread({}, state, {\n        modalLang: state.active\n      });\n\n    /*---------------------------------------------------*/\n\n    case TOGGLE_TRANSLATION_MODAL:\n      state.modal[action.modalType] = !state.modal[action.modalType];\n\n      if (action.obj) {\n        if (action.modalType === 'edit') {\n          state.translation[action.obj.key] = action.obj.value;\n        } else {\n          state.translation = action.obj;\n        }\n      }\n\n      return _objectSpread({}, state, {\n        errors: {}\n      });\n\n    case SET_TRANSLATION_MODAL:\n      state.translation[action.key] = action.value;\n      return _objectSpread({}, state, {\n        errors: IsRequiredField(state.required, action, state.errors)\n      });\n\n    case GET_TRANSLATION_REQUEST:\n      return _objectSpread({}, state, {\n        loading: true,\n        success: false,\n        fail: false,\n        errors: {}\n      });\n\n    case GET_TRANSLATION_FAIL:\n      return _objectSpread({}, state, {\n        loading: false,\n        success: false,\n        fail: true\n      });\n\n    case GET_TRANSLATION_SUCCESS:\n      return _objectSpread({}, state, {\n        loading: false,\n        success: true,\n        fail: false,\n        translation: action.result,\n        errors: {}\n      });\n\n    case EDIT_TRANSLATION_REQUEST:\n      return _objectSpread({}, state, {\n        loading: true,\n        success: false,\n        fail: false,\n        modal: {},\n        errors: IsRequiredFields(state.required, state.translation, state.errors)\n      });\n\n    case EDIT_TRANSLATION_FAIL:\n      return _objectSpread({}, state, {\n        loading: false,\n        success: false,\n        fail: true\n      });\n\n    case EDIT_TRANSLATION_SUCCESS:\n      return _objectSpread({}, state, {\n        translations: ChangeTranslation(state.translations, action.result),\n        translationsSize: ChangeTranslation(state.translationsSize, action.result),\n        loading: false,\n        success: true,\n        fail: false,\n        modal: {},\n        translation: {}\n      });\n\n    case DELETE_TRANSLATION_REQUEST:\n      return _objectSpread({}, state, {\n        loading: true,\n        success: false,\n        fail: false,\n        modal: {}\n      });\n\n    case DELETE_TRANSLATION_FAIL:\n      return _objectSpread({}, state, {\n        loading: false,\n        success: false,\n        fail: true\n      });\n\n    case DELETE_TRANSLATION_SUCCESS:\n      return _objectSpread({}, state, {\n        translations: RemoveItem(state.translations, action.result),\n        translationsSize: RemoveItem(state.translationsSize, action.result),\n        loading: false,\n        success: true,\n        fail: false,\n        modal: {},\n        datas: {}\n      });\n\n    default:\n      return _objectSpread({}, state);\n  }\n});","map":{"version":3,"sources":["C:/Users/User/Desktop/barcode/src/redux/lang/reducer.js"],"names":["GET_LANGUAGES_REQUEST","GET_LANGUAGES_FAIL","GET_LANGUAGES_SUCCESS","GET_TRANSLATIONS_REQUEST","GET_TRANSLATIONS_FAIL","GET_TRANSLATIONS_SUCCESS","SET_ACTIVE_LANGUAGE","SET_MODAL_LANGUAGE","TOGGLE_MODAL_LANGUAGE","SET_TRANSLATIONS_REQUEST","SET_TRANSLATIONS_FAIL","SET_TRANSLATIONS_SUCCESS","SET_TRANSLATE","TOGGLE_TRANSLATION_MODAL","SET_TRANSLATION_MODAL","GET_TRANSLATION_REQUEST","GET_TRANSLATION_FAIL","GET_TRANSLATION_SUCCESS","EDIT_TRANSLATION_REQUEST","EDIT_TRANSLATION_FAIL","EDIT_TRANSLATION_SUCCESS","DELETE_TRANSLATION_REQUEST","DELETE_TRANSLATION_FAIL","DELETE_TRANSLATION_SUCCESS","GET_TRANSLATION_SIZE_REQUEST","GET_TRANSLATION_SIZE_FAIL","GET_TRANSLATION_SIZE_SUCCESS","SET_TRANSLATION_SIZE_COUNT","GET_TRANSLATION_PAGE_REQUEST","GET_TRANSLATION_PAGE_FAIL","GET_TRANSLATION_PAGE_SUCCESS","GET_TRANSLATION_LANGUAGE_REQUEST","GET_TRANSLATION_LANGUAGE_FAIL","GET_TRANSLATION_LANGUAGE_SUCCESS","SessionStorage","ChangeTranslation","IsRequiredField","IsRequiredFields","Push","RemoveItem","changeAddedTranslations","INIT_STATE","languages","modalLang","get","translations","translation","translationsSize","activeTranslationLang","itemsCountPerPage","totalItemsCount","pageRangeDisplayed","activePage","active","changeWord","modal","loading","success","fail","errors","required","status","state","action","type","lang","result","results","actionData","push","id","key","value","language","length","count","page","modalType","obj","datas"],"mappings":"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","sourcesContent":["import {\r\n    GET_LANGUAGES_REQUEST,\r\n    GET_LANGUAGES_FAIL,\r\n    GET_LANGUAGES_SUCCESS,\r\n    GET_TRANSLATIONS_REQUEST,\r\n    GET_TRANSLATIONS_FAIL,\r\n    GET_TRANSLATIONS_SUCCESS,\r\n    SET_ACTIVE_LANGUAGE,\r\n    SET_MODAL_LANGUAGE,\r\n    TOGGLE_MODAL_LANGUAGE,\r\n    SET_TRANSLATIONS_REQUEST,\r\n    SET_TRANSLATIONS_FAIL,\r\n    SET_TRANSLATIONS_SUCCESS,\r\n    SET_TRANSLATE,\r\n    TOGGLE_TRANSLATION_MODAL,\r\n    SET_TRANSLATION_MODAL,\r\n    GET_TRANSLATION_REQUEST,\r\n    GET_TRANSLATION_FAIL,\r\n    GET_TRANSLATION_SUCCESS,\r\n    EDIT_TRANSLATION_REQUEST,\r\n    EDIT_TRANSLATION_FAIL,\r\n    EDIT_TRANSLATION_SUCCESS,\r\n    DELETE_TRANSLATION_REQUEST,\r\n    DELETE_TRANSLATION_FAIL,\r\n    DELETE_TRANSLATION_SUCCESS,\r\n    GET_TRANSLATION_SIZE_REQUEST,\r\n    GET_TRANSLATION_SIZE_FAIL,\r\n    GET_TRANSLATION_SIZE_SUCCESS,\r\n    SET_TRANSLATION_SIZE_COUNT,\r\n    GET_TRANSLATION_PAGE_REQUEST,\r\n    GET_TRANSLATION_PAGE_FAIL,\r\n    GET_TRANSLATION_PAGE_SUCCESS,\r\n    GET_TRANSLATION_LANGUAGE_REQUEST, GET_TRANSLATION_LANGUAGE_FAIL, GET_TRANSLATION_LANGUAGE_SUCCESS\r\n} from \"./actionTypes\";\r\nimport SessionStorage from \"../../services/SessionStorage\";\r\nimport {ChangeTranslation, IsRequiredField, IsRequiredFields, Push, RemoveItem, changeAddedTranslations} from '../../utility/utils';\r\n// import {SET_GROUP_MODAL} from \"../group/actionTypes\";\r\nconst INIT_STATE = {\r\n    languages: [],\r\n    modalLang: SessionStorage.get(\"lang\") ? SessionStorage.get(\"lang\") : 'am',\r\n    translations: {},\r\n    translation: {},\r\n    translationsSize: [],\r\n    activeTranslationLang: 'am',\r\n    itemsCountPerPage: 10,\r\n    totalItemsCount: 0,\r\n    pageRangeDisplayed: 5,\r\n    activePage: 1,\r\n    active: SessionStorage.get(\"lang\") ? SessionStorage.get(\"lang\") : 'am',\r\n    changeWord: [],\r\n    modal: {},\r\n    loading: false,\r\n    success: false,\r\n    fail: false,\r\n    errors: {},\r\n    required:[\"value\"],\r\n    status: false,\r\n};\r\n\r\n\r\nexport default (state = INIT_STATE, action) => {\r\n    switch (action.type) {\r\n        case 'test':\r\n            return {\r\n                ...state,\r\n                activeTranslationLang: action.lang\r\n            };\r\n        case GET_LANGUAGES_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n                success: false,\r\n                fail: false,\r\n                errors: {},\r\n            };\r\n        case GET_LANGUAGES_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: false,\r\n                fail: true,\r\n            };\r\n        case GET_LANGUAGES_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: true,\r\n                fail: false,\r\n                languages: action.result.results,\r\n                errors: {},\r\n            };\r\n        case GET_TRANSLATIONS_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n                success: false,\r\n                fail: false,\r\n                errors: {},\r\n            };\r\n        case GET_TRANSLATIONS_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: false,\r\n                fail: true,\r\n            };\r\n        case GET_TRANSLATIONS_SUCCESS:\r\n            let actionData = action.result.results;\r\n            actionData.push({id: 1000, key: 'for test', value: 'for test', language: 'am'})\r\n            actionData.push({id: 1001, key: 'for test', value: 'for test', language: 'ru'})\r\n            actionData.push({id: 1002, key: 'for test', value: 'for test', language: 'en'})\r\n            return {\r\n                ...state,\r\n                translations: actionData,\r\n                status: !!action.result.results.length,\r\n                loading: false,\r\n                success: true,\r\n                fail: false,\r\n                errors: {}\r\n            };\r\n        case GET_TRANSLATION_SIZE_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n                success: false,\r\n                fail: false,\r\n                errors: {},\r\n            };\r\n        case GET_TRANSLATION_SIZE_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: false,\r\n                fail: true,\r\n            };\r\n        case GET_TRANSLATION_SIZE_SUCCESS:\r\n            return {\r\n                ...state,\r\n                translationsSize: action.result.results,\r\n                totalItemsCount: action.result.count,\r\n                status: !!action.result.results.length,\r\n                loading: false,\r\n                success: true,\r\n                fail: false,\r\n                errors: {}\r\n            };\r\n            case GET_TRANSLATION_PAGE_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n                success: false,\r\n                fail: false,\r\n                errors: {},\r\n            };\r\n        case GET_TRANSLATION_PAGE_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: false,\r\n                fail: true,\r\n            };\r\n        case GET_TRANSLATION_PAGE_SUCCESS:\r\n            return {\r\n                ...state,\r\n                activePage: action.page,\r\n                translationsSize: action.result.results,\r\n                status: !!action.result.results.length,\r\n                loading: false,\r\n                success: true,\r\n                fail: false,\r\n                errors: {}\r\n            };\r\n            case GET_TRANSLATION_LANGUAGE_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n                success: false,\r\n                fail: false,\r\n                errors: {},\r\n            };\r\n        case GET_TRANSLATION_LANGUAGE_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: false,\r\n                fail: true,\r\n            };\r\n        case GET_TRANSLATION_LANGUAGE_SUCCESS:\r\n            return {\r\n                ...state,\r\n                activeTranslationLang: action.lang,\r\n                translationsSize: action.result.results,\r\n                status: !!action.result.results.length,\r\n                loading: false,\r\n                success: true,\r\n                fail: false,\r\n                errors: {}\r\n            };\r\n        case SET_TRANSLATION_SIZE_COUNT:\r\n            return {\r\n                ...state,\r\n                itemsCountPerPage: action.count\r\n            };\r\n        case SET_TRANSLATIONS_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n                success: false,\r\n                fail: false,\r\n                errors: {},\r\n                status: false\r\n            };\r\n        case SET_TRANSLATIONS_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: false,\r\n                fail: true,\r\n                status: false\r\n            };\r\n        case SET_TRANSLATIONS_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: true,\r\n                fail: false,\r\n                translations: changeAddedTranslations(state.translations, action.result),\r\n                errors: {},\r\n                status: true\r\n            }\r\n            case SET_TRANSLATE:\r\n            return {\r\n                ...state,\r\n                translations: Push(state.translations, action.result),\r\n            }\r\n        case SET_ACTIVE_LANGUAGE:\r\n            return {\r\n                ...state,\r\n                active: action.lang,\r\n            };\r\n        case SET_MODAL_LANGUAGE:\r\n            return {\r\n                ...state,\r\n                modalLang: action.lang,\r\n            };\r\n        case  TOGGLE_MODAL_LANGUAGE:\r\n            return {\r\n                ...state,\r\n                modalLang: state.active,\r\n            }\r\n            /*---------------------------------------------------*/\r\n        case TOGGLE_TRANSLATION_MODAL:\r\n            state.modal[action.modalType] = !state.modal[action.modalType];\r\n\r\n            if (action.obj) {\r\n                if (action.modalType === 'edit') {\r\n                    state.translation[action.obj.key] = action.obj.value;\r\n                } else {\r\n                    state.translation = action.obj\r\n                }\r\n            }\r\n            return {\r\n                ...state, errors: {}\r\n            };\r\n        case SET_TRANSLATION_MODAL:\r\n            state.translation[action.key] = action.value;\r\n            return {\r\n                ...state,\r\n                errors: IsRequiredField(state.required,action,state.errors)\r\n            }\r\n        case GET_TRANSLATION_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n                success: false,\r\n                fail: false,\r\n                errors: {}\r\n            }\r\n        case GET_TRANSLATION_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: false,\r\n                fail: true,\r\n            }\r\n        case GET_TRANSLATION_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: true,\r\n                fail: false,\r\n                translation: action.result,\r\n                errors: {},\r\n            }\r\n        case EDIT_TRANSLATION_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n                success: false,\r\n                fail: false,\r\n                modal: {},\r\n                errors:IsRequiredFields(state.required,state.translation,state.errors)\r\n            }\r\n        case EDIT_TRANSLATION_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: false,\r\n                fail: true,\r\n            }\r\n        case EDIT_TRANSLATION_SUCCESS:\r\n            return {\r\n                ...state,\r\n                translations: ChangeTranslation(state.translations, action.result),\r\n                translationsSize: ChangeTranslation(state.translationsSize, action.result),\r\n                loading: false,\r\n                success: true,\r\n                fail: false,\r\n                modal: {},\r\n                translation: {}\r\n            }\r\n        case DELETE_TRANSLATION_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n                success: false,\r\n                fail: false,\r\n                modal: {},\r\n            }\r\n        case DELETE_TRANSLATION_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: false,\r\n                fail: true,\r\n            }\r\n        case DELETE_TRANSLATION_SUCCESS:\r\n            return {\r\n                ...state,\r\n                translations: RemoveItem(state.translations, action.result),\r\n                translationsSize: RemoveItem(state.translationsSize, action.result),\r\n                loading: false,\r\n                success: true,\r\n                fail: false,\r\n                modal: {},\r\n                datas: {}\r\n            }\r\n        default:\r\n            return {...state};\r\n    }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}