{"ast":null,"code":"import { GET_PERMISSIONS_REQUEST, GET_PERMISSIONS_FAIL, GET_PERMISSIONS_SUCCESS, GET_TOOLS_REQUEST, GET_TOOLS_FAIL, GET_TOOLS_SUCCESS } from \"./actionTypes\";\nvar cols = 'id,name';\nexport var getPermissions = function getPermissions() {\n  return {\n    types: [GET_PERMISSIONS_REQUEST, GET_PERMISSIONS_FAIL, GET_PERMISSIONS_SUCCESS],\n    promise: function promise(apiClient) {\n      return apiClient.gett(\"permissions/\", {\n        cols: cols\n      });\n    }\n  };\n};\nexport var getTools = function getTools() {\n  return {\n    types: [GET_TOOLS_REQUEST, GET_TOOLS_FAIL, GET_TOOLS_SUCCESS],\n    promise: function promise(apiClient) {\n      return apiClient.gett(\"tools/\", {\n        cols: cols\n      });\n    }\n  };\n};","map":{"version":3,"sources":["C:/Users/User/Desktop/barcode/src/redux/permission/actions.js"],"names":["GET_PERMISSIONS_REQUEST","GET_PERMISSIONS_FAIL","GET_PERMISSIONS_SUCCESS","GET_TOOLS_REQUEST","GET_TOOLS_FAIL","GET_TOOLS_SUCCESS","cols","getPermissions","types","promise","apiClient","gett","getTools"],"mappings":"AAAA,SACIA,uBADJ,EAEIC,oBAFJ,EAGIC,uBAHJ,EAIIC,iBAJJ,EAKIC,cALJ,EAMIC,iBANJ,QAOO,eAPP;AAQA,IAAIC,IAAI,GAAI,SAAZ;AAEA,OAAO,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,GAAM;AAEhC,SAAO;AACHC,IAAAA,KAAK,EAAE,CAACR,uBAAD,EAAyBC,oBAAzB,EAA8CC,uBAA9C,CADJ;AAEHO,IAAAA,OAAO,EAAE,iBAACC,SAAD;AAAA,aAAeA,SAAS,CAACC,IAAV,iBAA+B;AAAEL,QAAAA,IAAI,EAAJA;AAAF,OAA/B,CAAf;AAAA;AAFN,GAAP;AAIH,CANM;AAQP,OAAO,IAAMM,QAAQ,GAAG,SAAXA,QAAW,GAAM;AAE1B,SAAO;AACHJ,IAAAA,KAAK,EAAE,CAACL,iBAAD,EAAoBC,cAApB,EAAoCC,iBAApC,CADJ;AAEHI,IAAAA,OAAO,EAAE,iBAACC,SAAD;AAAA,aAAeA,SAAS,CAACC,IAAV,WAAyB;AAAEL,QAAAA,IAAI,EAAJA;AAAF,OAAzB,CAAf;AAAA;AAFN,GAAP;AAIH,CANM","sourcesContent":["import {\r\n    GET_PERMISSIONS_REQUEST,\r\n    GET_PERMISSIONS_FAIL,\r\n    GET_PERMISSIONS_SUCCESS,\r\n    GET_TOOLS_REQUEST,\r\n    GET_TOOLS_FAIL,\r\n    GET_TOOLS_SUCCESS\r\n} from \"./actionTypes\";\r\nlet cols =  'id,name';\r\n\r\nexport const getPermissions = () => {\r\n\r\n    return {\r\n        types: [GET_PERMISSIONS_REQUEST,GET_PERMISSIONS_FAIL,GET_PERMISSIONS_SUCCESS],\r\n        promise: (apiClient) => apiClient.gett(`permissions/`, { cols })\r\n    }\r\n}\r\n\r\nexport const getTools = () => {\r\n\r\n    return {\r\n        types: [GET_TOOLS_REQUEST, GET_TOOLS_FAIL, GET_TOOLS_SUCCESS],\r\n        promise: (apiClient) => apiClient.gett(`tools/`, { cols })\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}