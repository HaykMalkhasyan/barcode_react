{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\User\\\\Desktop\\\\barcode\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\barcode\\\\src\\\\containers\\\\pages\\\\group\\\\groupTable.js\";\nimport React, { useState } from 'react';\nimport { Card, CardBody, Col, Collapse, ListGroup, ListGroupItem, Row } from 'reactstrap';\nimport SubGroupMenu from \"./subGroupMenu\";\nimport { ChevronDown, ChevronRight } from \"react-feather\";\nimport PlusButton from \"../../../components/buttons/plusButton\";\nimport EditButton from \"../../../components/buttons/editButton\";\nimport DeleteButton from \"../../../components/buttons/deleteButton\";\n\nvar GroupTableItem = function GroupTableItem(props) {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isOpen = _useState2[0],\n      setIsOpen = _useState2[1];\n\n  var toggle = function toggle() {\n    return setIsOpen(!isOpen);\n  };\n\n  function Chevron(props) {\n    if (props.data && props.data.length > 0) {\n      if (!isOpen) {\n        return React.createElement(ChevronRight, {\n          size: 25,\n          className: \"mr-2\",\n          onClick: toggle,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 25\n          },\n          __self: this\n        });\n      }\n\n      return React.createElement(ChevronDown, {\n        size: 25,\n        className: \"mr-2\",\n        onClick: toggle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      });\n    }\n\n    return React.createElement(\"span\", {\n      className: \"mr-4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    });\n  }\n\n  return React.createElement(ListGroup, {\n    className: \"py-0 my-1 \",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, React.createElement(ListGroupItem, {\n    active: true,\n    className: \"rounded-0 justify-content-between\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, React.createElement(Row, {\n    className: \"todo-list-group-item\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, React.createElement(Col, {\n    sm: \"11\",\n    md: 10,\n    className: \"text-left\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, React.createElement(Chevron, {\n    data: props.subGroups,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }), props.data.name\n  /*[props.lang.active]*/\n  ), React.createElement(Col, {\n    sm: \"\",\n    md: 2,\n    className: \"text-right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, React.createElement(PlusButton, {\n    perm: props.perm,\n    color: \"#fff\",\n    onClick: function onClick() {\n      return props.toggleSubModal('add', 0, props.data.id);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }), React.createElement(EditButton, {\n    perm: props.perm,\n    onClick: function onClick() {\n      props.toggleModal('edit', props.data.id);\n      props.groupActions(\"get\", props.data);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }), React.createElement(DeleteButton, {\n    perm: props.perm,\n    onClick: function onClick() {\n      return props.toggleModal('delete', props.data.id);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  })))), React.createElement(Collapse, {\n    isOpen: isOpen,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, React.createElement(Card, {\n    className: \"my-1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, React.createElement(CardBody, {\n    className: \"py-0\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, React.createElement(SubGroupMenu, {\n    data: props.data.subGroup,\n    toggleSubModal: props.toggleSubModal,\n    handleOpen: props.handleOpen,\n    selectGroup: props.selectGroup,\n    actions: props.subGroupActions,\n    group_id: props.data.id,\n    selected: props.selected,\n    lang: props.lang,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  })))));\n};\n\nvar GroupTable = function GroupTable(props) {\n  if (Object.keys(props.groups).length > 0) {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, props.groups.map(function (key) {\n      var sGroup = [];\n      props.subGroups.forEach(function (item) {\n        return item.group_id ? item.group_id.id === key.id ? sGroup.push(item) : null : null;\n      });\n      console.log('new array', sGroup);\n      return React.createElement(GroupTableItem, {\n        key: key.id,\n        data: key,\n        subGroups: sGroup,\n        toggleModal: props.toggleModal,\n        toggleSubModal: props.toggleSubModal,\n        perm: props.perm,\n        handleOpen: props.handleOpen,\n        selectGroup: props.selectGroup,\n        selected: props.selected,\n        groupActions: props.groupActions,\n        subGroupActions: props.subGroupActions,\n        lang: props.lang,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      });\n    }));\n  } else {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    });\n  }\n};\n\nexport default GroupTable;","map":{"version":3,"sources":["C:/Users/User/Desktop/barcode/src/containers/pages/group/groupTable.js"],"names":["React","useState","Card","CardBody","Col","Collapse","ListGroup","ListGroupItem","Row","SubGroupMenu","ChevronDown","ChevronRight","PlusButton","EditButton","DeleteButton","GroupTableItem","props","isOpen","setIsOpen","toggle","Chevron","data","length","subGroups","name","perm","toggleSubModal","id","toggleModal","groupActions","subGroup","handleOpen","selectGroup","subGroupActions","selected","lang","GroupTable","Object","keys","groups","map","key","sGroup","forEach","item","group_id","push","console","log"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,SACIC,IADJ,EAEIC,QAFJ,EAGIC,GAHJ,EAIIC,QAJJ,EAKIC,SALJ,EAMIC,aANJ,EAOIC,GAPJ,QAQO,YARP;AASA,OAAOC,YAAP,MAAyB,gBAAzB;AAEA,SAAQC,WAAR,EAAqBC,YAArB,QAAwC,eAAxC;AACA,OAAOC,UAAP,MAAuB,wCAAvB;AACA,OAAOC,UAAP,MAAuB,wCAAvB;AACA,OAAOC,YAAP,MAAyB,0CAAzB;;AAEA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAAAC,KAAK,EAAI;AAAA,kBACAf,QAAQ,CAAC,KAAD,CADR;AAAA;AAAA,MACrBgB,MADqB;AAAA,MACbC,SADa;;AAE5B,MAAMC,MAAM,GAAG,SAATA,MAAS;AAAA,WAAMD,SAAS,CAAC,CAACD,MAAF,CAAf;AAAA,GAAf;;AAEA,WAASG,OAAT,CAAiBJ,KAAjB,EAAwB;AACpB,QAAIA,KAAK,CAACK,IAAN,IAAcL,KAAK,CAACK,IAAN,CAAWC,MAAX,GAAoB,CAAtC,EAAyC;AACrC,UAAI,CAACL,MAAL,EAAa;AACT,eAAO,oBAAC,YAAD;AAAc,UAAA,IAAI,EAAE,EAApB;AAAwB,UAAA,SAAS,EAAC,MAAlC;AAAyC,UAAA,OAAO,EAAEE,MAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACH;;AACD,aAAO,oBAAC,WAAD;AAAa,QAAA,IAAI,EAAE,EAAnB;AAAuB,QAAA,SAAS,EAAC,MAAjC;AAAwC,QAAA,OAAO,EAAEA,MAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACH;;AACD,WAAO;AAAM,MAAA,SAAS,EAAC,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACH;;AAED,SACI,oBAAC,SAAD;AAAW,IAAA,SAAS,EAAC,YAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,aAAD;AAAe,IAAA,MAAM,MAArB;AAAsB,IAAA,SAAS,EAAC,mCAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,GAAD;AAAK,IAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,GAAD;AAAK,IAAA,EAAE,EAAC,IAAR;AAAa,IAAA,EAAE,EAAE,EAAjB;AAAqB,IAAA,SAAS,EAAC,WAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,OAAD;AAAS,IAAA,IAAI,EAAEH,KAAK,CAACO,SAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEKP,KAAK,CAACK,IAAN,CAAWG;AAAI;AAFpB,GADJ,EAKI,oBAAC,GAAD;AAAK,IAAA,EAAE,EAAC,EAAR;AAAW,IAAA,EAAE,EAAE,CAAf;AAAkB,IAAA,SAAS,EAAC,YAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,UAAD;AAAY,IAAA,IAAI,EAAER,KAAK,CAACS,IAAxB;AAA8B,IAAA,KAAK,EAAC,MAApC;AACY,IAAA,OAAO,EAAE;AAAA,aAAMT,KAAK,CAACU,cAAN,CAAqB,KAArB,EAA4B,CAA5B,EAA+BV,KAAK,CAACK,IAAN,CAAWM,EAA1C,CAAN;AAAA,KADrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAGI,oBAAC,UAAD;AAAY,IAAA,IAAI,EAAEX,KAAK,CAACS,IAAxB;AAA8B,IAAA,OAAO,EAAE,mBAAM;AACzCT,MAAAA,KAAK,CAACY,WAAN,CAAkB,MAAlB,EAA0BZ,KAAK,CAACK,IAAN,CAAWM,EAArC;AACAX,MAAAA,KAAK,CAACa,YAAN,CAAmB,KAAnB,EAA0Bb,KAAK,CAACK,IAAhC;AACH,KAHD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,EAOI,oBAAC,YAAD;AAAc,IAAA,IAAI,EAAEL,KAAK,CAACS,IAA1B;AAAgC,IAAA,OAAO,EAAE;AAAA,aAAMT,KAAK,CAACY,WAAN,CAAkB,QAAlB,EAA4BZ,KAAK,CAACK,IAAN,CAAWM,EAAvC,CAAN;AAAA,KAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPJ,CALJ,CADJ,CADJ,EAkBI,oBAAC,QAAD;AAAU,IAAA,MAAM,EAAEV,MAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAM,IAAA,SAAS,EAAC,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,QAAD;AAAU,IAAA,SAAS,EAAC,MAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,YAAD;AACI,IAAA,IAAI,EAAED,KAAK,CAACK,IAAN,CAAWS,QADrB;AAEI,IAAA,cAAc,EAAEd,KAAK,CAACU,cAF1B;AAGI,IAAA,UAAU,EAAEV,KAAK,CAACe,UAHtB;AAII,IAAA,WAAW,EAAEf,KAAK,CAACgB,WAJvB;AAKI,IAAA,OAAO,EAAEhB,KAAK,CAACiB,eALnB;AAMI,IAAA,QAAQ,EAAEjB,KAAK,CAACK,IAAN,CAAWM,EANzB;AAOI,IAAA,QAAQ,EAAEX,KAAK,CAACkB,QAPpB;AAQI,IAAA,IAAI,EAAElB,KAAK,CAACmB,IARhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,CADJ,CAlBJ,CADJ;AAwCH,CAtDD;;AAuDA,IAAMC,UAAU,GAAG,SAAbA,UAAa,CAAApB,KAAK,EAAI;AACxB,MAAIqB,MAAM,CAACC,IAAP,CAAYtB,KAAK,CAACuB,MAAlB,EAA0BjB,MAA1B,GAAmC,CAAvC,EAA0C;AACtC,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAECN,KAAK,CAACuB,MAAN,CAAaC,GAAb,CACI,UAAAC,GAAG,EAAI;AACH,UAAIC,MAAM,GAAG,EAAb;AACA1B,MAAAA,KAAK,CAACO,SAAN,CAAgBoB,OAAhB,CACI,UAAAC,IAAI;AAAA,eAAIA,IAAI,CAACC,QAAL,GACJD,IAAI,CAACC,QAAL,CAAclB,EAAd,KAAqBc,GAAG,CAACd,EAAzB,GACIe,MAAM,CAACI,IAAP,CAAYF,IAAZ,CADJ,GAGI,IAJA,GAMJ,IANA;AAAA,OADR;AASAG,MAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBN,MAAzB;AACA,aACI,oBAAC,cAAD;AACI,QAAA,GAAG,EAAED,GAAG,CAACd,EADb;AAEI,QAAA,IAAI,EAAEc,GAFV;AAGI,QAAA,SAAS,EAAEC,MAHf;AAII,QAAA,WAAW,EAAE1B,KAAK,CAACY,WAJvB;AAKI,QAAA,cAAc,EAAEZ,KAAK,CAACU,cAL1B;AAMI,QAAA,IAAI,EAAEV,KAAK,CAACS,IANhB;AAOI,QAAA,UAAU,EAAET,KAAK,CAACe,UAPtB;AAQI,QAAA,WAAW,EAAEf,KAAK,CAACgB,WARvB;AASI,QAAA,QAAQ,EAAEhB,KAAK,CAACkB,QATpB;AAUI,QAAA,YAAY,EAAElB,KAAK,CAACa,YAVxB;AAWI,QAAA,eAAe,EAAEb,KAAK,CAACiB,eAX3B;AAYI,QAAA,IAAI,EAAEjB,KAAK,CAACmB,IAZhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ;AAgBH,KA7BL,CAFD,CAAP;AAoCH,GArCD,MAqCO;AACH,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACH;AAEJ,CA1CD;;AA4CA,eAAeC,UAAf","sourcesContent":["import React, {useState} from 'react';\r\nimport {\r\n    Card,\r\n    CardBody,\r\n    Col,\r\n    Collapse,\r\n    ListGroup,\r\n    ListGroupItem,\r\n    Row\r\n} from 'reactstrap';\r\nimport SubGroupMenu from \"./subGroupMenu\"\r\n\r\nimport {ChevronDown, ChevronRight} from \"react-feather\";\r\nimport PlusButton from \"../../../components/buttons/plusButton\";\r\nimport EditButton from \"../../../components/buttons/editButton\";\r\nimport DeleteButton from \"../../../components/buttons/deleteButton\";\r\n\r\nconst GroupTableItem = props => {\r\n    const [isOpen, setIsOpen] = useState(false);\r\n    const toggle = () => setIsOpen(!isOpen);\r\n\r\n    function Chevron(props) {\r\n        if (props.data && props.data.length > 0) {\r\n            if (!isOpen) {\r\n                return <ChevronRight size={25} className=\"mr-2\" onClick={toggle}/>\r\n            }\r\n            return <ChevronDown size={25} className=\"mr-2\" onClick={toggle}/>\r\n        }\r\n        return <span className=\"mr-4\"></span>\r\n    }\r\n\r\n    return (\r\n        <ListGroup className=\"py-0 my-1 \">\r\n            <ListGroupItem active className=\"rounded-0 justify-content-between\">\r\n                <Row className=\"todo-list-group-item\">\r\n                    <Col sm=\"11\" md={10} className='text-left'>\r\n                        <Chevron data={props.subGroups}/>\r\n                        {props.data.name/*[props.lang.active]*/}\r\n                    </Col>\r\n                    <Col sm=\"\" md={2} className='text-right'>\r\n                        <PlusButton perm={props.perm} color=\"#fff\"\r\n                                    onClick={() => props.toggleSubModal('add', 0, props.data.id)}/>\r\n                        <EditButton perm={props.perm} onClick={() => {\r\n                            props.toggleModal('edit', props.data.id);\r\n                            props.groupActions(\"get\", props.data)\r\n                        }}/>\r\n                        <DeleteButton perm={props.perm} onClick={() => props.toggleModal('delete', props.data.id)}/>\r\n                    </Col>\r\n                </Row>\r\n            </ListGroupItem>\r\n            <Collapse isOpen={isOpen}>\r\n                <Card className=\"my-1\">\r\n                    <CardBody className=\"py-0\">\r\n                        <SubGroupMenu\r\n                            data={props.data.subGroup}\r\n                            toggleSubModal={props.toggleSubModal}\r\n                            handleOpen={props.handleOpen}\r\n                            selectGroup={props.selectGroup}\r\n                            actions={props.subGroupActions}\r\n                            group_id={props.data.id}\r\n                            selected={props.selected}\r\n                            lang={props.lang}\r\n                        />\r\n\r\n                    </CardBody>\r\n                </Card>\r\n            </Collapse>\r\n        </ListGroup>\r\n\r\n    )\r\n\r\n}\r\nconst GroupTable = props => {\r\n    if (Object.keys(props.groups).length > 0) {\r\n        return <div>\r\n            {\r\n                props.groups.map(\r\n                    key => {\r\n                        let sGroup = [];\r\n                        props.subGroups.forEach(\r\n                            item => item.group_id ?\r\n                                item.group_id.id === key.id ?\r\n                                    sGroup.push(item)\r\n                                    :\r\n                                    null\r\n                                :\r\n                                null\r\n                        )\r\n                        console.log('new array', sGroup)\r\n                        return (\r\n                            <GroupTableItem\r\n                                key={key.id}\r\n                                data={key}\r\n                                subGroups={sGroup}\r\n                                toggleModal={props.toggleModal}\r\n                                toggleSubModal={props.toggleSubModal}\r\n                                perm={props.perm}\r\n                                handleOpen={props.handleOpen}\r\n                                selectGroup={props.selectGroup}\r\n                                selected={props.selected}\r\n                                groupActions={props.groupActions}\r\n                                subGroupActions={props.subGroupActions}\r\n                                lang={props.lang}\r\n                            />\r\n                        )\r\n                    }\r\n                )\r\n            }\r\n\r\n        </div>\r\n    } else {\r\n        return <div></div>\r\n    }\r\n\r\n}\r\n\r\nexport default GroupTable;"]},"metadata":{},"sourceType":"module"}