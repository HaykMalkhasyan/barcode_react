{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\User\\\\Desktop\\\\barcode\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\barcode\\\\src\\\\containers\\\\pages\\\\products\\\\groupModal.js\";\nimport React, { Component, useState } from \"react\";\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter, Input, Row, Col } from \"reactstrap\";\nimport GroupTabContent from \"../group/subGroupMenu\";\nimport Translate from \"../../../Translate\";\nimport { List } from \"react-feather\";\n\nfunction ModalExample(props) {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      modal = _useState2[0],\n      setModal = _useState2[1];\n\n  var toggle = function toggle() {\n    setModal(!modal);\n  };\n\n  var toggle1 = function toggle1() {\n    props.setModalValues(\"groups\", props.selected);\n  };\n\n  console.log(props);\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, React.createElement(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, React.createElement(Col, {\n    sm: \"11\",\n    className: \"mr-0\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, React.createElement(Input, {\n    type: \"text\",\n    readonly: \"readonly\",\n    value: props.product.groups && props.product.groups[props.id] ? props.product.groups[props.id].name : \"\",\n    placeholder: props.name,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  })), React.createElement(Col, {\n    sm: \"1\",\n    className: \"ml-0\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, React.createElement(Button, {\n    className: \"gradient-crystal-clear\",\n    onClick: toggle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, React.createElement(List, {\n    size: 16,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  })), \" \")), React.createElement(Modal, {\n    isOpen: modal,\n    toggle: toggle,\n    className: props.className,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, React.createElement(ModalHeader, {\n    toggle: toggle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, props.name), React.createElement(ModalBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, React.createElement(GroupTabContent, {\n    data: props.data,\n    lang: props.lang,\n    handleOpen: props.handleOpen,\n    selectGroup: props.selectGroup,\n    selected: props.selected,\n    page: \"products\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  })), React.createElement(ModalFooter, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, React.createElement(Button, {\n    color: \"primary\",\n    onClick: function onClick() {\n      toggle();\n      toggle1();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, React.createElement(Translate, {\n    name: \"select\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  })))));\n}\n\nexport default ModalExample;","map":{"version":3,"sources":["C:/Users/User/Desktop/barcode/src/containers/pages/products/groupModal.js"],"names":["React","Component","useState","Button","Modal","ModalHeader","ModalBody","ModalFooter","Input","Row","Col","GroupTabContent","Translate","List","ModalExample","props","modal","setModal","toggle","toggle1","setModalValues","selected","console","log","product","groups","id","name","className","data","lang","handleOpen","selectGroup"],"mappings":"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","sourcesContent":["import React, {Component, useState} from \"react\";\r\nimport {Button, Modal, ModalHeader, ModalBody, ModalFooter, Input, Row, Col} from \"reactstrap\";\r\nimport GroupTabContent from \"../group/subGroupMenu\";\r\nimport Translate from \"../../../Translate\";\r\nimport {List} from \"react-feather\"\r\n\r\nfunction ModalExample(props) {\r\n    const [modal, setModal] = useState(false)\r\n\r\n    const toggle = () => {\r\n        setModal(!modal);\r\n    }\r\n    const toggle1 = () => {\r\n        props.setModalValues(\"groups\", props.selected)\r\n    }\r\n    console.log(props)\r\n    return (\r\n        <div>\r\n            <Row>\r\n                <Col sm=\"11\" className=\"mr-0\">\r\n                    <Input type=\"text\" readonly=\"readonly\"\r\n                           value={props.product.groups && props.product.groups[props.id] ? props.product.groups[props.id].name : \"\"}\r\n                           placeholder={props.name}/>\r\n                </Col>\r\n                <Col sm=\"1\" className=\"ml-0\">\r\n                    <Button className=\"gradient-crystal-clear\" onClick={toggle}><List size={16}/></Button>{\" \"}\r\n                </Col>\r\n\r\n            </Row>\r\n\r\n\r\n            <Modal\r\n                isOpen={modal}\r\n                toggle={toggle}\r\n                className={props.className}\r\n            >\r\n                <ModalHeader toggle={toggle}>{props.name}</ModalHeader>\r\n                <ModalBody>\r\n                    <GroupTabContent\r\n                        data={props.data}\r\n                        lang={props.lang}\r\n                        handleOpen={props.handleOpen}\r\n                        selectGroup={props.selectGroup}\r\n                        selected={props.selected}\r\n                        page=\"products\"\r\n                    />\r\n                </ModalBody>\r\n                <ModalFooter>\r\n                    <Button color=\"primary\" onClick={()=>{toggle();toggle1()}}>\r\n                        <Translate name=\"select\"/>\r\n                    </Button>\r\n                </ModalFooter>\r\n            </Modal>\r\n\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default ModalExample;"]},"metadata":{},"sourceType":"module"}