{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\User\\\\Desktop\\\\barcode\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\User\\\\Desktop\\\\barcode\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\User\\\\Desktop\\\\barcode\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\User\\\\Desktop\\\\barcode\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\User\\\\Desktop\\\\barcode\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\barcode\\\\src\\\\containers\\\\users\\\\userModal.js\";\nimport React, { Component } from \"react\";\nimport { Col, Row, Form, FormGroup, Label, Button, ModalBody, ModalFooter, Input } from \"reactstrap\";\nimport Translate from \"../../Translate\";\nimport jwt from \"jwt-simple\"; // const AddContact = ({ id, props }) => {\n\nvar AddContact =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(AddContact, _Component);\n\n  function AddContact() {\n    _classCallCheck(this, AddContact);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(AddContact).apply(this, arguments));\n  }\n\n  _createClass(AddContact, [{\n    key: \"handleInputChange\",\n    // let firstname, lastname, username, password, position, active;\n    // let user = props.user[0]\n    // if(user){\n    //     firstname = user.firstname;\n    //     lastname = user.lastname;\n    // }\n    value: function handleInputChange(key, value) {\n      console.log(key, value);\n      this.setState({\n        key: value\n      });\n    } // console.log(props.user)\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      console.log(this.props);\n      var user = this.props.user;\n      return React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }, React.createElement(ModalBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }, React.createElement(Col, {\n        md: 6,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }, React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"firstName\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, React.createElement(Translate, {\n        name: \"firstname\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      })), React.createElement(\"input\", {\n        className: \"form-control\",\n        type: \"text\",\n        name: \"firstname\",\n        id: \"firstName\",\n        onChange: function onChange(event) {\n          return _this.handleInputChange(\"firstname\", event.target.value);\n        } // ref={node => (firstname = node)}\n        ,\n        value: user.firstname,\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }))), React.createElement(Col, {\n        md: 6,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"lastName\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, React.createElement(Translate, {\n        name: \"lastname\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      })), React.createElement(\"input\", {\n        className: \"form-control\",\n        type: \"text\",\n        name: \"lastname\",\n        id: \"lastName\",\n        onChange: function onChange(event) {\n          return _this.handleInputChange(\"lastname\", event.target.value);\n        },\n        value: user.lastname // ref={node => (lastname = node)}\n        ,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      })))), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, React.createElement(Col, {\n        md: 6,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"username\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, React.createElement(Translate, {\n        name: \"username\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      })), React.createElement(\"input\", {\n        className: \"form-control\",\n        type: \"text\",\n        name: \"username\",\n        id: \"username\",\n        onChange: function onChange(event) {\n          return _this.handleInputChange(\"username\", event.target.value);\n        },\n        value: user.username // ref={node => (username = node)}\n        ,\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }))), React.createElement(Col, {\n        md: 6,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"password\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, React.createElement(Translate, {\n        name: \"password\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      })), React.createElement(\"input\", {\n        className: \"form-control\",\n        type: \"password\",\n        name: \"password\",\n        id: \"password\",\n        onChange: function onChange(event) {\n          return _this.handleInputChange(\"username\", event.target.value);\n        },\n        value: user.password // ref={node => (password = node)}\n        ,\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      })))), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, React.createElement(Col, {\n        md: 6,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"position\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, React.createElement(Translate, {\n        name: \"position\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      })), React.createElement(Input, {\n        type: \"select\",\n        id: \"position\",\n        name: \"position\",\n        onChange: function onChange(event) {\n          return _this.handleInputChange(\"position\", event.target.value);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, this.props.positions.map(function (item, key) {\n        return React.createElement(\"option\", {\n          value: item.id,\n          key: key,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 98\n          },\n          __self: this\n        }, item.name);\n      })))), React.createElement(Col, {\n        md: 6,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"active\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, React.createElement(Translate, {\n        name: \"active\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      })), React.createElement(Input, {\n        type: \"select\",\n        id: \"active\",\n        name: \"active\",\n        onChange: function onChange(event) {\n          return _this.handleInputChange(\"active\", event.target.value);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        value: \"0\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, \"\\u0531\\u0575\\u0578\"), React.createElement(\"option\", {\n        value: \"1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, \"\\u0548\\u0579\")))))), React.createElement(ModalFooter, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, React.createElement(Button, {\n        color: \"primary\",\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }, React.createElement(Translate, {\n        name: \"add\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return AddContact;\n}(Component);\n\n;\nexport default AddContact;","map":{"version":3,"sources":["C:/Users/User/Desktop/barcode/src/containers/users/userModal.js"],"names":["React","Component","Col","Row","Form","FormGroup","Label","Button","ModalBody","ModalFooter","Input","Translate","jwt","AddContact","key","value","console","log","setState","props","user","event","handleInputChange","target","firstname","lastname","username","password","positions","map","item","id","name"],"mappings":"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","sourcesContent":["import React,{Component} from \"react\";\r\nimport {Col, Row, Form, FormGroup, Label, Button, ModalBody, ModalFooter, Input} from \"reactstrap\";\r\nimport Translate from \"../../Translate\";\r\nimport jwt from \"jwt-simple\";\r\n\r\n// const AddContact = ({ id, props }) => {\r\n\r\nclass AddContact extends Component {\r\n\r\n\r\n    // let firstname, lastname, username, password, position, active;\r\n    // let user = props.user[0]\r\n    // if(user){\r\n    //     firstname = user.firstname;\r\n    //     lastname = user.lastname;\r\n    // }\r\n    handleInputChange(key, value) {\r\n        console.log(key, value)\r\n        this.setState({key:value})\r\n    }\r\n\r\n    // console.log(props.user)\r\n    render() {\r\n        console.log(this.props)\r\n        let user = this.props.user\r\n        return (\r\n            <React.Fragment>\r\n                <ModalBody>\r\n                    <Row>\r\n                        <Col md={6}>\r\n                            <FormGroup>\r\n                                <Label for=\"firstName\"><Translate name=\"firstname\"/></Label>\r\n                                <input\r\n                                    className=\"form-control\"\r\n                                    type=\"text\"\r\n                                    name=\"firstname\"\r\n                                    id=\"firstName\"\r\n                                    onChange={event => this.handleInputChange(\"firstname\", event.target.value)}\r\n                                    // ref={node => (firstname = node)}\r\n                                    value={user.firstname}\r\n                                    required\r\n                                />\r\n                            </FormGroup>\r\n                        </Col>\r\n                        <Col md={6}>\r\n                            <FormGroup>\r\n                                <Label for=\"lastName\"><Translate name=\"lastname\"/></Label>\r\n                                <input\r\n                                    className=\"form-control\"\r\n                                    type=\"text\"\r\n                                    name=\"lastname\"\r\n                                    id=\"lastName\"\r\n                                    onChange={event => this.handleInputChange(\"lastname\", event.target.value)}\r\n                                    value={user.lastname}\r\n                                    // ref={node => (lastname = node)}\r\n                                />\r\n                            </FormGroup>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col md={6}>\r\n                            <FormGroup>\r\n                                <Label for=\"username\"><Translate name=\"username\"/></Label>\r\n                                <input\r\n                                    className=\"form-control\"\r\n                                    type=\"text\"\r\n                                    name=\"username\"\r\n                                    id=\"username\"\r\n                                    onChange={event => this.handleInputChange(\"username\", event.target.value)}\r\n                                    value={user.username}\r\n                                    // ref={node => (username = node)}\r\n                                    required\r\n                                />\r\n                            </FormGroup>\r\n                        </Col>\r\n                        <Col md={6}>\r\n                            <FormGroup>\r\n                                <Label for=\"password\"><Translate name=\"password\"/></Label>\r\n                                <input\r\n                                    className=\"form-control\"\r\n                                    type=\"password\"\r\n                                    name=\"password\"\r\n                                    id=\"password\"\r\n                                    onChange={event => this.handleInputChange(\"username\", event.target.value)}\r\n                                    value={user.password}\r\n                                    // ref={node => (password = node)}\r\n                                    required\r\n                                />\r\n                            </FormGroup>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col md={6}>\r\n                            <FormGroup>\r\n                                <Label for=\"position\"><Translate name=\"position\"/></Label>\r\n                                <Input type=\"select\" id=\"position\" name=\"position\" onChange={event => this.handleInputChange(\"position\", event.target.value)}>\r\n                                    {this.props.positions.map((item, key) => {\r\n                                        return <option value={item.id} key={key}>{item.name}</option>\r\n                                    })}\r\n                                </Input>\r\n                            </FormGroup>\r\n                        </Col>\r\n                        <Col md={6}>\r\n                            <FormGroup>\r\n                                <Label for=\"active\"><Translate name=\"active\"/></Label>\r\n                                <Input type=\"select\" id=\"active\" name=\"active\" onChange={event => this.handleInputChange(\"active\", event.target.value)}>\r\n                                    <option value=\"0\">Այո</option>\r\n                                    <option value=\"1\">Ոչ</option>\r\n                                </Input>\r\n                            </FormGroup>\r\n                        </Col>\r\n                    </Row>\r\n\r\n                </ModalBody>\r\n                <ModalFooter>\r\n                    <Button color=\"primary\" type=\"submit\">\r\n                        <Translate name=\"add\"/>\r\n                    </Button>\r\n                </ModalFooter>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n\r\n};\r\n\r\nexport default AddContact;                                             "]},"metadata":{},"sourceType":"module"}