{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\barcode\\\\src\\\\Translate.js\";\nimport React, { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport { setTranslations, checkTranslation } from './redux/lang/actions';\nimport SessionStorage from \"./services/SessionStorage\";\n\nvar Translate = function Translate(props) {\n  // useEffect(\n  //     () => {\n  //         if (props.name !== undefined && props.translations.length > 0) {\n  //             console.log('Yraaaaaaaaaaaaaaaaaaaaaa');\n  //             let lang = SessionStorage.get('lang') || \"am\";\n  //             if (3) {\n  //                 let index = false;\n  //                 for (let item of props.translations) {\n  //                     if (item.value === props.name) {\n  //                         index = true;\n  //                     }\n  //                 }\n  //                 if (index === false) {\n  //                     // props.setTranslations(props.name.toLowerCase(), props.name, lang);\n  //                 }\n  //             } /*else obj.push({'key': props.name.toLowerCase(), 'name': props.name, 'lnag': lang});*/\n  //         }\n  //     }, []\n  // )\n  // if (!props.translations[props.name.toLowerCase()]) {\n  //     if (props.status) {\n  //         let lang = SessionStorage.get('lang') || \"am\";\n  //         if (props.translations.length > 0) {\n  //             let index = false;\n  //             for (let item of props.translations) {\n  //                 if (item.value === props.name) {\n  //                     index = true;\n  //                 }\n  //             }\n  //             if (index === false) {\n  //                 console.log('key: ', props.name.toLowerCase(), 'name: ', props.name, 'lnag: ', lang)\n  //                 // props.setTranslations(props.name, props.name, lang);\n  //             }\n  //         } else {\n  //             // props.setTranslations(props.name, props.name, lang);\n  //         }\n  //     }\n  // }\n  var contentRender = function contentRender() {\n    if (props.translations[props.name]) {\n      return props.translations[props.name];\n    } else {\n      props.checkTranslation(props.name, props.name, SessionStorage.get('lang') || \"am\");\n    }\n  };\n\n  return React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, contentRender());\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return bindActionCreators({\n    setTranslations: setTranslations,\n    checkTranslation: checkTranslation\n  }, dispatch);\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    translations: state.languages.translations,\n    status: state.languages.status\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Translate);","map":{"version":3,"sources":["C:/Users/User/Desktop/barcode/src/Translate.js"],"names":["React","useEffect","connect","bindActionCreators","setTranslations","checkTranslation","SessionStorage","Translate","props","contentRender","translations","name","get","mapDispatchToProps","dispatch","mapStateToProps","state","languages","status"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,kBAAR,QAAiC,OAAjC;AACA,SAAQC,eAAR,EAAyBC,gBAAzB,QAAgD,sBAAhD;AACA,OAAOC,cAAP,MAA2B,2BAA3B;;AAGA,IAAMC,SAAS,GAAG,SAAZA,SAAY,CAAAC,KAAK,EAAI;AAEvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA,MAAMC,aAAa,GAAG,SAAhBA,aAAgB,GAAM;AACxB,QAAID,KAAK,CAACE,YAAN,CAAmBF,KAAK,CAACG,IAAzB,CAAJ,EAAoC;AAChC,aAAOH,KAAK,CAACE,YAAN,CAAmBF,KAAK,CAACG,IAAzB,CAAP;AACH,KAFD,MAEO;AACHH,MAAAA,KAAK,CAACH,gBAAN,CAAuBG,KAAK,CAACG,IAA7B,EAAmCH,KAAK,CAACG,IAAzC,EAA+CL,cAAc,CAACM,GAAf,CAAmB,MAAnB,KAA8B,IAA7E;AACH;AACJ,GAND;;AAOA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACSH,aAAa,EADtB,CADJ;AAMH,CAzDD;;AA2DA,IAAMI,kBAAkB,GAAG,SAArBA,kBAAqB,CAAAC,QAAQ,EAAI;AACnC,SAAOX,kBAAkB,CACrB;AACIC,IAAAA,eAAe,EAAfA,eADJ;AAEIC,IAAAA,gBAAgB,EAAhBA;AAFJ,GADqB,EAKrBS,QALqB,CAAzB;AAOH,CARD;;AAUA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAAAC,KAAK,EAAI;AAC7B,SAAO;AACHN,IAAAA,YAAY,EAAEM,KAAK,CAACC,SAAN,CAAgBP,YAD3B;AAEHQ,IAAAA,MAAM,EAAEF,KAAK,CAACC,SAAN,CAAgBC;AAFrB,GAAP;AAIH,CALD;;AAOA,eAAehB,OAAO,CAACa,eAAD,EAAkBF,kBAAlB,CAAP,CAA6CN,SAA7C,CAAf","sourcesContent":["import React, {useEffect} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {bindActionCreators} from \"redux\";\r\nimport {setTranslations, checkTranslation} from './redux/lang/actions'\r\nimport SessionStorage from \"./services/SessionStorage\";\r\n\r\n\r\nconst Translate = props => {\r\n\r\n    // useEffect(\r\n    //     () => {\r\n    //         if (props.name !== undefined && props.translations.length > 0) {\r\n    //             console.log('Yraaaaaaaaaaaaaaaaaaaaaa');\r\n    //             let lang = SessionStorage.get('lang') || \"am\";\r\n    //             if (3) {\r\n    //                 let index = false;\r\n    //                 for (let item of props.translations) {\r\n    //                     if (item.value === props.name) {\r\n    //                         index = true;\r\n    //                     }\r\n    //                 }\r\n    //                 if (index === false) {\r\n    //                     // props.setTranslations(props.name.toLowerCase(), props.name, lang);\r\n    //                 }\r\n    //             } /*else obj.push({'key': props.name.toLowerCase(), 'name': props.name, 'lnag': lang});*/\r\n    //         }\r\n    //     }, []\r\n    // )\r\n\r\n\r\n    // if (!props.translations[props.name.toLowerCase()]) {\r\n    //     if (props.status) {\r\n    //         let lang = SessionStorage.get('lang') || \"am\";\r\n    //         if (props.translations.length > 0) {\r\n    //             let index = false;\r\n    //             for (let item of props.translations) {\r\n    //                 if (item.value === props.name) {\r\n    //                     index = true;\r\n    //                 }\r\n    //             }\r\n    //             if (index === false) {\r\n    //                 console.log('key: ', props.name.toLowerCase(), 'name: ', props.name, 'lnag: ', lang)\r\n    //                 // props.setTranslations(props.name, props.name, lang);\r\n    //             }\r\n    //         } else {\r\n    //             // props.setTranslations(props.name, props.name, lang);\r\n    //         }\r\n    //     }\r\n    // }\r\n\r\n\r\n    const contentRender = () => {\r\n        if (props.translations[props.name]) {\r\n            return props.translations[props.name]\r\n        } else {\r\n            props.checkTranslation(props.name, props.name, SessionStorage.get('lang') || \"am\")\r\n        }\r\n    }\r\n    return (\r\n        <span>\r\n                {contentRender()}\r\n        </span>\r\n    );\r\n\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return bindActionCreators(\r\n        {\r\n            setTranslations,\r\n            checkTranslation\r\n        },\r\n        dispatch\r\n    );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        translations: state.languages.translations,\r\n        status: state.languages.status\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Translate);"]},"metadata":{},"sourceType":"module"}