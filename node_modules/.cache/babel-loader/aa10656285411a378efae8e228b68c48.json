{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\User\\\\Desktop\\\\barcode\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\User\\\\Desktop\\\\barcode\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\User\\\\Desktop\\\\barcode\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\User\\\\Desktop\\\\barcode\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\User\\\\Desktop\\\\barcode\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\barcode\\\\src\\\\components\\\\PaginationTable\\\\paginationTable.js\";\n\nimport React from \"react\";\nimport { BootstrapTable, TableHeaderColumn, InsertButton } from 'react-bootstrap-table';\nimport 'react-bootstrap-table/dist/react-bootstrap-table-all.min.css';\nimport EditButton from \"../buttons/editButton\";\nimport DeleteButton from \"../buttons/deleteButton\"; // function afterSearch(searchText, result) {\n// }\n//\n// const options = {\n//     afterSearch: afterSearch  // define a after search hook\n// };\n\nvar andleInsertButtonClick = function andleInsertButtonClick(onClick) {\n  // Custom your onClick event here,\n  // it's not necessary to implement this function if you have no any process before onClick\n  console.log('This is my custom function for InserButton click event');\n  onClick();\n};\n\nvar createCustomInsertButton = function createCustomInsertButton(_onClick) {\n  return React.createElement(InsertButton, {\n    btnText: \"CustomInsertText\",\n    btnContextual: \"btn-warning\",\n    className: \"my-custom-class\",\n    btnGlyphicon: \"glyphicon-edit\",\n    onClick: function onClick() {\n      return _this.handleInsertButtonClick(_onClick);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  });\n}; //...\n\n\nvar options = {\n  insertBtn: this.createCustomInsertButton\n};\n\nvar PaginationTable =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(PaginationTable, _React$Component);\n\n  function PaginationTable() {\n    var _getPrototypeOf2;\n\n    var _this2;\n\n    _classCallCheck(this, PaginationTable);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this2 = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(PaginationTable)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this2.state = {\n      index: false,\n      options: {\n        afterSearch: _this2.afterSearch\n      }\n    };\n    _this2.selectRowProp = {\n      mode: 'radio',\n      bgColor: '#868e96',\n      clickToSelect: true,\n      onSelect: function onSelect() {\n        return _this2.onRowSelect();\n      }\n    };\n\n    _this2.afterSearch = function (searchText, result) {};\n\n    _this2.onRowSelect = function () {\n      for (var _len2 = arguments.length, obj = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        obj[_key2] = arguments[_key2];\n      }\n\n      console.log(obj);\n    };\n\n    return _this2;\n  }\n\n  _createClass(PaginationTable, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, this.state.index ? React.createElement(EditButton, {\n        perm: 'Edit',\n        onClick: function onClick() {\n          return alert('Edit');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }) : null, this.state.index ? React.createElement(DeleteButton, {\n        perm: 'Delete',\n        onClick: function onClick() {\n          return alert('Delete');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }) : null, React.createElement(BootstrapTable, {\n        ref: \"table\",\n        data: this.props.data,\n        pagination: true,\n        selectRow: this.selectRowProp,\n        search: true,\n        options: this.state.options,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, React.createElement(TableHeaderColumn, {\n        dataSort: true,\n        dataField: \"id\",\n        isKey: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, \"#\"), React.createElement(TableHeaderColumn, {\n        dataSort: true,\n        dataField: \"key\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, this.props.dataKey), React.createElement(TableHeaderColumn, {\n        dataSort: true,\n        dataField: \"value\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, this.props.value), React.createElement(TableHeaderColumn, {\n        dataField: \"language\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, this.props.lang)));\n    }\n  }]);\n\n  return PaginationTable;\n}(React.Component);\n\nexport default PaginationTable;","map":{"version":3,"sources":["C:/Users/User/Desktop/barcode/src/components/PaginationTable/paginationTable.js"],"names":["React","BootstrapTable","TableHeaderColumn","InsertButton","EditButton","DeleteButton","andleInsertButtonClick","onClick","console","log","createCustomInsertButton","handleInsertButtonClick","options","insertBtn","PaginationTable","state","index","afterSearch","selectRowProp","mode","bgColor","clickToSelect","onSelect","onRowSelect","searchText","result","obj","alert","props","data","dataKey","value","lang","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport {BootstrapTable, TableHeaderColumn, InsertButton} from 'react-bootstrap-table';\r\nimport 'react-bootstrap-table/dist/react-bootstrap-table-all.min.css';\r\nimport EditButton from \"../buttons/editButton\";\r\nimport DeleteButton from \"../buttons/deleteButton\";\r\n\r\n// function afterSearch(searchText, result) {\r\n// }\r\n//\r\n// const options = {\r\n//     afterSearch: afterSearch  // define a after search hook\r\n// };\r\nconst andleInsertButtonClick = (onClick) => {\r\n    // Custom your onClick event here,\r\n    // it's not necessary to implement this function if you have no any process before onClick\r\n    console.log('This is my custom function for InserButton click event');\r\n    onClick();\r\n}\r\nconst createCustomInsertButton = (onClick) => {\r\n    return (\r\n        <InsertButton\r\n            btnText='CustomInsertText'\r\n            btnContextual='btn-warning'\r\n            className='my-custom-class'\r\n            btnGlyphicon='glyphicon-edit'\r\n            onClick={ () => this.handleInsertButtonClick(onClick) }/>\r\n    );\r\n}\r\n//...\r\nconst options = {\r\n    insertBtn: this.createCustomInsertButton\r\n};\r\nclass PaginationTable extends React.Component {\r\n    state = {\r\n        index: false,\r\n        options: {\r\n            afterSearch: this.afterSearch\r\n        }\r\n    }\r\n    selectRowProp = {\r\n        mode: 'radio',\r\n        bgColor: '#868e96',\r\n        clickToSelect: true,\r\n        onSelect: () => this.onRowSelect(),\r\n    };\r\n\r\n    afterSearch =(searchText, result) =>{}\r\n\r\n    onRowSelect = (...obj) => {\r\n        console.log(obj)\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {\r\n                    this.state.index ?\r\n                        <EditButton\r\n                            perm={'Edit'}\r\n                            onClick={() => alert('Edit')}\r\n                        />\r\n                        :\r\n                        null\r\n                }\r\n                {\r\n                    this.state.index ?\r\n                        < DeleteButton\r\n                            perm={'Delete'}\r\n                            onClick={\r\n                                () => alert('Delete')\r\n                            }\r\n                        />\r\n                        :\r\n                        null\r\n                }\r\n                <BootstrapTable\r\n                    ref='table'\r\n                    data={this.props.data}\r\n                    pagination\r\n                    selectRow={this.selectRowProp}\r\n                    search={true}\r\n                    options={this.state.options}\r\n                >\r\n                    <TableHeaderColumn dataSort={true} dataField='id' isKey>#</TableHeaderColumn>\r\n                    <TableHeaderColumn dataSort={true} dataField='key'>{this.props.dataKey}</TableHeaderColumn>\r\n                    <TableHeaderColumn dataSort={true} dataField='value'>{this.props.value}</TableHeaderColumn>\r\n                    <TableHeaderColumn dataField='language'>{this.props.lang}</TableHeaderColumn>\r\n                    {/*<TableHeaderColumn dataField='button'>{this.props.buttons}</TableHeaderColumn>*/}\r\n                </BootstrapTable>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default PaginationTable"]},"metadata":{},"sourceType":"module"}