{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\User\\\\Desktop\\\\barcode\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\User\\\\Desktop\\\\barcode\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _objectSpread from \"C:\\\\Users\\\\User\\\\Desktop\\\\barcode\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _defineProperty from \"C:\\\\Users\\\\User\\\\Desktop\\\\barcode\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"C:\\\\Users\\\\User\\\\Desktop\\\\barcode\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\User\\\\Desktop\\\\barcode\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport SessionStorage from \"./SessionStorage\";\nimport axios from \"axios\";\nimport { destroySession, getSession, saveSession } from \"../utility/session\";\nimport jwt_decode from 'jwt-decode';\n\nvar ApiClient =\n/*#__PURE__*/\nfunction () {\n  function ApiClient() {\n    _classCallCheck(this, ApiClient);\n\n    this.configs = {};\n    this.defaultConfigs = {};\n    this.API_URI = process.env.REACT_APP_API_URL;\n    this.defaultConfigs = {\n      headers: {},\n      path: \"\",\n      params: {}\n    };\n    this.resetConfigs();\n  }\n\n  _createClass(ApiClient, [{\n    key: \"getRuntimeConfigs\",\n    value: function getRuntimeConfigs() {\n      var token = SessionStorage.get(\"token\");\n      var lang = SessionStorage.get(\"lang\") ? SessionStorage.get(\"lang\") : 'am';\n      var headers = {\n        \"Content-Type\": \"application/json\",\n        \"Lang\": lang\n      };\n\n      if (token) {\n        headers[\"Token\"] = token;\n      }\n\n      return Object.assign({}, this.configs, {\n        headers: headers\n      });\n    }\n  }, {\n    key: \"resetConfigs\",\n    value: function resetConfigs() {\n      this.configs = Object.assign({}, this.defaultConfigs);\n    }\n  }, {\n    key: \"setConfig\",\n    value: function setConfig(key, value) {\n      this.configs = Object.assign({}, this.configs, _defineProperty({}, key, value));\n    }\n  }, {\n    key: \"mergeConfigs\",\n    value: function mergeConfigs(uri, params, headers, configs) {\n      var runtimeConfigs = this.getRuntimeConfigs();\n      var responseType = {};\n\n      if (params && params.responseType) {\n        responseType = params.responseType;\n      }\n\n      if (uri) {\n        params.path = uri;\n      }\n\n      return Object.assign({}, runtimeConfigs, Object.assign({}, configs, _objectSpread({}, responseType, {\n        params: Object.assign({}, runtimeConfigs.params, params),\n        headers: Object.assign({}, runtimeConfigs.headers, headers)\n      })));\n    }\n  }, {\n    key: \"ggetRuntimeConfigs\",\n    value: function ggetRuntimeConfigs() {\n      var access = SessionStorage.get(\"access\");\n      var lang = SessionStorage.get(\"lang\") ? SessionStorage.get(\"lang\") : 'am';\n      var headers = {\n        \"Content-Type\": \"application/json\",\n        \"Lang\": lang\n      };\n\n      if (access) {\n        headers[\"Authorization\"] = \"JWT \".concat(access);\n      }\n\n      return Object.assign({}, this.configs, {\n        headers: headers\n      });\n    }\n  }, {\n    key: \"mmergeConfigs\",\n    value: function mmergeConfigs(headers) {\n      var runtimeConfigs = this.ggetRuntimeConfigs();\n      return Object.assign({}, runtimeConfigs, Object.assign({}, {\n        headers: Object.assign({}, runtimeConfigs.headers, headers)\n      }));\n    }\n  }, {\n    key: \"get\",\n    value: function get(uri) {\n      var params = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      var headers = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n      var configs = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n      return axios.get(\"\".concat(this.API_URI), this.mergeConfigs(uri, params, headers, configs)).then(function (response) {\n        return response.data;\n      });\n    }\n  }, {\n    key: \"gett\",\n    value: function () {\n      var _gett = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(uri) {\n        var _this = this;\n\n        var headers,\n            configs,\n            URL,\n            HEADERS,\n            CONFIG,\n            response,\n            refresh_token,\n            _args = arguments;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                headers = _args.length > 1 && _args[1] !== undefined ? _args[1] : {};\n                configs = _args.length > 2 && _args[2] !== undefined ? _args[2] : {};\n                URL = uri;\n                HEADERS = headers;\n                CONFIG = configs;\n                _context.prev = 5;\n                _context.next = 8;\n                return axios.get(\"\".concat(URL), this.mmergeConfigs(HEADERS, CONFIG));\n\n              case 8:\n                response = _context.sent;\n                return _context.abrupt(\"return\", response.data);\n\n              case 12:\n                _context.prev = 12;\n                _context.t0 = _context[\"catch\"](5);\n\n                if (!(_context.t0.response.status === 401 && _context.t0.response.statusText === \"Unauthorized\")) {\n                  _context.next = 17;\n                  break;\n                }\n\n                refresh_token = getSession('refresh');\n                return _context.abrupt(\"return\", axios.post('/token/refresh/', {\n                  refresh: refresh_token\n                }).then(function (response) {\n                  var user_data = jwt_decode(response.data.access);\n                  var user = {\n                    firstname: user_data.firstname,\n                    lastname: user_data.lastname,\n                    user_id: user_data.user_id\n                  };\n                  response.data.user = user;\n                  axios.defaults.headers['Authorization'] = \"JWT \" + response.data.access;\n                  _context.t0.config.headers['Authorization'] = \"JWT \" + response.data.access;\n                  saveSession('auth', response.data);\n                  return _this.gett(URL, HEADERS, CONFIG);\n                }).catch(function (err) {\n                  console.log('Error: ', err);\n                }));\n\n              case 17:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[5, 12]]);\n      }));\n\n      function gett(_x) {\n        return _gett.apply(this, arguments);\n      }\n\n      return gett;\n    }()\n  }, {\n    key: \"get_all\",\n    value: function () {\n      var _get_all = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2(uri) {\n        var headers,\n            configs,\n            URL,\n            HEADERS,\n            CONFIG,\n            response,\n            _args2 = arguments;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                headers = _args2.length > 1 && _args2[1] !== undefined ? _args2[1] : {};\n                configs = _args2.length > 2 && _args2[2] !== undefined ? _args2[2] : {};\n                URL = uri;\n                HEADERS = headers;\n                CONFIG = configs;\n                _context2.prev = 5;\n                _context2.next = 8;\n                return axios.get(\"\".concat(URL), this.mmergeConfigs(HEADERS, CONFIG));\n\n              case 8:\n                response = _context2.sent;\n                return _context2.abrupt(\"return\", response.data);\n\n              case 12:\n                _context2.prev = 12;\n                _context2.t0 = _context2[\"catch\"](5);\n                console.log('error');\n\n              case 15:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this, [[5, 12]]);\n      }));\n\n      function get_all(_x2) {\n        return _get_all.apply(this, arguments);\n      }\n\n      return get_all;\n    }()\n  }, {\n    key: \"post\",\n    value: function post(uri, data) {\n      var params = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n      var headers = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n      var configs = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : {\n        hasFile: false\n      };\n      return axios.post(\"\".concat(this.API_URI), data, this.mergeConfigs(uri, params, headers, configs)).then(function (response) {\n        return response.data;\n      });\n    }\n  }, {\n    key: \"put\",\n    value: function put(uri, data) {\n      var params = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n      var headers = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n      var configs = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : {\n        hasFile: false\n      };\n      return axios.put(\"\".concat(this.API_URI), data, this.mergeConfigs(uri, params, headers, configs)).then(function (response) {\n        return response.data;\n      });\n    }\n  }, {\n    key: \"delete\",\n    value: function _delete(uri) {\n      var params = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      var headers = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n      var configs = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n      return axios.delete(\"\".concat(this.API_URI), this.mergeConfigs(uri, params, headers, configs)).then(function (response) {\n        return response.data;\n      });\n    }\n  }, {\n    key: \"upload\",\n    value: function upload(uri, form) {\n      var params = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n      var headers = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n      var configs = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : {\n        multiple: false\n      };\n      var files = form.files;\n      var formData = new FormData();\n      /*method map I change to forEach*/\n\n      Object.keys(files).forEach(function (key) {\n        formData.append(\"data[\" + key + \"][file]\", files[key]);\n        formData.append(\"data[\" + key + \"][type]\", form.type);\n        formData.append(\"data[\" + key + \"][caption]\", \"caption \" + key);\n        formData.append(\"data[\" + key + \"][credit]\", \"credit \" + key);\n      });\n      return this.post(uri, formData, params, headers, configs);\n    }\n    /*----------------------------------------*/\n\n  }, {\n    key: \"postt\",\n    value: function () {\n      var _postt = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee3(uri, data) {\n        var response, user_data, user;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.prev = 0;\n                _context3.next = 3;\n                return axios.post(uri, data);\n\n              case 3:\n                response = _context3.sent;\n                axios.defaults.headers['Authorization'] = \"JWT \" + data.access;\n                user_data = jwt_decode(response.data.access);\n                user = {\n                  firstname: user_data.firstname,\n                  lastname: user_data.lastname,\n                  user_id: user_data.user_id\n                };\n                response.data.user = user;\n                return _context3.abrupt(\"return\", response.data);\n\n              case 11:\n                _context3.prev = 11;\n                _context3.t0 = _context3[\"catch\"](0);\n                console.log('Error !!!');\n\n              case 14:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, null, [[0, 11]]);\n      }));\n\n      function postt(_x3, _x4) {\n        return _postt.apply(this, arguments);\n      }\n\n      return postt;\n    }()\n  }, {\n    key: \"setLogout\",\n    value: function setLogout() {\n      destroySession();\n    }\n  }], [{\n    key: \"cancelToken\",\n    value: function cancelToken() {\n      var CancelToken = axios.CancelToken;\n      return CancelToken.source();\n    }\n  }]);\n\n  return ApiClient;\n}();\n\nexport { ApiClient as default };","map":{"version":3,"sources":["C:/Users/User/Desktop/barcode/src/services/Api.js"],"names":["SessionStorage","axios","destroySession","getSession","saveSession","jwt_decode","ApiClient","configs","defaultConfigs","API_URI","process","env","REACT_APP_API_URL","headers","path","params","resetConfigs","token","get","lang","Object","assign","key","value","uri","runtimeConfigs","getRuntimeConfigs","responseType","access","ggetRuntimeConfigs","mergeConfigs","then","response","data","URL","HEADERS","CONFIG","mmergeConfigs","status","statusText","refresh_token","post","refresh","user_data","user","firstname","lastname","user_id","defaults","config","gett","catch","err","console","log","hasFile","put","delete","form","multiple","files","formData","FormData","keys","forEach","append","type","CancelToken","source"],"mappings":"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","sourcesContent":["import SessionStorage from \"./SessionStorage\";\r\nimport axios from \"axios\";\r\nimport {destroySession, getSession, saveSession} from \"../utility/session\";\r\nimport jwt_decode from 'jwt-decode'\r\n\r\nexport default class ApiClient {\r\n    configs = {};\r\n    defaultConfigs = {};\r\n    API_URI = process.env.REACT_APP_API_URL;\r\n\r\n    constructor() {\r\n        this.defaultConfigs = {\r\n            headers: {},\r\n            path: \"\",\r\n            params: {}\r\n        };\r\n        this.resetConfigs();\r\n    }\r\n\r\n    getRuntimeConfigs() {\r\n        const token = SessionStorage.get(\"token\");\r\n        const lang = SessionStorage.get(\"lang\") ? SessionStorage.get(\"lang\") : 'am';\r\n        let headers = {\r\n            \"Content-Type\": \"application/json\",\r\n            \"Lang\": lang,\r\n        };\r\n        if (token) {\r\n            headers[\"Token\"] = token;\r\n        }\r\n        return Object.assign({}, this.configs, {\r\n            headers\r\n        });\r\n    }\r\n\r\n    resetConfigs() {\r\n        this.configs = Object.assign({}, this.defaultConfigs);\r\n    }\r\n\r\n    setConfig(key, value) {\r\n        this.configs = Object.assign({}, this.configs, {\r\n            [key]: value\r\n        });\r\n    }\r\n\r\n    mergeConfigs(uri, params, headers, configs) {\r\n        const runtimeConfigs = this.getRuntimeConfigs();\r\n        let responseType = {};\r\n        if (params && params.responseType) {\r\n            responseType = params.responseType;\r\n        }\r\n        if (uri) {\r\n            params.path = uri;\r\n        }\r\n        return Object.assign(\r\n            {},\r\n            runtimeConfigs,\r\n            Object.assign(\r\n                {},\r\n                configs,\r\n                {\r\n                    ...responseType,\r\n                    params: Object.assign({}, runtimeConfigs.params, params),\r\n                    headers: Object.assign({}, runtimeConfigs.headers, headers),\r\n                }\r\n            )\r\n        );\r\n    }\r\n\r\n    ggetRuntimeConfigs() {\r\n        const access = SessionStorage.get(\"access\");\r\n        const lang = SessionStorage.get(\"lang\") ? SessionStorage.get(\"lang\") : 'am';\r\n        let headers = {\r\n            \"Content-Type\": \"application/json\",\r\n            \"Lang\": lang,\r\n        };\r\n        if (access) {\r\n            headers[\"Authorization\"] = `JWT ${access}`;\r\n        }\r\n        return Object.assign({}, this.configs, {\r\n            headers\r\n        });\r\n    }\r\n\r\n    mmergeConfigs(headers) {\r\n        const runtimeConfigs = this.ggetRuntimeConfigs();\r\n        return Object.assign(\r\n            {},\r\n            runtimeConfigs,\r\n            Object.assign(\r\n                {},\r\n                {\r\n                    headers: Object.assign({}, runtimeConfigs.headers, headers),\r\n                }\r\n            )\r\n        );\r\n    }\r\n\r\n    static cancelToken() {\r\n        const CancelToken = axios.CancelToken;\r\n        return CancelToken.source();\r\n    }\r\n\r\n    get(uri, params = {}, headers = {}, configs = {}) {\r\n        return axios.get(`${this.API_URI}`, this.mergeConfigs(uri, params, headers, configs)\r\n        ).then(response => response.data);\r\n    }\r\n\r\n    async gett(uri, headers = {}, configs = {}) {\r\n        let URL = uri;\r\n        let HEADERS = headers;\r\n        let CONFIG = configs\r\n        try {\r\n            const response = await axios.get(`${URL}`, this.mmergeConfigs(HEADERS, CONFIG));\r\n            return response.data\r\n        } catch (error) {\r\n            if (error.response.status === 401 && error.response.statusText === \"Unauthorized\") {\r\n                const refresh_token = getSession('refresh');\r\n\r\n                return axios.post('/token/refresh/', {refresh: refresh_token})\r\n                    .then((response) => {\r\n                        let user_data = jwt_decode(response.data.access);\r\n                        let user = {\r\n                            firstname: user_data.firstname,\r\n                            lastname: user_data.lastname,\r\n                            user_id: user_data.user_id\r\n                        }\r\n                        response.data.user = user;\r\n\r\n                        axios.defaults.headers['Authorization'] = \"JWT \" + response.data.access;\r\n                        error.config.headers['Authorization'] = \"JWT \" + response.data.access;\r\n\r\n                        saveSession('auth', response.data);\r\n                         return this.gett(URL, HEADERS, CONFIG)\r\n                    })\r\n                    .catch(err => {\r\n                        console.log('Error: ',err)\r\n                    });\r\n\r\n                // const response = await this.post('token/refresh/', {refresh: refresh_token});\r\n                // console.log('for refresh', response)\r\n            }\r\n        }\r\n    }\r\n\r\n    async get_all(uri, headers = {}, configs = {}) {\r\n        let URL = uri;\r\n        let HEADERS = headers;\r\n        let CONFIG = configs\r\n        try {\r\n            const response = await axios.get(`${URL}`, this.mmergeConfigs(HEADERS, CONFIG));\r\n            return response.data\r\n        } catch (error) {\r\n            console.log('error')\r\n        }\r\n    }\r\n\r\n    post(uri, data, params = {}, headers = {}, configs = {hasFile: false}) {\r\n        return axios.post(`${this.API_URI}`, data,\r\n            this.mergeConfigs(uri, params, headers, configs)\r\n        ).then(response => response.data);\r\n    }\r\n\r\n\r\n    put(uri, data, params = {}, headers = {}, configs = {hasFile: false}) {\r\n        return axios.put(`${this.API_URI}`, data,\r\n            this.mergeConfigs(uri, params, headers, configs)\r\n        ).then(response => response.data);\r\n\r\n    }\r\n\r\n    delete(uri, params = {}, headers = {}, configs = {}) {\r\n        return axios.delete(`${this.API_URI}`,\r\n            this.mergeConfigs(uri, params, headers, configs)\r\n        ).then(response => response.data);\r\n    }\r\n\r\n    upload(uri, form, params = {}, headers = {}, configs = {multiple: false}) {\r\n        let files = form.files;\r\n        let formData = new FormData();\r\n        /*method map I change to forEach*/\r\n        Object.keys(files).forEach(\r\n            key => {\r\n                formData.append(\"data[\" + key + \"][file]\", files[key]);\r\n                formData.append(\"data[\" + key + \"][type]\", form.type);\r\n                formData.append(\"data[\" + key + \"][caption]\", \"caption \" + key);\r\n                formData.append(\"data[\" + key + \"][credit]\", \"credit \" + key);\r\n\r\n            })\r\n\r\n        return this.post(uri, formData, params, headers, configs);\r\n    }\r\n\r\n\r\n    /*----------------------------------------*/\r\n\r\n\r\n\r\n     async postt(uri, data) {\r\n\r\n         try {\r\n             const response = await axios.post(uri, data);\r\n             axios.defaults.headers['Authorization'] = \"JWT \" + data.access;\r\n             let user_data = jwt_decode(response.data.access);\r\n             let user = {\r\n                 firstname: user_data.firstname,\r\n                 lastname: user_data.lastname,\r\n                 user_id: user_data.user_id\r\n             }\r\n             response.data.user = user\r\n             return response.data;\r\n         } catch (e) {\r\n             console.log('Error !!!');\r\n         }\r\n    }\r\n\r\n    setLogout() {\r\n        destroySession()\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}