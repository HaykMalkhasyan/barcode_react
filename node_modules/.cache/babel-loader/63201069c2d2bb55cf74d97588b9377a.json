{"ast":null,"code":"import { GET_ITEMS_REQUEST, GET_ITEMS_FAIL, GET_ITEMS_SUCCESS, GET_ITEM_REQUEST, GET_ITEM_FAIL, GET_ITEM_SUCCESS, ADD_ITEM_REQUEST, ADD_ITEM_FAIL, ADD_ITEM_SUCCESS, EDIT_ITEM_REQUEST, EDIT_ITEM_FAIL, EDIT_ITEM_SUCCESS, DELETE_ITEM_REQUEST, DELETE_ITEM_FAIL, DELETE_ITEM_SUCCESS, SET_MODAL_VALUES, TOGGLE_MODAL } from \"./actionTypes\";\nvar cols = 'id,ITEMname,firstname,lastname';\nvar url = \"Items/Items\";\nexport var itemActions = function itemActions(type, data) {\n  switch (type) {\n    case \"get\":\n      return {\n        types: [GET_ITEM_REQUEST, GET_ITEM_FAIL, GET_ITEM_SUCCESS],\n        promise: function promise(apiClient) {\n          return apiClient.get(url, JSON.stringify({\n            param: {\n              id: data.id\n            }\n          }));\n        }\n      };\n\n    case \"getAll\":\n      return {\n        types: [GET_ITEMS_REQUEST, GET_ITEMS_FAIL, GET_ITEMS_SUCCESS],\n        promise: function promise(apiClient) {\n          return apiClient.get(url, JSON.stringify({\n            cols: cols\n          }));\n        }\n      };\n\n    case \"add\":\n      return {\n        types: [ADD_ITEM_REQUEST, ADD_ITEM_FAIL, ADD_ITEM_SUCCESS],\n        promise: function promise(apiClient) {\n          return apiClient.post(url, JSON.stringify({\n            data: data,\n            cols: cols\n          }));\n        }\n      };\n\n    case \"edit\":\n      return {\n        types: [EDIT_ITEM_REQUEST, EDIT_ITEM_FAIL, EDIT_ITEM_SUCCESS],\n        promise: function promise(apiClient) {\n          return apiClient.put(url, JSON.stringify({\n            id: data.id,\n            data: data,\n            cols: cols\n          }));\n        }\n      };\n\n    case \"delete\":\n      return {\n        types: [DELETE_ITEM_REQUEST, DELETE_ITEM_FAIL, DELETE_ITEM_SUCCESS],\n        promise: function promise(apiClient) {\n          return apiClient.delete(url, JSON.stringify({\n            id: data.id,\n            data: data,\n            cols: cols\n          }));\n        }\n      };\n\n    default:\n      return;\n  }\n};\nexport var setModalValues = function setModalValues(key, value) {\n  return {\n    type: SET_MODAL_VALUES,\n    key: key,\n    value: value\n  };\n};\nexport var toggleModal = function toggleModal(modalType, id) {\n  var obj = {\n    \"id\": id\n  };\n  return {\n    type: TOGGLE_MODAL,\n    modalType: modalType,\n    obj: obj\n  };\n};","map":{"version":3,"sources":["C:/Users/User/Desktop/barcode/src/redux/items/actions.js"],"names":["GET_ITEMS_REQUEST","GET_ITEMS_FAIL","GET_ITEMS_SUCCESS","GET_ITEM_REQUEST","GET_ITEM_FAIL","GET_ITEM_SUCCESS","ADD_ITEM_REQUEST","ADD_ITEM_FAIL","ADD_ITEM_SUCCESS","EDIT_ITEM_REQUEST","EDIT_ITEM_FAIL","EDIT_ITEM_SUCCESS","DELETE_ITEM_REQUEST","DELETE_ITEM_FAIL","DELETE_ITEM_SUCCESS","SET_MODAL_VALUES","TOGGLE_MODAL","cols","url","itemActions","type","data","types","promise","apiClient","get","JSON","stringify","param","id","post","put","delete","setModalValues","key","value","toggleModal","modalType","obj"],"mappings":"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","sourcesContent":["import {\r\n    GET_ITEMS_REQUEST,GET_ITEMS_FAIL,GET_ITEMS_SUCCESS,\r\n    GET_ITEM_REQUEST,GET_ITEM_FAIL,GET_ITEM_SUCCESS,\r\n    ADD_ITEM_REQUEST,ADD_ITEM_FAIL,ADD_ITEM_SUCCESS,\r\n    EDIT_ITEM_REQUEST,EDIT_ITEM_FAIL,EDIT_ITEM_SUCCESS,\r\n    DELETE_ITEM_REQUEST,DELETE_ITEM_FAIL,DELETE_ITEM_SUCCESS,\r\n    SET_MODAL_VALUES,TOGGLE_MODAL\r\n} from \"./actionTypes\";\r\n\r\nlet cols =  'id,ITEMname,firstname,lastname';\r\nlet url = `Items/Items`;\r\nexport const itemActions = (type,data) => {\r\n    switch(type) {\r\n        case \"get\":\r\n            return {\r\n                types: [GET_ITEM_REQUEST,GET_ITEM_FAIL,GET_ITEM_SUCCESS],\r\n                promise: (apiClient) => apiClient.get(url, JSON.stringify({ param:{id:data.id} }))\r\n            }\r\n        case \"getAll\":\r\n            return {\r\n                types: [GET_ITEMS_REQUEST,GET_ITEMS_FAIL,GET_ITEMS_SUCCESS],\r\n                promise: (apiClient) => apiClient.get(url, JSON.stringify({ cols }))\r\n            }\r\n        case \"add\":\r\n            return {\r\n                types: [ADD_ITEM_REQUEST,ADD_ITEM_FAIL,ADD_ITEM_SUCCESS],\r\n                promise: (apiClient) => apiClient.post(url, JSON.stringify({data, cols}))\r\n            }\r\n        case \"edit\":\r\n            return {\r\n                types: [EDIT_ITEM_REQUEST,EDIT_ITEM_FAIL,EDIT_ITEM_SUCCESS],\r\n                promise: (apiClient) => apiClient.put(url,JSON.stringify({id:data.id,data,cols}))\r\n            }\r\n        case \"delete\":\r\n            return {\r\n                types: [DELETE_ITEM_REQUEST,DELETE_ITEM_FAIL,DELETE_ITEM_SUCCESS],\r\n                promise: (apiClient) => apiClient.delete(url, JSON.stringify({id:data.id, data,cols }))\r\n            }\r\n        default:\r\n            return ;\r\n    }\r\n};\r\n\r\n\r\nexport const setModalValues = (key,value) => {\r\n    return {\r\n        type: SET_MODAL_VALUES,\r\n        key,\r\n        value\r\n    }\r\n}\r\n\r\nexport const toggleModal = (modalType,id) => {\r\n    let obj = {\"id\":id};\r\n    return {\r\n        type: TOGGLE_MODAL,\r\n        modalType,\r\n        obj\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}