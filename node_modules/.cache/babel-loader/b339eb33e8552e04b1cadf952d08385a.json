{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\User\\\\Desktop\\\\barcode\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\User\\\\Desktop\\\\barcode\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\User\\\\Desktop\\\\barcode\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\User\\\\Desktop\\\\barcode\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\User\\\\Desktop\\\\barcode\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\barcode\\\\src\\\\containers\\\\pages\\\\suppliers\\\\suppliersAddModal.js\";\nimport React, { Component } from \"react\";\nimport { Col, FormGroup, Label, Button, ModalBody, ModalFooter, Modal, ModalHeader, Input } from \"reactstrap\";\nimport Translate from \"../../../Translate\";\nimport { Plus, Trash2, Search } from \"react-feather\";\nimport Formsy from 'formsy-react';\n\nvar SuplliersAddModal =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(SuplliersAddModal, _Component);\n\n  function SuplliersAddModal() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, SuplliersAddModal);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(SuplliersAddModal)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.printBankElement = function () {\n      var element = [];\n      var length = _this.props.setSupplier.tin.length ? _this.props.setSupplier.tin.length : 1;\n\n      var _loop = function _loop(i) {\n        element.push(React.createElement(FormGroup, {\n          row: true,\n          key: i,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 23\n          },\n          __self: this\n        }, React.createElement(Label, {\n          for: 'bank',\n          sm: 3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 24\n          },\n          __self: this\n        }, i === 0 ? React.createElement(Translate, {\n          name: 'bank',\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 27\n          },\n          __self: this\n        }) : ''), React.createElement(Col, {\n          sm: 3,\n          className: 'pr-0',\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 32\n          },\n          __self: this\n        }, React.createElement(Input, {\n          type: 'select',\n          className: 'square',\n          name: \"bank_id-\".concat(i),\n          value: _this.props.setSupplier.tin.length > 0 && _this.props.setSupplier.tin[i] ? _this.props.setSupplier.tin[i].bank_id ? _this.props.setSupplier.tin[i].bank_id.id : 0 : 0,\n          onBlur: function onBlur(event) {\n            return _this.props.checkValue(event.target.name, event.target.value, i);\n          },\n          onChange: function onChange(event) {\n            return _this.props.setSuppliersAddModalValue(event.target.name, event.target.value, i);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 33\n          },\n          __self: this\n        }, React.createElement(\"option\", {\n          value: 0,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 53\n          },\n          __self: this\n        }, \"choose...\"), _this.props.banks ? _this.props.banks.map(function (bank) {\n          return React.createElement(\"option\", {\n            key: bank.id,\n            value: bank.id,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 57\n            },\n            __self: this\n          }, bank.name);\n        }) : React.createElement(\"option\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 65\n          },\n          __self: this\n        }, \"Empty\")), _this.props.checkValueStatus['bank_id'] && _this.props.checkValueStatus['bank_id'][i] ? React.createElement(\"span\", {\n          className: \"danger font-small-1\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 70\n          },\n          __self: this\n        }, React.createElement(Translate, {\n          name: _this.props.checkValueStatus['bank_id'][i],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 70\n          },\n          __self: this\n        })) : null), React.createElement(Col, {\n          sm: 2,\n          className: 'pr-0 pl-0',\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 76\n          },\n          __self: this\n        }, React.createElement(Input, {\n          type: 'select',\n          className: 'square border-left-0',\n          name: \"currency_id-\".concat(i),\n          value: _this.props.setSupplier.tin && _this.props.setSupplier.tin[i] ? _this.props.setSupplier.tin[i].currency_id ? _this.props.setSupplier.tin[i].currency_id.id : 0 : 0,\n          onBlur: function onBlur(event) {\n            return _this.props.checkValue(event.target.name, event.target.value, i);\n          },\n          onChange: function onChange(event) {\n            return _this.props.setSuppliersAddModalValue(event.target.name, event.target.value, i);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 77\n          },\n          __self: this\n        }, React.createElement(\"option\", {\n          value: 0,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 97\n          },\n          __self: this\n        }, \"choose...\"), _this.props.currency ? _this.props.currency.map(function (item) {\n          return React.createElement(\"option\", {\n            key: item.id,\n            value: item.id,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 101\n            },\n            __self: this\n          }, item.short);\n        }) : React.createElement(\"option\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 109\n          },\n          __self: this\n        }, \"Empty\")), _this.props.checkValueStatus['currency_id'] && _this.props.checkValueStatus['currency_id'][i] ? React.createElement(\"span\", {\n          className: \"danger font-small-1\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 114\n          },\n          __self: this\n        }, React.createElement(Translate, {\n          name: _this.props.checkValueStatus['currency_id'][i],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 114\n          },\n          __self: this\n        })) : null), React.createElement(Col, {\n          sm: 4,\n          className: 'pl-0',\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 120\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: 'position-relative has-icon-right',\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 121\n          },\n          __self: this\n        }, React.createElement(\"input\", {\n          className: 'form-control square border-left-0',\n          type: 'text',\n          id: 'bank1',\n          placeholder: 'currency',\n          name: \"tin_value-\".concat(i),\n          value: _this.props.setSupplier.tin && _this.props.setSupplier.tin[i] ? _this.props.setSupplier.tin[i].tin_value ? _this.props.setSupplier.tin[i].tin_value : '' : '',\n          onBlur: function onBlur(event) {\n            return _this.props.checkValue(event.target.name, event.target.value, i);\n          },\n          onChange: function onChange(event) {\n            return _this.props.setSuppliersAddModalValue(event.target.name, event.target.value, i);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 122\n          },\n          __self: this\n        }), React.createElement(\"div\", {\n          className: 'form-control-position',\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 145\n          },\n          __self: this\n        }, i + 1 === length ? React.createElement(Plus, {\n          size: 20,\n          className: 'success cursor-pointer',\n          onClick: function onClick() {\n            return _this.props.addTin({}, i);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 148\n          },\n          __self: this\n        }) : React.createElement(Trash2, {\n          size: 20,\n          className: 'danger cursor-pointer',\n          onClick: function onClick() {\n            return _this.props.reduceTin(i);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 156\n          },\n          __self: this\n        }))), _this.props.checkValueStatus['tin_value'] && _this.props.checkValueStatus['tin_value'][i] ? React.createElement(\"span\", {\n          className: \"danger font-small-1\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 169\n          },\n          __self: this\n        }, React.createElement(Translate, {\n          name: _this.props.checkValueStatus['tin_value'][i],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 169\n          },\n          __self: this\n        })) : null)));\n      };\n\n      for (var i = 0; i < length; i++) {\n        _loop(i);\n      }\n\n      return element;\n    };\n\n    _this.printPhoneElement = function () {\n      var element = [];\n      var length = _this.props.setSupplier.phone.length ? _this.props.setSupplier.phone.length : 1;\n\n      var _loop2 = function _loop2(i) {\n        element.push(React.createElement(FormGroup, {\n          row: true,\n          key: i,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 187\n          },\n          __self: this\n        }, React.createElement(Label, {\n          for: 'phone',\n          sm: 3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 188\n          },\n          __self: this\n        }, i === 0 ? React.createElement(Translate, {\n          name: 'phone',\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 191\n          },\n          __self: this\n        }) : ''), React.createElement(Col, {\n          sm: 9,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 196\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"position-relative has-icon-right\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 197\n          },\n          __self: this\n        }, React.createElement(\"input\", {\n          type: \"tel\",\n          className: \"form-control square\",\n          placeholder: 'example: 098 --- ---',\n          name: \"phone-\".concat(i),\n          value: _this.props.setSupplier.phone[i] ? _this.props.setSupplier.phone[i].phone : '',\n          onBlur: function onBlur(event) {\n            return _this.props.checkValue(event.target.name, event.target.value, i);\n          },\n          onChange: function onChange(event) {\n            return _this.props.setSuppliersAddModalValue(event.target.name, event.target.value, i);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 198\n          },\n          __self: this\n        }), React.createElement(\"div\", {\n          className: \"form-control-position\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 211\n          },\n          __self: this\n        }, i + 1 === length ? React.createElement(Plus, {\n          size: 20,\n          className: 'success cursor-pointer',\n          onClick: function onClick() {\n            return _this.props.addPhone(null, i);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 214\n          },\n          __self: this\n        }) : React.createElement(Trash2, {\n          size: 20,\n          className: 'danger cursor-pointer',\n          onClick: function onClick() {\n            return _this.props.reducePhone(i);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 222\n          },\n          __self: this\n        }))), _this.props.checkValueStatus['phone'] && _this.props.checkValueStatus['phone'][i] ? React.createElement(\"span\", {\n          className: \"danger font-small-1\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 234\n          },\n          __self: this\n        }, React.createElement(Translate, {\n          name: _this.props.checkValueStatus['phone'][i],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 234\n          },\n          __self: this\n        })) : null)));\n      };\n\n      for (var i = 0; i < length; i++) {\n        _loop2(i);\n      }\n\n      return element;\n    };\n\n    return _this;\n  }\n\n  _createClass(SuplliersAddModal, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(Modal, {\n        isOpen: this.props.isOpen,\n        size: \"lg\",\n        toggle: function toggle() {\n          return _this2.props.openSuppliersAddModal();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 249\n        },\n        __self: this\n      }, React.createElement(ModalHeader, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 256\n        },\n        __self: this\n      }, React.createElement(Translate, {\n        name: \"\".concat(this.props.modalType, \"Supplier\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 257\n        },\n        __self: this\n      })), React.createElement(ModalBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 259\n        },\n        __self: this\n      }, React.createElement(Formsy, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 260\n        },\n        __self: this\n      }, React.createElement(FormGroup, {\n        row: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 262\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: 'firstName',\n        sm: 3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 263\n        },\n        __self: this\n      }, React.createElement(Translate, {\n        name: 'name',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 264\n        },\n        __self: this\n      })), React.createElement(Col, {\n        sm: 7,\n        className: 'pr-0',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 266\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        id: 'firstName',\n        className: \"form-control square \".concat(this.props.checkValueStatus['name'] ? 'is-invalid' : null),\n        type: 'text',\n        name: 'name',\n        value: this.props.setSupplier.name,\n        onBlur: function onBlur(event) {\n          return _this2.props.checkValue(event.target.name, event.target.value);\n        },\n        onChange: function onChange(event) {\n          return _this2.props.setSuppliersAddModalValue(event.target.name, event.target.value);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 267\n        },\n        __self: this\n      }), this.props.checkValueStatus['name'] ? React.createElement(\"span\", {\n        className: \"danger font-small-1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 282\n        },\n        __self: this\n      }, React.createElement(Translate, {\n        name: this.props.checkValueStatus.name,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 282\n        },\n        __self: this\n      })) : null), React.createElement(Col, {\n        sm: 2,\n        className: 'pl-0',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 288\n        },\n        __self: this\n      }, React.createElement(Input, {\n        className: 'square border-left-0',\n        type: 'select',\n        name: 'type',\n        value: +this.props.setSupplier.type || 0,\n        onChange: function onChange(event) {\n          return _this2.props.setSuppliersAddModalValue(event.target.name, +event.target.value);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 289\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        value: 0,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 298\n        },\n        __self: this\n      }, \"choose...\"), this.props.companyTypes ? this.props.companyTypes.map(function (type) {\n        return React.createElement(\"option\", {\n          key: type.id,\n          value: type.value,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 305\n          },\n          __self: this\n        }, type.name);\n      }) : React.createElement(\"option\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 315\n        },\n        __self: this\n      }, \"Empty\")))), React.createElement(FormGroup, {\n        row: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 321\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: 'hh',\n        sm: 3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 322\n        },\n        __self: this\n      }, React.createElement(Translate, {\n        name: 'hh',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 323\n        },\n        __self: this\n      })), React.createElement(Col, {\n        sm: 9,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 325\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        id: 'hh',\n        className: \"form-control square \".concat(this.props.checkValueStatus['hh'] ? 'is-invalid' : null),\n        type: 'text',\n        name: 'hh',\n        value: this.props.setSupplier.hh,\n        onBlur: function onBlur(event) {\n          return _this2.props.checkValue(event.target.name, event.target.value);\n        },\n        onChange: function onChange(event) {\n          return _this2.props.setSuppliersAddModalValue(event.target.name, event.target.value);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 326\n        },\n        __self: this\n      }), this.props.checkValueStatus['hh'] ? React.createElement(\"span\", {\n        className: \"danger font-small-1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 341\n        },\n        __self: this\n      }, React.createElement(Translate, {\n        name: this.props.checkValueStatus['hh'],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 341\n        },\n        __self: this\n      })) : null)), React.createElement(FormGroup, {\n        row: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 349\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: 'hvhh',\n        sm: 3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 350\n        },\n        __self: this\n      }, React.createElement(Translate, {\n        name: 'hvhh',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 351\n        },\n        __self: this\n      })), React.createElement(Col, {\n        sm: 9,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 353\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"position-relative has-icon-right\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 354\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        id: 'hvhh',\n        className: \"form-control square\",\n        type: 'text',\n        name: 'hvhh',\n        value: this.props.setSupplier.hvhh,\n        onBlur: function onBlur(event) {\n          return _this2.props.checkValue(event.target.name, event.target.value);\n        },\n        onChange: function onChange(event) {\n          return _this2.props.setSuppliersAddModalValue(event.target.name, event.target.value);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 355\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"form-control-position\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 368\n        },\n        __self: this\n      }, React.createElement(Search, {\n        size: 20,\n        className: 'info cursor-pointer',\n        onBlur: function onBlur(event) {\n          return _this2.props.checkValue(event.target.name, event.target.value);\n        },\n        onClick: function onClick() {\n          return _this2.props.searchRequisite(_this2.props.setSupplier.hvhh);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 369\n        },\n        __self: this\n      }))), this.props.checkValueStatus['hvhh'] ? React.createElement(\"span\", {\n        className: \"danger font-small-1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 383\n        },\n        __self: this\n      }, React.createElement(Translate, {\n        name: this.props.checkValueStatus['hvhh'],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 383\n        },\n        __self: this\n      })) : null)), React.createElement(FormGroup, {\n        row: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 391\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: 'address',\n        sm: 3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 392\n        },\n        __self: this\n      }, React.createElement(Translate, {\n        name: 'address',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 393\n        },\n        __self: this\n      })), React.createElement(Col, {\n        sm: 9,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 395\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        id: 'address',\n        className: \"form-control square \".concat(this.props.checkValueStatus['address'] ? 'is-invalid' : null),\n        type: 'text',\n        name: 'address',\n        value: this.props.setSupplier.address,\n        onBlur: function onBlur(event) {\n          return _this2.props.checkValue(event.target.name, event.target.value);\n        },\n        onChange: function onChange(event) {\n          return _this2.props.setSuppliersAddModalValue(event.target.name, event.target.value);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 396\n        },\n        __self: this\n      }), this.props.checkValueStatus['address'] ? React.createElement(\"span\", {\n        className: \"danger font-small-1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 411\n        },\n        __self: this\n      }, React.createElement(Translate, {\n        name: this.props.checkValueStatus['address'],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 411\n        },\n        __self: this\n      })) : null)), this.printBankElement(), React.createElement(FormGroup, {\n        row: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 421\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: 'director',\n        sm: 3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 422\n        },\n        __self: this\n      }, React.createElement(Translate, {\n        name: 'director',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 423\n        },\n        __self: this\n      })), React.createElement(Col, {\n        sm: 9,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 425\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        className: \"form-control square \".concat(this.props.checkValueStatus['director'] ? 'is-invalid' : null),\n        type: 'text',\n        id: 'director',\n        name: 'director',\n        onBlur: function onBlur(event) {\n          return _this2.props.checkValue(event.target.name, event.target.value);\n        },\n        value: this.props.setSupplier.director ? this.props.setSupplier.director : '',\n        onChange: function onChange(event) {\n          return _this2.props.setSuppliersAddModalValue(event.target.name, event.target.value);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 426\n        },\n        __self: this\n      }), this.props.checkValueStatus['director'] ? React.createElement(\"span\", {\n        className: \"danger font-small-1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 446\n        },\n        __self: this\n      }, React.createElement(Translate, {\n        name: this.props.checkValueStatus['director'],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 446\n        },\n        __self: this\n      })) : null)), this.printPhoneElement())), React.createElement(ModalFooter, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 460\n        },\n        __self: this\n      }, this.props.setSupplier.name.length && this.props.setSupplier.hh.length && this.props.setSupplier.hvhh.length && this.props.setSupplier.address.length && this.props.setSupplier.tin.length > 0 && this.props.setSupplier.director.length && this.props.setSupplier.phone.length && this.props.setSupplier.type ? React.createElement(Button, {\n        color: \"primary\",\n        className: \"btn-square\",\n        outline: true,\n        type: \"submit\",\n        onClick: function onClick() {\n          _this2.props.modalType === 'add' ? _this2.props.fetchSuppliers(_this2.props.setSupplier) : _this2.props.supplierActions('edit', _this2.props.setSupplier);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 463\n        },\n        __self: this\n      }, React.createElement(Translate, {\n        name: 'confirm',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 479\n        },\n        __self: this\n      })) : React.createElement(\"span\", {\n        className: \"danger font-small-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 482\n        },\n        __self: this\n      }, React.createElement(Translate, {\n        name: 'The entire field is required',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 482\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return SuplliersAddModal;\n}(Component);\n\nexport default SuplliersAddModal;","map":{"version":3,"sources":["C:/Users/User/Desktop/barcode/src/containers/pages/suppliers/suppliersAddModal.js"],"names":["React","Component","Col","FormGroup","Label","Button","ModalBody","ModalFooter","Modal","ModalHeader","Input","Translate","Plus","Trash2","Search","Formsy","SuplliersAddModal","printBankElement","element","length","props","setSupplier","tin","i","push","bank_id","id","event","checkValue","target","name","value","setSuppliersAddModalValue","banks","map","bank","checkValueStatus","currency_id","currency","item","short","tin_value","addTin","reduceTin","printPhoneElement","phone","addPhone","reducePhone","isOpen","openSuppliersAddModal","modalType","type","companyTypes","hh","hvhh","searchRequisite","address","director","fetchSuppliers","supplierActions"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SACIC,GADJ,EAEIC,SAFJ,EAGIC,KAHJ,EAIIC,MAJJ,EAKIC,SALJ,EAMIC,WANJ,EAOIC,KAPJ,EAQIC,WARJ,EAQiBC,KARjB,QASO,YATP;AAUA,OAAOC,SAAP,MAAsB,oBAAtB;AACA,SAAQC,IAAR,EAAcC,MAAd,EAAsBC,MAAtB,QAAmC,eAAnC;AACA,OAAOC,MAAP,MAAmB,cAAnB;;IAEMC,iB;;;;;;;;;;;;;;;;;;UAEFC,gB,GAAmB,YAAM;AACrB,UAAIC,OAAO,GAAG,EAAd;AACA,UAAIC,MAAM,GAAG,MAAKC,KAAL,CAAWC,WAAX,CAAuBC,GAAvB,CAA2BH,MAA3B,GAAoC,MAAKC,KAAL,CAAWC,WAAX,CAAuBC,GAAvB,CAA2BH,MAA/D,GAAwE,CAArF;;AAFqB,iCAGZI,CAHY;AAIjBL,QAAAA,OAAO,CAACM,IAAR,CACI,oBAAC,SAAD;AAAW,UAAA,GAAG,MAAd;AAAe,UAAA,GAAG,EAAED,CAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI,oBAAC,KAAD;AAAO,UAAA,GAAG,EAAE,MAAZ;AAAoB,UAAA,EAAE,EAAE,CAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAEQA,CAAC,KAAK,CAAN,GACI,oBAAC,SAAD;AAAW,UAAA,IAAI,EAAE,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ,GAGI,EALZ,CADJ,EASI,oBAAC,GAAD;AAAK,UAAA,EAAE,EAAE,CAAT;AAAY,UAAA,SAAS,EAAE,MAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI,oBAAC,KAAD;AACI,UAAA,IAAI,EAAE,QADV;AAEI,UAAA,SAAS,EAAE,QAFf;AAGI,UAAA,IAAI,oBAAaA,CAAb,CAHR;AAII,UAAA,KAAK,EACD,MAAKH,KAAL,CAAWC,WAAX,CAAuBC,GAAvB,CAA2BH,MAA3B,GAAoC,CAApC,IAAyC,MAAKC,KAAL,CAAWC,WAAX,CAAuBC,GAAvB,CAA2BC,CAA3B,CAAzC,GACI,MAAKH,KAAL,CAAWC,WAAX,CAAuBC,GAAvB,CAA2BC,CAA3B,EAA8BE,OAA9B,GACI,MAAKL,KAAL,CAAWC,WAAX,CAAuBC,GAAvB,CAA2BC,CAA3B,EAA8BE,OAA9B,CAAsCC,EAD1C,GAGI,CAJR,GAMI,CAXZ;AAaI,UAAA,MAAM,EACF,gBAAAC,KAAK;AAAA,mBAAI,MAAKP,KAAL,CAAWQ,UAAX,CAAsBD,KAAK,CAACE,MAAN,CAAaC,IAAnC,EAAyCH,KAAK,CAACE,MAAN,CAAaE,KAAtD,EAA6DR,CAA7D,CAAJ;AAAA,WAdb;AAgBI,UAAA,QAAQ,EACJ,kBAAAI,KAAK;AAAA,mBAAI,MAAKP,KAAL,CAAWY,yBAAX,CAAqCL,KAAK,CAACE,MAAN,CAAaC,IAAlD,EAAwDH,KAAK,CAACE,MAAN,CAAaE,KAArE,EAA4ER,CAA5E,CAAJ;AAAA,WAjBb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAoBI;AAAQ,UAAA,KAAK,EAAE,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBApBJ,EAsBQ,MAAKH,KAAL,CAAWa,KAAX,GACI,MAAKb,KAAL,CAAWa,KAAX,CAAiBC,GAAjB,CACI,UAAAC,IAAI;AAAA,iBAAI;AACJ,YAAA,GAAG,EAAEA,IAAI,CAACT,EADN;AAEJ,YAAA,KAAK,EAAES,IAAI,CAACT,EAFR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAIHS,IAAI,CAACL,IAJF,CAAJ;AAAA,SADR,CADJ,GAUI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAhCZ,CADJ,EAqCQ,MAAKV,KAAL,CAAWgB,gBAAX,CAA4B,SAA5B,KAA0C,MAAKhB,KAAL,CAAWgB,gBAAX,CAA4B,SAA5B,EAAuCb,CAAvC,CAA1C,GACI;AAAM,UAAA,SAAS,EAAC,qBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAsC,oBAAC,SAAD;AAClC,UAAA,IAAI,EAAE,MAAKH,KAAL,CAAWgB,gBAAX,CAA4B,SAA5B,EAAuCb,CAAvC,CAD4B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAtC,CADJ,GAII,IAzCZ,CATJ,EAqDI,oBAAC,GAAD;AAAK,UAAA,EAAE,EAAE,CAAT;AAAY,UAAA,SAAS,EAAE,WAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI,oBAAC,KAAD;AACI,UAAA,IAAI,EAAE,QADV;AAEI,UAAA,SAAS,EAAE,sBAFf;AAGI,UAAA,IAAI,wBAAiBA,CAAjB,CAHR;AAII,UAAA,KAAK,EACD,MAAKH,KAAL,CAAWC,WAAX,CAAuBC,GAAvB,IAA8B,MAAKF,KAAL,CAAWC,WAAX,CAAuBC,GAAvB,CAA2BC,CAA3B,CAA9B,GACI,MAAKH,KAAL,CAAWC,WAAX,CAAuBC,GAAvB,CAA2BC,CAA3B,EAA8Bc,WAA9B,GACI,MAAKjB,KAAL,CAAWC,WAAX,CAAuBC,GAAvB,CAA2BC,CAA3B,EAA8Bc,WAA9B,CAA0CX,EAD9C,GAGI,CAJR,GAMI,CAXZ;AAaI,UAAA,MAAM,EACF,gBAAAC,KAAK;AAAA,mBAAI,MAAKP,KAAL,CAAWQ,UAAX,CAAsBD,KAAK,CAACE,MAAN,CAAaC,IAAnC,EAAyCH,KAAK,CAACE,MAAN,CAAaE,KAAtD,EAA6DR,CAA7D,CAAJ;AAAA,WAdb;AAgBI,UAAA,QAAQ,EACJ,kBAAAI,KAAK;AAAA,mBAAI,MAAKP,KAAL,CAAWY,yBAAX,CAAqCL,KAAK,CAACE,MAAN,CAAaC,IAAlD,EAAwDH,KAAK,CAACE,MAAN,CAAaE,KAArE,EAA4ER,CAA5E,CAAJ;AAAA,WAjBb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAoBI;AAAQ,UAAA,KAAK,EAAE,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBApBJ,EAsBQ,MAAKH,KAAL,CAAWkB,QAAX,GACI,MAAKlB,KAAL,CAAWkB,QAAX,CAAoBJ,GAApB,CACI,UAAAK,IAAI;AAAA,iBAAI;AACJ,YAAA,GAAG,EAAEA,IAAI,CAACb,EADN;AAEJ,YAAA,KAAK,EAAEa,IAAI,CAACb,EAFR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAIHa,IAAI,CAACC,KAJF,CAAJ;AAAA,SADR,CADJ,GAUI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAhCZ,CADJ,EAqCQ,MAAKpB,KAAL,CAAWgB,gBAAX,CAA4B,aAA5B,KAA8C,MAAKhB,KAAL,CAAWgB,gBAAX,CAA4B,aAA5B,EAA2Cb,CAA3C,CAA9C,GACI;AAAM,UAAA,SAAS,EAAC,qBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAsC,oBAAC,SAAD;AAClC,UAAA,IAAI,EAAE,MAAKH,KAAL,CAAWgB,gBAAX,CAA4B,aAA5B,EAA2Cb,CAA3C,CAD4B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAtC,CADJ,GAII,IAzCZ,CArDJ,EAiGI,oBAAC,GAAD;AAAK,UAAA,EAAE,EAAE,CAAT;AAAY,UAAA,SAAS,EAAE,MAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI;AAAK,UAAA,SAAS,EAAE,kCAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI;AACI,UAAA,SAAS,EAAE,mCADf;AAEI,UAAA,IAAI,EAAE,MAFV;AAGI,UAAA,EAAE,EAAE,OAHR;AAII,UAAA,WAAW,EAAE,UAJjB;AAKI,UAAA,IAAI,sBAAeA,CAAf,CALR;AAMI,UAAA,KAAK,EACD,MAAKH,KAAL,CAAWC,WAAX,CAAuBC,GAAvB,IAA8B,MAAKF,KAAL,CAAWC,WAAX,CAAuBC,GAAvB,CAA2BC,CAA3B,CAA9B,GACI,MAAKH,KAAL,CAAWC,WAAX,CAAuBC,GAAvB,CAA2BC,CAA3B,EAA8BkB,SAA9B,GACI,MAAKrB,KAAL,CAAWC,WAAX,CAAuBC,GAAvB,CAA2BC,CAA3B,EAA8BkB,SADlC,GAGI,EAJR,GAMI,EAbZ;AAeI,UAAA,MAAM,EACF,gBAAAd,KAAK;AAAA,mBAAI,MAAKP,KAAL,CAAWQ,UAAX,CAAsBD,KAAK,CAACE,MAAN,CAAaC,IAAnC,EAAyCH,KAAK,CAACE,MAAN,CAAaE,KAAtD,EAA6DR,CAA7D,CAAJ;AAAA,WAhBb;AAkBI,UAAA,QAAQ,EACJ,kBAAAI,KAAK;AAAA,mBAAI,MAAKP,KAAL,CAAWY,yBAAX,CAAqCL,KAAK,CAACE,MAAN,CAAaC,IAAlD,EAAwDH,KAAK,CAACE,MAAN,CAAaE,KAArE,EAA4ER,CAA5E,CAAJ;AAAA,WAnBb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ,EAwBQ;AAAK,UAAA,SAAS,EAAE,uBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAEQA,CAAC,GAAG,CAAJ,KAAUJ,MAAV,GACI,oBAAC,IAAD;AACI,UAAA,IAAI,EAAE,EADV;AAEI,UAAA,SAAS,EAAE,wBAFf;AAGI,UAAA,OAAO,EACH;AAAA,mBAAM,MAAKC,KAAL,CAAWsB,MAAX,CAAkB,EAAlB,EAAsBnB,CAAtB,CAAN;AAAA,WAJR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ,GASI,oBAAC,MAAD;AACI,UAAA,IAAI,EAAE,EADV;AAEI,UAAA,SAAS,EAAE,uBAFf;AAGI,UAAA,OAAO,EACH;AAAA,mBAAM,MAAKH,KAAL,CAAWuB,SAAX,CAAqBpB,CAArB,CAAN;AAAA,WAJR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAXZ,CAxBR,CADJ,EAgDQ,MAAKH,KAAL,CAAWgB,gBAAX,CAA4B,WAA5B,KAA4C,MAAKhB,KAAL,CAAWgB,gBAAX,CAA4B,WAA5B,EAAyCb,CAAzC,CAA5C,GACI;AAAM,UAAA,SAAS,EAAC,qBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAsC,oBAAC,SAAD;AAClC,UAAA,IAAI,EAAE,MAAKH,KAAL,CAAWgB,gBAAX,CAA4B,WAA5B,EAAyCb,CAAzC,CAD4B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAtC,CADJ,GAII,IApDZ,CAjGJ,CADJ;AAJiB;;AAGrB,WAAK,IAAIA,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGJ,MAApB,EAA4BI,CAAC,EAA7B,EAAiC;AAAA,cAAxBA,CAAwB;AA4JhC;;AAED,aAAOL,OAAP;AACH,K;;UAED0B,iB,GAAoB,YAAM;AACtB,UAAI1B,OAAO,GAAG,EAAd;AACA,UAAIC,MAAM,GAAG,MAAKC,KAAL,CAAWC,WAAX,CAAuBwB,KAAvB,CAA6B1B,MAA7B,GAAsC,MAAKC,KAAL,CAAWC,WAAX,CAAuBwB,KAAvB,CAA6B1B,MAAnE,GAA4E,CAAzF;;AAFsB,mCAGbI,CAHa;AAIlBL,QAAAA,OAAO,CAACM,IAAR,CACI,oBAAC,SAAD;AAAW,UAAA,GAAG,MAAd;AAAe,UAAA,GAAG,EAAED,CAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI,oBAAC,KAAD;AAAO,UAAA,GAAG,EAAE,OAAZ;AAAqB,UAAA,EAAE,EAAE,CAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAEQA,CAAC,KAAK,CAAN,GACI,oBAAC,SAAD;AAAW,UAAA,IAAI,EAAE,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ,GAGI,EALZ,CADJ,EASI,oBAAC,GAAD;AAAK,UAAA,EAAE,EAAE,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI;AAAK,UAAA,SAAS,EAAE,kCAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI;AACI,UAAA,IAAI,EAAE,KADV;AAEI,UAAA,SAAS,EAAE,qBAFf;AAGI,UAAA,WAAW,EAAE,sBAHjB;AAII,UAAA,IAAI,kBAAWA,CAAX,CAJR;AAKI,UAAA,KAAK,EAAE,MAAKH,KAAL,CAAWC,WAAX,CAAuBwB,KAAvB,CAA6BtB,CAA7B,IAAkC,MAAKH,KAAL,CAAWC,WAAX,CAAuBwB,KAAvB,CAA6BtB,CAA7B,EAAgCsB,KAAlE,GAA0E,EALrF;AAMI,UAAA,MAAM,EACF,gBAAAlB,KAAK;AAAA,mBAAI,MAAKP,KAAL,CAAWQ,UAAX,CAAsBD,KAAK,CAACE,MAAN,CAAaC,IAAnC,EAAyCH,KAAK,CAACE,MAAN,CAAaE,KAAtD,EAA6DR,CAA7D,CAAJ;AAAA,WAPb;AASI,UAAA,QAAQ,EACJ,kBAAAI,KAAK;AAAA,mBAAI,MAAKP,KAAL,CAAWY,yBAAX,CAAqCL,KAAK,CAACE,MAAN,CAAaC,IAAlD,EAAwDH,KAAK,CAACE,MAAN,CAAaE,KAArE,EAA4ER,CAA5E,CAAJ;AAAA,WAVb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ,EAcI;AAAK,UAAA,SAAS,EAAE,uBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAEQA,CAAC,GAAG,CAAJ,KAAUJ,MAAV,GACI,oBAAC,IAAD;AACI,UAAA,IAAI,EAAE,EADV;AAEI,UAAA,SAAS,EAAE,wBAFf;AAGI,UAAA,OAAO,EACH;AAAA,mBAAM,MAAKC,KAAL,CAAW0B,QAAX,CAAoB,IAApB,EAA0BvB,CAA1B,CAAN;AAAA,WAJR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ,GASI,oBAAC,MAAD;AACI,UAAA,IAAI,EAAE,EADV;AAEI,UAAA,SAAS,EAAE,uBAFf;AAGI,UAAA,OAAO,EACH;AAAA,mBAAM,MAAKH,KAAL,CAAW2B,WAAX,CAAuBxB,CAAvB,CAAN;AAAA,WAJR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAXZ,CAdJ,CADJ,EAqCQ,MAAKH,KAAL,CAAWgB,gBAAX,CAA4B,OAA5B,KAAwC,MAAKhB,KAAL,CAAWgB,gBAAX,CAA4B,OAA5B,EAAqCb,CAArC,CAAxC,GACI;AAAM,UAAA,SAAS,EAAC,qBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAsC,oBAAC,SAAD;AAClC,UAAA,IAAI,EAAE,MAAKH,KAAL,CAAWgB,gBAAX,CAA4B,OAA5B,EAAqCb,CAArC,CAD4B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAtC,CADJ,GAII,IAzCZ,CATJ,CADJ;AAJkB;;AAGtB,WAAK,IAAIA,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGJ,MAApB,EAA4BI,CAAC,EAA7B,EAAiC;AAAA,eAAxBA,CAAwB;AAyDhC;;AAED,aAAOL,OAAP;AACH,K;;;;;;;6BAEO;AAAA;;AACL,aACI,oBAAC,KAAD;AACI,QAAA,MAAM,EAAE,KAAKE,KAAL,CAAW4B,MADvB;AAEI,QAAA,IAAI,EAAC,IAFT;AAGI,QAAA,MAAM,EACF;AAAA,iBAAM,MAAI,CAAC5B,KAAL,CAAW6B,qBAAX,EAAN;AAAA,SAJR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAOI,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,SAAD;AAAW,QAAA,IAAI,YAAK,KAAK7B,KAAL,CAAW8B,SAAhB,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CAPJ,EAUI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEI,oBAAC,SAAD;AAAW,QAAA,GAAG,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,KAAD;AAAO,QAAA,GAAG,EAAE,WAAZ;AAAyB,QAAA,EAAE,EAAE,CAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,SAAD;AAAW,QAAA,IAAI,EAAE,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CADJ,EAII,oBAAC,GAAD;AAAK,QAAA,EAAE,EAAE,CAAT;AAAY,QAAA,SAAS,EAAE,MAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AACI,QAAA,EAAE,EAAE,WADR;AAEI,QAAA,SAAS,gCAAyB,KAAK9B,KAAL,CAAWgB,gBAAX,CAA4B,MAA5B,IAAsC,YAAtC,GAAqD,IAA9E,CAFb;AAGI,QAAA,IAAI,EAAE,MAHV;AAII,QAAA,IAAI,EAAE,MAJV;AAKI,QAAA,KAAK,EAAE,KAAKhB,KAAL,CAAWC,WAAX,CAAuBS,IALlC;AAMI,QAAA,MAAM,EACD,gBAAAH,KAAK;AAAA,iBAAI,MAAI,CAACP,KAAL,CAAWQ,UAAX,CAAsBD,KAAK,CAACE,MAAN,CAAaC,IAAnC,EAAyCH,KAAK,CAACE,MAAN,CAAaE,KAAtD,CAAJ;AAAA,SAPd;AASI,QAAA,QAAQ,EACJ,kBAAAJ,KAAK;AAAA,iBAAI,MAAI,CAACP,KAAL,CAAWY,yBAAX,CAAqCL,KAAK,CAACE,MAAN,CAAaC,IAAlD,EAAwDH,KAAK,CAACE,MAAN,CAAaE,KAArE,CAAJ;AAAA,SAVb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAeQ,KAAKX,KAAL,CAAWgB,gBAAX,CAA4B,MAA5B,IACI;AAAM,QAAA,SAAS,EAAC,qBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAsC,oBAAC,SAAD;AAClC,QAAA,IAAI,EAAE,KAAKhB,KAAL,CAAWgB,gBAAX,CAA4BN,IADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAtC,CADJ,GAII,IAnBZ,CAJJ,EA0BI,oBAAC,GAAD;AAAK,QAAA,EAAE,EAAE,CAAT;AAAY,QAAA,SAAS,EAAE,MAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,KAAD;AACI,QAAA,SAAS,EAAE,sBADf;AAEI,QAAA,IAAI,EAAE,QAFV;AAGI,QAAA,IAAI,EAAE,MAHV;AAII,QAAA,KAAK,EAAE,CAAC,KAAKV,KAAL,CAAWC,WAAX,CAAuB8B,IAAxB,IAAgC,CAJ3C;AAKI,QAAA,QAAQ,EACJ,kBAAAxB,KAAK;AAAA,iBAAI,MAAI,CAACP,KAAL,CAAWY,yBAAX,CAAqCL,KAAK,CAACE,MAAN,CAAaC,IAAlD,EAAwD,CAACH,KAAK,CAACE,MAAN,CAAaE,KAAtE,CAAJ;AAAA,SANb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SASI;AAAQ,QAAA,KAAK,EAAE,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBATJ,EAWQ,KAAKX,KAAL,CAAWgC,YAAX,GACI,KAAKhC,KAAL,CAAWgC,YAAX,CAAwBlB,GAAxB,CACI,UAAAiB,IAAI,EAAI;AAEJ,eACI;AACI,UAAA,GAAG,EAAEA,IAAI,CAACzB,EADd;AAEI,UAAA,KAAK,EAAEyB,IAAI,CAACpB,KAFhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAIKoB,IAAI,CAACrB,IAJV,CADJ;AAQH,OAXL,CADJ,GAeI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBA1BZ,CADJ,CA1BJ,CAFJ,EA6DI,oBAAC,SAAD;AAAW,QAAA,GAAG,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,KAAD;AAAO,QAAA,GAAG,EAAE,IAAZ;AAAkB,QAAA,EAAE,EAAE,CAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,SAAD;AAAW,QAAA,IAAI,EAAE,IAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CADJ,EAII,oBAAC,GAAD;AAAK,QAAA,EAAE,EAAE,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AACI,QAAA,EAAE,EAAE,IADR;AAEI,QAAA,SAAS,gCAAyB,KAAKV,KAAL,CAAWgB,gBAAX,CAA4B,IAA5B,IAAoC,YAApC,GAAmD,IAA5E,CAFb;AAGI,QAAA,IAAI,EAAE,MAHV;AAII,QAAA,IAAI,EAAE,IAJV;AAKI,QAAA,KAAK,EAAE,KAAKhB,KAAL,CAAWC,WAAX,CAAuBgC,EALlC;AAMI,QAAA,MAAM,EACD,gBAAA1B,KAAK;AAAA,iBAAI,MAAI,CAACP,KAAL,CAAWQ,UAAX,CAAsBD,KAAK,CAACE,MAAN,CAAaC,IAAnC,EAAyCH,KAAK,CAACE,MAAN,CAAaE,KAAtD,CAAJ;AAAA,SAPd;AASI,QAAA,QAAQ,EACJ,kBAAAJ,KAAK;AAAA,iBAAI,MAAI,CAACP,KAAL,CAAWY,yBAAX,CAAqCL,KAAK,CAACE,MAAN,CAAaC,IAAlD,EAAwDH,KAAK,CAACE,MAAN,CAAaE,KAArE,CAAJ;AAAA,SAVb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAeQ,KAAKX,KAAL,CAAWgB,gBAAX,CAA4B,IAA5B,IACI;AAAM,QAAA,SAAS,EAAC,qBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAsC,oBAAC,SAAD;AAClC,QAAA,IAAI,EAAE,KAAKhB,KAAL,CAAWgB,gBAAX,CAA4B,IAA5B,CAD4B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAtC,CADJ,GAII,IAnBZ,CAJJ,CA7DJ,EAyFI,oBAAC,SAAD;AAAW,QAAA,GAAG,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,KAAD;AAAO,QAAA,GAAG,EAAE,MAAZ;AAAoB,QAAA,EAAE,EAAE,CAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,SAAD;AAAW,QAAA,IAAI,EAAE,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CADJ,EAII,oBAAC,GAAD;AAAK,QAAA,EAAE,EAAE,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAE,kCAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AACI,QAAA,EAAE,EAAE,MADR;AAEI,QAAA,SAAS,uBAFb;AAGI,QAAA,IAAI,EAAE,MAHV;AAII,QAAA,IAAI,EAAE,MAJV;AAKI,QAAA,KAAK,EAAE,KAAKhB,KAAL,CAAWC,WAAX,CAAuBiC,IALlC;AAMI,QAAA,MAAM,EACD,gBAAA3B,KAAK;AAAA,iBAAI,MAAI,CAACP,KAAL,CAAWQ,UAAX,CAAsBD,KAAK,CAACE,MAAN,CAAaC,IAAnC,EAAyCH,KAAK,CAACE,MAAN,CAAaE,KAAtD,CAAJ;AAAA,SAPd;AASI,QAAA,QAAQ,EACJ,kBAAAJ,KAAK;AAAA,iBAAI,MAAI,CAACP,KAAL,CAAWY,yBAAX,CAAqCL,KAAK,CAACE,MAAN,CAAaC,IAAlD,EAAwDH,KAAK,CAACE,MAAN,CAAaE,KAArE,CAAJ;AAAA,SAVb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAcI;AAAK,QAAA,SAAS,EAAE,uBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,MAAD;AACI,QAAA,IAAI,EAAE,EADV;AAEI,QAAA,SAAS,EAAE,qBAFf;AAGI,QAAA,MAAM,EACD,gBAAAJ,KAAK;AAAA,iBAAI,MAAI,CAACP,KAAL,CAAWQ,UAAX,CAAsBD,KAAK,CAACE,MAAN,CAAaC,IAAnC,EAAyCH,KAAK,CAACE,MAAN,CAAaE,KAAtD,CAAJ;AAAA,SAJd;AAMI,QAAA,OAAO,EACH;AAAA,iBAAM,MAAI,CAACX,KAAL,CAAWmC,eAAX,CAA2B,MAAI,CAACnC,KAAL,CAAWC,WAAX,CAAuBiC,IAAlD,CAAN;AAAA,SAPR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CAdJ,CADJ,EA6BQ,KAAKlC,KAAL,CAAWgB,gBAAX,CAA4B,MAA5B,IACI;AAAM,QAAA,SAAS,EAAC,qBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAsC,oBAAC,SAAD;AAClC,QAAA,IAAI,EAAE,KAAKhB,KAAL,CAAWgB,gBAAX,CAA4B,MAA5B,CAD4B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAtC,CADJ,GAII,IAjCZ,CAJJ,CAzFJ,EAmII,oBAAC,SAAD;AAAW,QAAA,GAAG,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,KAAD;AAAO,QAAA,GAAG,EAAE,SAAZ;AAAuB,QAAA,EAAE,EAAE,CAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,SAAD;AAAW,QAAA,IAAI,EAAE,SAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CADJ,EAII,oBAAC,GAAD;AAAK,QAAA,EAAE,EAAE,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AACI,QAAA,EAAE,EAAE,SADR;AAEI,QAAA,SAAS,gCAAyB,KAAKhB,KAAL,CAAWgB,gBAAX,CAA4B,SAA5B,IAAyC,YAAzC,GAAwD,IAAjF,CAFb;AAGI,QAAA,IAAI,EAAE,MAHV;AAII,QAAA,IAAI,EAAE,SAJV;AAKI,QAAA,KAAK,EAAE,KAAKhB,KAAL,CAAWC,WAAX,CAAuBmC,OALlC;AAMI,QAAA,MAAM,EACD,gBAAA7B,KAAK;AAAA,iBAAI,MAAI,CAACP,KAAL,CAAWQ,UAAX,CAAsBD,KAAK,CAACE,MAAN,CAAaC,IAAnC,EAAyCH,KAAK,CAACE,MAAN,CAAaE,KAAtD,CAAJ;AAAA,SAPd;AASI,QAAA,QAAQ,EACJ,kBAAAJ,KAAK;AAAA,iBAAI,MAAI,CAACP,KAAL,CAAWY,yBAAX,CAAqCL,KAAK,CAACE,MAAN,CAAaC,IAAlD,EAAwDH,KAAK,CAACE,MAAN,CAAaE,KAArE,CAAJ;AAAA,SAVb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAeQ,KAAKX,KAAL,CAAWgB,gBAAX,CAA4B,SAA5B,IACI;AAAM,QAAA,SAAS,EAAC,qBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAsC,oBAAC,SAAD;AAClC,QAAA,IAAI,EAAE,KAAKhB,KAAL,CAAWgB,gBAAX,CAA4B,SAA5B,CAD4B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAtC,CADJ,GAII,IAnBZ,CAJJ,CAnIJ,EA+JK,KAAKnB,gBAAL,EA/JL,EAiKI,oBAAC,SAAD;AAAW,QAAA,GAAG,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,KAAD;AAAO,QAAA,GAAG,EAAE,UAAZ;AAAwB,QAAA,EAAE,EAAE,CAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,SAAD;AAAW,QAAA,IAAI,EAAE,UAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CADJ,EAII,oBAAC,GAAD;AAAK,QAAA,EAAE,EAAE,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AACI,QAAA,SAAS,gCAAyB,KAAKG,KAAL,CAAWgB,gBAAX,CAA4B,UAA5B,IAA0C,YAA1C,GAAyD,IAAlF,CADb;AAEI,QAAA,IAAI,EAAE,MAFV;AAGI,QAAA,EAAE,EAAE,UAHR;AAII,QAAA,IAAI,EAAE,UAJV;AAKI,QAAA,MAAM,EACD,gBAAAT,KAAK;AAAA,iBAAI,MAAI,CAACP,KAAL,CAAWQ,UAAX,CAAsBD,KAAK,CAACE,MAAN,CAAaC,IAAnC,EAAyCH,KAAK,CAACE,MAAN,CAAaE,KAAtD,CAAJ;AAAA,SANd;AAQI,QAAA,KAAK,EACD,KAAKX,KAAL,CAAWC,WAAX,CAAuBoC,QAAvB,GACI,KAAKrC,KAAL,CAAWC,WAAX,CAAuBoC,QAD3B,GAGI,EAZZ;AAcI,QAAA,QAAQ,EACJ,kBAAA9B,KAAK;AAAA,iBAAI,MAAI,CAACP,KAAL,CAAWY,yBAAX,CAAqCL,KAAK,CAACE,MAAN,CAAaC,IAAlD,EAAwDH,KAAK,CAACE,MAAN,CAAaE,KAArE,CAAJ;AAAA,SAfb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAoBQ,KAAKX,KAAL,CAAWgB,gBAAX,CAA4B,UAA5B,IACI;AAAM,QAAA,SAAS,EAAC,qBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAsC,oBAAC,SAAD;AAClC,QAAA,IAAI,EAAE,KAAKhB,KAAL,CAAWgB,gBAAX,CAA4B,UAA5B,CAD4B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAtC,CADJ,GAII,IAxBZ,CAJJ,CAjKJ,EAmMQ,KAAKQ,iBAAL,EAnMR,CADJ,CAVJ,EAmNI,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEQ,KAAKxB,KAAL,CAAWC,WAAX,CAAuBS,IAAvB,CAA4BX,MAA5B,IAAsC,KAAKC,KAAL,CAAWC,WAAX,CAAuBgC,EAAvB,CAA0BlC,MAAhE,IAA0E,KAAKC,KAAL,CAAWC,WAAX,CAAuBiC,IAAvB,CAA4BnC,MAAtG,IAAgH,KAAKC,KAAL,CAAWC,WAAX,CAAuBmC,OAAvB,CAA+BrC,MAA/I,IAAyJ,KAAKC,KAAL,CAAWC,WAAX,CAAuBC,GAAvB,CAA2BH,MAA3B,GAAoC,CAA7L,IAAkM,KAAKC,KAAL,CAAWC,WAAX,CAAuBoC,QAAvB,CAAgCtC,MAAlO,IAA4O,KAAKC,KAAL,CAAWC,WAAX,CAAuBwB,KAAvB,CAA6B1B,MAAzQ,IAAmR,KAAKC,KAAL,CAAWC,WAAX,CAAuB8B,IAA1S,GACI,oBAAC,MAAD;AACI,QAAA,KAAK,EAAC,SADV;AAEI,QAAA,SAAS,EAAC,YAFd;AAGI,QAAA,OAAO,MAHX;AAGY,QAAA,IAAI,EAAC,QAHjB;AAII,QAAA,OAAO,EAEH,mBAAM;AAEF,UAAA,MAAI,CAAC/B,KAAL,CAAW8B,SAAX,KAAyB,KAAzB,GACI,MAAI,CAAC9B,KAAL,CAAWsC,cAAX,CAA0B,MAAI,CAACtC,KAAL,CAAWC,WAArC,CADJ,GAGI,MAAI,CAACD,KAAL,CAAWuC,eAAX,CAA2B,MAA3B,EAAmC,MAAI,CAACvC,KAAL,CAAWC,WAA9C,CAHJ;AAKH,SAbT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAgBI,oBAAC,SAAD;AAAW,QAAA,IAAI,EAAE,SAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAhBJ,CADJ,GAoBI;AAAM,QAAA,SAAS,EAAC,qBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAsC,oBAAC,SAAD;AAAW,QAAA,IAAI,EAAE,8BAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAtC,CAtBZ,CAnNJ,CADJ;AA+OH;;;;EAvd4BpB,S;;AA0dhC,eAAee,iBAAf","sourcesContent":["import React, {Component} from \"react\";\r\nimport {\r\n    Col,\r\n    FormGroup,\r\n    Label,\r\n    Button,\r\n    ModalBody,\r\n    ModalFooter,\r\n    Modal,\r\n    ModalHeader, Input\r\n} from \"reactstrap\";\r\nimport Translate from \"../../../Translate\";\r\nimport {Plus, Trash2, Search} from \"react-feather\";\r\nimport Formsy from 'formsy-react';\r\n\r\nclass SuplliersAddModal extends Component{\r\n\r\n    printBankElement = () => {\r\n        let element = [];\r\n        let length = this.props.setSupplier.tin.length ? this.props.setSupplier.tin.length : 1;\r\n        for (let i = 0; i < length; i++) {\r\n            element.push(\r\n                <FormGroup row key={i}>\r\n                    <Label for={'bank'} sm={3}>\r\n                        {\r\n                            i === 0 ?\r\n                                <Translate name={'bank'}/>\r\n                                :\r\n                                ''\r\n                        }\r\n                    </Label>\r\n                    <Col sm={3} className={'pr-0'}>\r\n                        <Input\r\n                            type={'select'}\r\n                            className={'square'}\r\n                            name={`bank_id-${i}`}\r\n                            value={\r\n                                this.props.setSupplier.tin.length > 0 && this.props.setSupplier.tin[i] ?\r\n                                    this.props.setSupplier.tin[i].bank_id ?\r\n                                        this.props.setSupplier.tin[i].bank_id.id\r\n                                        :\r\n                                        0\r\n                                    :\r\n                                    0\r\n                            }\r\n                            onBlur={\r\n                                event => this.props.checkValue(event.target.name, event.target.value, i)\r\n                            }\r\n                            onChange={\r\n                                event => this.props.setSuppliersAddModalValue(event.target.name, event.target.value, i)\r\n                            }\r\n                        >\r\n                            <option value={0}>choose...</option>\r\n                            {\r\n                                this.props.banks ?\r\n                                    this.props.banks.map(\r\n                                        bank => <option\r\n                                            key={bank.id}\r\n                                            value={bank.id}\r\n                                        >\r\n                                            {bank.name}\r\n                                        </option>\r\n                                    )\r\n                                    :\r\n                                    <option>Empty</option>\r\n                            }\r\n                        </Input>\r\n                        {\r\n                            this.props.checkValueStatus['bank_id'] && this.props.checkValueStatus['bank_id'][i] ?\r\n                                <span className='danger font-small-1'><Translate\r\n                                    name={this.props.checkValueStatus['bank_id'][i]}/></span>\r\n                                :\r\n                                null\r\n                        }\r\n                    </Col>\r\n                    <Col sm={2} className={'pr-0 pl-0'}>\r\n                        <Input\r\n                            type={'select'}\r\n                            className={'square border-left-0'}\r\n                            name={`currency_id-${i}`}\r\n                            value={\r\n                                this.props.setSupplier.tin && this.props.setSupplier.tin[i] ?\r\n                                    this.props.setSupplier.tin[i].currency_id ?\r\n                                        this.props.setSupplier.tin[i].currency_id.id\r\n                                        :\r\n                                        0\r\n                                    :\r\n                                    0\r\n                            }\r\n                            onBlur={\r\n                                event => this.props.checkValue(event.target.name, event.target.value, i)\r\n                            }\r\n                            onChange={\r\n                                event => this.props.setSuppliersAddModalValue(event.target.name, event.target.value, i)\r\n                            }\r\n                        >\r\n                            <option value={0}>choose...</option>\r\n                            {\r\n                                this.props.currency ?\r\n                                    this.props.currency.map(\r\n                                        item => <option\r\n                                            key={item.id}\r\n                                            value={item.id}\r\n                                        >\r\n                                            {item.short}\r\n                                        </option>\r\n                                    )\r\n                                    :\r\n                                    <option>Empty</option>\r\n                            }\r\n                        </Input>\r\n                        {\r\n                            this.props.checkValueStatus['currency_id'] && this.props.checkValueStatus['currency_id'][i] ?\r\n                                <span className='danger font-small-1'><Translate\r\n                                    name={this.props.checkValueStatus['currency_id'][i]}/></span>\r\n                                :\r\n                                null\r\n                        }\r\n                    </Col>\r\n                    <Col sm={4} className={'pl-0'}>\r\n                        <div className={'position-relative has-icon-right'}>\r\n                            <input\r\n                                className={'form-control square border-left-0'}\r\n                                type={'text'}\r\n                                id={'bank1'}\r\n                                placeholder={'currency'}\r\n                                name={`tin_value-${i}`}\r\n                                value={\r\n                                    this.props.setSupplier.tin && this.props.setSupplier.tin[i] ?\r\n                                        this.props.setSupplier.tin[i].tin_value ?\r\n                                            this.props.setSupplier.tin[i].tin_value\r\n                                            :\r\n                                            ''\r\n                                        :\r\n                                        ''\r\n                                }\r\n                                onBlur={\r\n                                    event => this.props.checkValue(event.target.name, event.target.value, i)\r\n                                }\r\n                                onChange={\r\n                                    event => this.props.setSuppliersAddModalValue(event.target.name, event.target.value, i)\r\n                                }\r\n                            />\r\n                            {\r\n                                <div className={'form-control-position'}>\r\n                                    {\r\n                                        i + 1 === length ?\r\n                                            <Plus\r\n                                                size={20}\r\n                                                className={'success cursor-pointer'}\r\n                                                onClick={\r\n                                                    () => this.props.addTin({}, i)\r\n                                                }\r\n                                            />\r\n                                            :\r\n                                            <Trash2\r\n                                                size={20}\r\n                                                className={'danger cursor-pointer'}\r\n                                                onClick={\r\n                                                    () => this.props.reduceTin(i)\r\n                                                }\r\n                                            />\r\n                                    }\r\n                                </div>\r\n                            }\r\n                        </div>\r\n                        {\r\n                            this.props.checkValueStatus['tin_value'] && this.props.checkValueStatus['tin_value'][i] ?\r\n                                <span className='danger font-small-1'><Translate\r\n                                    name={this.props.checkValueStatus['tin_value'][i]}/></span>\r\n                                :\r\n                                null\r\n                        }\r\n                    </Col>\r\n                </FormGroup>\r\n            )\r\n        }\r\n\r\n        return element\r\n    }\r\n\r\n    printPhoneElement = () => {\r\n        let element = [];\r\n        let length = this.props.setSupplier.phone.length ? this.props.setSupplier.phone.length : 1;\r\n        for (let i = 0; i < length; i++) {\r\n            element.push(\r\n                <FormGroup row key={i}>\r\n                    <Label for={'phone'} sm={3}>\r\n                        {\r\n                            i === 0 ?\r\n                                <Translate name={'phone'}/>\r\n                                :\r\n                                ''\r\n                        }\r\n                    </Label>\r\n                    <Col sm={9}>\r\n                        <div className={\"position-relative has-icon-right\"}>\r\n                            <input\r\n                                type={\"tel\"}\r\n                                className={\"form-control square\"}\r\n                                placeholder={'example: 098 --- ---'}\r\n                                name={`phone-${i}`}\r\n                                value={this.props.setSupplier.phone[i] ? this.props.setSupplier.phone[i].phone : ''}\r\n                                onBlur={\r\n                                    event => this.props.checkValue(event.target.name, event.target.value, i)\r\n                                }\r\n                                onChange={\r\n                                    event => this.props.setSuppliersAddModalValue(event.target.name, event.target.value, i)\r\n                                }\r\n                            />\r\n                            <div className={\"form-control-position\"}>\r\n                                {\r\n                                    i + 1 === length ?\r\n                                        <Plus\r\n                                            size={20}\r\n                                            className={'success cursor-pointer'}\r\n                                            onClick={\r\n                                                () => this.props.addPhone(null, i)\r\n                                            }\r\n                                        />\r\n                                        :\r\n                                        <Trash2\r\n                                            size={20}\r\n                                            className={'danger cursor-pointer'}\r\n                                            onClick={\r\n                                                () => this.props.reducePhone(i)\r\n                                            }\r\n                                        />\r\n                                }\r\n                            </div>\r\n                        </div>\r\n                        {\r\n                            this.props.checkValueStatus['phone'] && this.props.checkValueStatus['phone'][i] ?\r\n                                <span className='danger font-small-1'><Translate\r\n                                    name={this.props.checkValueStatus['phone'][i]}/></span>\r\n                                :\r\n                                null\r\n                        }\r\n                    </Col>\r\n                </FormGroup>\r\n            )\r\n        }\r\n\r\n        return element;\r\n    }\r\n\r\n   render() {\r\n       return (\r\n           <Modal\r\n               isOpen={this.props.isOpen}\r\n               size='lg'\r\n               toggle={\r\n                   () => this.props.openSuppliersAddModal()\r\n               }\r\n           >\r\n               <ModalHeader>\r\n                   <Translate name={`${this.props.modalType}Supplier`}/>\r\n               </ModalHeader>\r\n               <ModalBody>\r\n                   <Formsy >\r\n\r\n                       <FormGroup row>\r\n                           <Label for={'firstName'} sm={3}>\r\n                               <Translate name={'name'}/>\r\n                           </Label>\r\n                           <Col sm={7} className={'pr-0'}>\r\n                               <input\r\n                                   id={'firstName'}\r\n                                   className={`form-control square ${this.props.checkValueStatus['name'] ? 'is-invalid' : null}`}\r\n                                   type={'text'}\r\n                                   name={'name'}\r\n                                   value={this.props.setSupplier.name}\r\n                                   onBlur={\r\n                                       (event => this.props.checkValue(event.target.name, event.target.value))\r\n                                   }\r\n                                   onChange={\r\n                                       event => this.props.setSuppliersAddModalValue(event.target.name, event.target.value)\r\n                                   }\r\n                               />\r\n                               {\r\n                                   this.props.checkValueStatus['name'] ?\r\n                                       <span className='danger font-small-1'><Translate\r\n                                           name={this.props.checkValueStatus.name}/></span>\r\n                                       :\r\n                                       null\r\n                               }\r\n                           </Col>\r\n                           <Col sm={2} className={'pl-0'}>\r\n                               <Input\r\n                                   className={'square border-left-0'}\r\n                                   type={'select'}\r\n                                   name={'type'}\r\n                                   value={+this.props.setSupplier.type || 0}\r\n                                   onChange={\r\n                                       event => this.props.setSuppliersAddModalValue(event.target.name, +event.target.value)\r\n                                   }\r\n                               >\r\n                                   <option value={0}>choose...</option>\r\n                                   {\r\n                                       this.props.companyTypes ?\r\n                                           this.props.companyTypes.map(\r\n                                               type => {\r\n\r\n                                                   return (\r\n                                                       <option\r\n                                                           key={type.id}\r\n                                                           value={type.value}\r\n                                                       >\r\n                                                           {type.name}\r\n                                                       </option>\r\n                                                   )\r\n                                               }\r\n                                           )\r\n                                           :\r\n                                           <option>Empty</option>\r\n                                   }\r\n                               </Input>\r\n                           </Col>\r\n                       </FormGroup>\r\n\r\n                       <FormGroup row>\r\n                           <Label for={'hh'} sm={3}>\r\n                               <Translate name={'hh'}/>\r\n                           </Label>\r\n                           <Col sm={9}>\r\n                               <input\r\n                                   id={'hh'}\r\n                                   className={`form-control square ${this.props.checkValueStatus['hh'] ? 'is-invalid' : null}`}\r\n                                   type={'text'}\r\n                                   name={'hh'}\r\n                                   value={this.props.setSupplier.hh}\r\n                                   onBlur={\r\n                                       (event => this.props.checkValue(event.target.name, event.target.value))\r\n                                   }\r\n                                   onChange={\r\n                                       event => this.props.setSuppliersAddModalValue(event.target.name, event.target.value)\r\n                                   }\r\n                               />\r\n                               {\r\n                                   this.props.checkValueStatus['hh'] ?\r\n                                       <span className='danger font-small-1'><Translate\r\n                                           name={this.props.checkValueStatus['hh']}/></span>\r\n                                       :\r\n                                       null\r\n                               }\r\n                           </Col>\r\n                       </FormGroup>\r\n\r\n                       <FormGroup row>\r\n                           <Label for={'hvhh'} sm={3}>\r\n                               <Translate name={'hvhh'}/>\r\n                           </Label>\r\n                           <Col sm={9}>\r\n                               <div className={\"position-relative has-icon-right\"}>\r\n                                   <input\r\n                                       id={'hvhh'}\r\n                                       className={`form-control square`}\r\n                                       type={'text'}\r\n                                       name={'hvhh'}\r\n                                       value={this.props.setSupplier.hvhh}\r\n                                       onBlur={\r\n                                           (event => this.props.checkValue(event.target.name, event.target.value))\r\n                                       }\r\n                                       onChange={\r\n                                           event => this.props.setSuppliersAddModalValue(event.target.name, event.target.value)\r\n                                       }\r\n                                   />\r\n                                   <div className={\"form-control-position\"}>\r\n                                       <Search\r\n                                           size={20}\r\n                                           className={'info cursor-pointer'}\r\n                                           onBlur={\r\n                                               (event => this.props.checkValue(event.target.name, event.target.value))\r\n                                           }\r\n                                           onClick={\r\n                                               () => this.props.searchRequisite(this.props.setSupplier.hvhh)\r\n                                           }\r\n                                       />\r\n                                   </div>\r\n                               </div>\r\n                               {\r\n                                   this.props.checkValueStatus['hvhh'] ?\r\n                                       <span className='danger font-small-1'><Translate\r\n                                           name={this.props.checkValueStatus['hvhh']}/></span>\r\n                                       :\r\n                                       null\r\n                               }\r\n                           </Col>\r\n                       </FormGroup>\r\n\r\n                       <FormGroup row>\r\n                           <Label for={'address'} sm={3}>\r\n                               <Translate name={'address'}/>\r\n                           </Label>\r\n                           <Col sm={9}>\r\n                               <input\r\n                                   id={'address'}\r\n                                   className={`form-control square ${this.props.checkValueStatus['address'] ? 'is-invalid' : null}`}\r\n                                   type={'text'}\r\n                                   name={'address'}\r\n                                   value={this.props.setSupplier.address}\r\n                                   onBlur={\r\n                                       (event => this.props.checkValue(event.target.name, event.target.value))\r\n                                   }\r\n                                   onChange={\r\n                                       event => this.props.setSuppliersAddModalValue(event.target.name, event.target.value)\r\n                                   }\r\n                               />\r\n                               {\r\n                                   this.props.checkValueStatus['address'] ?\r\n                                       <span className='danger font-small-1'><Translate\r\n                                           name={this.props.checkValueStatus['address']}/></span>\r\n                                       :\r\n                                       null\r\n                               }\r\n                           </Col>\r\n                       </FormGroup>\r\n\r\n                       {this.printBankElement()}\r\n\r\n                       <FormGroup row>\r\n                           <Label for={'director'} sm={3}>\r\n                               <Translate name={'director'}/>\r\n                           </Label>\r\n                           <Col sm={9}>\r\n                               <input\r\n                                   className={`form-control square ${this.props.checkValueStatus['director'] ? 'is-invalid' : null}`}\r\n                                   type={'text'}\r\n                                   id={'director'}\r\n                                   name={'director'}\r\n                                   onBlur={\r\n                                       (event => this.props.checkValue(event.target.name, event.target.value))\r\n                                   }\r\n                                   value={\r\n                                       this.props.setSupplier.director ?\r\n                                           this.props.setSupplier.director\r\n                                           :\r\n                                           ''\r\n                                   }\r\n                                   onChange={\r\n                                       event => this.props.setSuppliersAddModalValue(event.target.name, event.target.value)\r\n                                   }\r\n                               />\r\n                               {\r\n                                   this.props.checkValueStatus['director'] ?\r\n                                       <span className='danger font-small-1'><Translate\r\n                                           name={this.props.checkValueStatus['director']}/></span>\r\n                                       :\r\n                                       null\r\n                               }\r\n                           </Col>\r\n                       </FormGroup>\r\n\r\n                       {\r\n                           this.printPhoneElement()\r\n                       }\r\n\r\n                   </Formsy >\r\n               </ModalBody>\r\n               <ModalFooter>\r\n                   {\r\n                       this.props.setSupplier.name.length && this.props.setSupplier.hh.length && this.props.setSupplier.hvhh.length && this.props.setSupplier.address.length && this.props.setSupplier.tin.length > 0 && this.props.setSupplier.director.length && this.props.setSupplier.phone.length && this.props.setSupplier.type ?\r\n                           <Button\r\n                               color=\"primary\"\r\n                               className=\"btn-square\"\r\n                               outline type=\"submit\"\r\n                               onClick={\r\n\r\n                                   () => {\r\n\r\n                                       this.props.modalType === 'add' ?\r\n                                           this.props.fetchSuppliers(this.props.setSupplier)\r\n                                           :\r\n                                           this.props.supplierActions('edit', this.props.setSupplier)\r\n\r\n                                   }\r\n                               }\r\n                           >\r\n                               <Translate name={'confirm'}/>\r\n                           </Button>\r\n                           :\r\n                           <span className='danger font-small-3'><Translate name={'The entire field is required'}/></span>\r\n                   }\r\n               </ModalFooter>\r\n           </Modal>\r\n       )\r\n   }\r\n}\r\n\r\nexport default SuplliersAddModal;"]},"metadata":{},"sourceType":"module"}