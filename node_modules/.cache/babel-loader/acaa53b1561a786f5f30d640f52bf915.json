{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\User\\\\Desktop\\\\barcode\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\User\\\\Desktop\\\\barcode\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\User\\\\Desktop\\\\barcode\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\User\\\\Desktop\\\\barcode\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\User\\\\Desktop\\\\barcode\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\barcode\\\\src\\\\containers\\\\pages\\\\translations\\\\translationsTable.js\";\nimport React from \"react\";\nimport { Col, FormGroup, Input, Label, Row, Table\n/*, Input */\n} from \"reactstrap\";\nimport EditButton from \"../../../components/buttons/editButton\";\nimport DeleteButton from \"../../../components/buttons/deleteButton\";\nimport PaginationS from \"../../../components/pagination/pagination\";\n/*name change example to TableComponent*/\n\nvar TableComponent =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(TableComponent, _React$Component);\n\n  function TableComponent() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, TableComponent);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(TableComponent)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.editBtnHandler = function (item) {\n      _this.props.toggleModal('edit', item.id);\n\n      _this.props.actions(\"get\", item);\n    };\n\n    _this.deleteBtnHandler = function (id) {\n      _this.props.toggleModal('delete', id);\n    };\n\n    _this.newDataHandler = function () {\n      var arr = _this.props.data;\n      var obj = {\n        id: 1000,\n        key: 'for test',\n        value: 'for test',\n        language: 'am'\n      };\n      var obj1 = {\n        id: 1000,\n        key: 'for test',\n        value: 'for test',\n        language: 'ru'\n      };\n      var obj2 = {\n        id: 1000,\n        key: 'for test',\n        value: 'for test',\n        language: 'en'\n      };\n\n      if (arr.length > 0) {\n        arr.forEach(function (elem, index) {\n          if (elem.id === obj.id) {\n            arr.splice(index, 1);\n          }\n\n          if (elem.id === obj1.id) {\n            arr.splice(index, 1);\n          }\n\n          if (elem.id === obj2.id) {\n            arr.splice(index, 1);\n          }\n        });\n      }\n\n      return arr;\n    };\n\n    _this.handlePageChange = function (pageSize, language, pageNumber) {\n      _this.props.getTranslationPage(pageNumber, pageSize, language);\n    };\n\n    _this.handleSizeChange = function (pageSize, language, pageNumber) {\n      _this.props.setCount(pageSize, language, pageNumber);\n    };\n\n    return _this;\n  }\n\n  _createClass(TableComponent, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(React.Fragment, null, React.createElement(Table, {\n        hover: true,\n        borderless: true,\n        responsive: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, this.props.data && this.props.data.length > 0 ? this.props.data.map(function (item) {\n        return React.createElement(\"tr\", {\n          key: item.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 72\n          },\n          __self: this\n        }, Object.keys(item).map(function (key) {\n          return React.createElement(\"td\", {\n            key: key,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 73\n            },\n            __self: this\n          }, item[key]);\n        }), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 78\n          },\n          __self: this\n        }, React.createElement(EditButton, {\n          perm: 'Edit',\n          onClick: _this2.editBtnHandler.bind(_this2, item),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 79\n          },\n          __self: this\n        }), React.createElement(DeleteButton, {\n          perm: 'Delete',\n          onClick: function onClick() {\n            return _this2.props.toggleModal('delete', item.id);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 83\n          },\n          __self: this\n        })));\n      }) : null)), React.createElement(Row, {\n        style: {\n          justifyContent: 'space-between'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, React.createElement(Col, {\n        md: 'auto',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"count\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, React.createElement(Input, {\n        style: {\n          display: 'inline'\n        },\n        type: \"select\",\n        id: \"count\",\n        value: this.props.itemsCountPerPage || 10,\n        onChange: function onChange(event) {\n          return _this2.handleSizeChange(event.target.value, _this2.props.activeTranslationLang, 1);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        value: \"10\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, \"10\"), React.createElement(\"option\", {\n        value: \"25\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, \"25\"), React.createElement(\"option\", {\n        value: \"50\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, \"50\"))))), React.createElement(Col, {\n        md: 'auto',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, React.createElement(PaginationS, {\n        onChange: this.handlePageChange.bind(this, this.props.itemsCountPerPage, this.props.activeTranslationLang),\n        itemsCountPerPage: this.props.itemsCountPerPage,\n        activePage: this.props.activePage,\n        pageRangeDisplayed: this.props.pageRangeDisplayed,\n        totalItemsCount: this.props.totalItemsCount,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return TableComponent;\n}(React.Component);\n\nexport { TableComponent as default };","map":{"version":3,"sources":["C:/Users/User/Desktop/barcode/src/containers/pages/translations/translationsTable.js"],"names":["React","Col","FormGroup","Input","Label","Row","Table","EditButton","DeleteButton","PaginationS","TableComponent","editBtnHandler","item","props","toggleModal","id","actions","deleteBtnHandler","newDataHandler","arr","data","obj","key","value","language","obj1","obj2","length","forEach","elem","index","splice","handlePageChange","pageSize","pageNumber","getTranslationPage","handleSizeChange","setCount","map","Object","keys","bind","justifyContent","display","itemsCountPerPage","event","target","activeTranslationLang","activePage","pageRangeDisplayed","totalItemsCount","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport {Col, FormGroup, Input, Label, Row, Table/*, Input */} from \"reactstrap\";\r\nimport EditButton from \"../../../components/buttons/editButton\";\r\nimport DeleteButton from \"../../../components/buttons/deleteButton\";\r\nimport PaginationS from \"../../../components/pagination/pagination\";\r\n\r\n/*name change example to TableComponent*/\r\n\r\nexport default class TableComponent extends React.Component {\r\n\r\n    editBtnHandler = (item) => {\r\n        this.props.toggleModal('edit', item.id);\r\n        this.props.actions(\"get\", item)\r\n    }\r\n\r\n    deleteBtnHandler = id => {\r\n        this.props.toggleModal('delete', id)\r\n    }\r\n\r\n    newDataHandler = () => {\r\n        let arr = this.props.data;\r\n        let obj = {id: 1000, key: 'for test', value: 'for test', language: 'am'};\r\n        let obj1 = {id: 1000, key: 'for test', value: 'for test', language: 'ru'};\r\n        let obj2 = {id: 1000, key: 'for test', value: 'for test', language: 'en'};\r\n        if (arr.length > 0) {\r\n            arr.forEach(\r\n                (elem, index) => {\r\n                    if (elem.id === obj.id) {\r\n                        arr.splice(index, 1)\r\n                    }\r\n                    if (elem.id === obj1.id) {\r\n                        arr.splice(index, 1)\r\n                    }\r\n                    if (elem.id === obj2.id) {\r\n                        arr.splice(index, 1)\r\n                    }\r\n                }\r\n            )\r\n        }\r\n        return arr;\r\n    }\r\n\r\n    handlePageChange = (pageSize, language, pageNumber) => {\r\n            this.props.getTranslationPage(pageNumber, pageSize, language)\r\n    }\r\n\r\n    handleSizeChange = (pageSize, language, pageNumber) => {\r\n        this.props.setCount(pageSize, language, pageNumber)\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <>\r\n                <Table hover borderless responsive>\r\n                    {/*<thead>*/}\r\n                    {/*<tr>*/}\r\n                    {/*    <td>#</td>*/}\r\n                    {/*    <td><Translate name={'key'}/></td>*/}\r\n                    {/*    <td><Translate name={'value'}/></td>*/}\r\n                    {/*    <td><Translate name={'language'}/></td>*/}\r\n                    {/*    <td><Translate name={'E/D'}/></td>*/}\r\n                    {/*</tr>*/}\r\n                    {/*</thead>*/}\r\n                    <tbody>\r\n                    {\r\n                        this.props.data && this.props.data.length > 0 ?\r\n                            this.props.data.map(\r\n                                item => {\r\n\r\n                                    return (\r\n                                        <tr key={item.id}>\r\n                                            {Object.keys(item).map((key) => <td key={key}>\r\n                                                {\r\n                                                    item[key]\r\n                                                }\r\n                                            </td>)}\r\n                                            <td>\r\n                                                <EditButton\r\n                                                    perm={'Edit'}\r\n                                                    onClick={this.editBtnHandler.bind(this, item)}\r\n                                                />\r\n                                                <DeleteButton\r\n                                                    perm={'Delete'}\r\n                                                    onClick={\r\n                                                        () => this.props.toggleModal('delete', item.id)\r\n                                                    }\r\n                                                />\r\n                                            </td>\r\n                                        </tr>\r\n\r\n                                    )\r\n                                }\r\n                            )\r\n                            :\r\n                            null\r\n                    }\r\n                    </tbody>\r\n                </Table>\r\n                <Row style={{justifyContent: 'space-between'}}>\r\n                    <Col md={'auto'}>\r\n                        <FormGroup>\r\n                            <Label for=\"count\">\r\n                                <Input\r\n                                    style={{display: 'inline'}}\r\n                                    type=\"select\"\r\n                                    id=\"count\"\r\n                                    value={this.props.itemsCountPerPage || 10}\r\n                                    onChange={event => this.handleSizeChange(event.target.value, this.props.activeTranslationLang, 1)}\r\n                                >\r\n                                    <option value=\"10\">10</option>\r\n                                    <option value=\"25\">25</option>\r\n                                    <option value=\"50\">50</option>\r\n                                </Input>\r\n\r\n                            </Label>\r\n\r\n                        </FormGroup>\r\n                    </Col>\r\n                    <Col md={'auto'}>\r\n                        <PaginationS\r\n                            onChange={this.handlePageChange.bind(this, this.props.itemsCountPerPage, this.props.activeTranslationLang)}\r\n                            itemsCountPerPage={this.props.itemsCountPerPage}\r\n                            activePage={this.props.activePage}\r\n                            pageRangeDisplayed={this.props.pageRangeDisplayed}\r\n                            totalItemsCount={this.props.totalItemsCount}\r\n                        />\r\n                    </Col>\r\n                </Row>\r\n            </>\r\n\r\n        );\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}