{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\User\\\\Desktop\\\\barcode\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport { GET_LANGUAGES_REQUEST, GET_LANGUAGES_FAIL, GET_LANGUAGES_SUCCESS, GET_TRANSLATIONS_REQUEST, GET_TRANSLATIONS_FAIL, GET_TRANSLATIONS_SUCCESS, SET_ACTIVE_LANGUAGE } from \"./actionTypes\";\nimport SessionStorage from \"../../services/SessionStorage\"; // import { translations } from './translation';\n// import { languages } from \"./languages\";\n\nvar INIT_STATE = {\n  languages: [],\n  translations: {},\n  activeLanguage: SessionStorage.get(\"lang\") ? SessionStorage.get(\"lang\") : 'am'\n};\nexport default (function () {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : INIT_STATE;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case GET_LANGUAGES_REQUEST:\n      return _objectSpread({}, state, {\n        loading: true,\n        success: false,\n        fail: false,\n        errors: {}\n      });\n\n    case GET_LANGUAGES_FAIL:\n      return _objectSpread({}, state, {\n        loading: false,\n        success: false,\n        fail: true\n      });\n\n    case GET_LANGUAGES_SUCCESS:\n      return _objectSpread({}, state, {\n        loading: false,\n        success: true,\n        fail: false,\n        data: JSON.parse(action.result.data),\n        errors: {}\n      });\n\n    case GET_TRANSLATIONS_REQUEST:\n      return _objectSpread({}, state, {\n        loading: true,\n        success: false,\n        fail: false,\n        errors: {}\n      });\n\n    case GET_TRANSLATIONS_FAIL:\n      return _objectSpread({}, state, {\n        loading: false,\n        success: false,\n        fail: true\n      });\n\n    case GET_TRANSLATIONS_SUCCESS:\n      return _objectSpread({}, state, {\n        loading: false,\n        success: true,\n        fail: false,\n        data: JSON.parse(action.result.data),\n        errors: {}\n      });\n\n    case SET_ACTIVE_LANGUAGE:\n      return _objectSpread({}, state, {\n        activeLanguage: action.lang\n      });\n\n    default:\n      return _objectSpread({}, state);\n  }\n});","map":{"version":3,"sources":["C:/Users/User/Desktop/barcode/src/redux/lang/reducer.js"],"names":["GET_LANGUAGES_REQUEST","GET_LANGUAGES_FAIL","GET_LANGUAGES_SUCCESS","GET_TRANSLATIONS_REQUEST","GET_TRANSLATIONS_FAIL","GET_TRANSLATIONS_SUCCESS","SET_ACTIVE_LANGUAGE","SessionStorage","INIT_STATE","languages","translations","activeLanguage","get","state","action","type","loading","success","fail","errors","data","JSON","parse","result","lang"],"mappings":";AAAA,SACIA,qBADJ,EAC0BC,kBAD1B,EAC6CC,qBAD7C,EAEIC,wBAFJ,EAE6BC,qBAF7B,EAEmDC,wBAFnD,EAGIC,mBAHJ,QAIO,eAJP;AAKA,OAAOC,cAAP,MAA2B,+BAA3B,C,CACA;AACA;;AAEA,IAAMC,UAAU,GAAG;AACfC,EAAAA,SAAS,EAAC,EADK;AAEfC,EAAAA,YAAY,EAAC,EAFE;AAGfC,EAAAA,cAAc,EAACJ,cAAc,CAACK,GAAf,CAAmB,MAAnB,IAA2BL,cAAc,CAACK,GAAf,CAAmB,MAAnB,CAA3B,GAAsD;AAHtD,CAAnB;AAOA,gBAAe,YAAgC;AAAA,MAA/BC,KAA+B,uEAAvBL,UAAuB;AAAA,MAAXM,MAAW;;AAC3C,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKf,qBAAL;AACI,+BACOa,KADP;AAEIG,QAAAA,OAAO,EAAE,IAFb;AAGIC,QAAAA,OAAO,EAAE,KAHb;AAIIC,QAAAA,IAAI,EAAE,KAJV;AAKIC,QAAAA,MAAM,EAAE;AALZ;;AAOJ,SAAKlB,kBAAL;AACI,+BACOY,KADP;AAEIG,QAAAA,OAAO,EAAE,KAFb;AAGIC,QAAAA,OAAO,EAAE,KAHb;AAIIC,QAAAA,IAAI,EAAE;AAJV;;AAMJ,SAAKhB,qBAAL;AACI,+BACOW,KADP;AAEIG,QAAAA,OAAO,EAAE,KAFb;AAGIC,QAAAA,OAAO,EAAE,IAHb;AAIIC,QAAAA,IAAI,EAAE,KAJV;AAKIE,QAAAA,IAAI,EAAEC,IAAI,CAACC,KAAL,CAAWR,MAAM,CAACS,MAAP,CAAcH,IAAzB,CALV;AAMID,QAAAA,MAAM,EAAE;AANZ;;AAQJ,SAAKhB,wBAAL;AACI,+BACOU,KADP;AAEIG,QAAAA,OAAO,EAAE,IAFb;AAGIC,QAAAA,OAAO,EAAE,KAHb;AAIIC,QAAAA,IAAI,EAAE,KAJV;AAKIC,QAAAA,MAAM,EAAE;AALZ;;AAOJ,SAAKf,qBAAL;AACI,+BACOS,KADP;AAEIG,QAAAA,OAAO,EAAE,KAFb;AAGIC,QAAAA,OAAO,EAAE,KAHb;AAIIC,QAAAA,IAAI,EAAE;AAJV;;AAMJ,SAAKb,wBAAL;AACI,+BACOQ,KADP;AAEIG,QAAAA,OAAO,EAAE,KAFb;AAGIC,QAAAA,OAAO,EAAE,IAHb;AAIIC,QAAAA,IAAI,EAAE,KAJV;AAKIE,QAAAA,IAAI,EAAEC,IAAI,CAACC,KAAL,CAAWR,MAAM,CAACS,MAAP,CAAcH,IAAzB,CALV;AAMID,QAAAA,MAAM,EAAE;AANZ;;AAQJ,SAAKb,mBAAL;AACI,+BACOO,KADP;AAEIF,QAAAA,cAAc,EAAEG,MAAM,CAACU;AAF3B;;AAIJ;AACI,+BAAWX,KAAX;AAvDR;AAyDH,CA1DD","sourcesContent":["import {\r\n    GET_LANGUAGES_REQUEST,GET_LANGUAGES_FAIL,GET_LANGUAGES_SUCCESS,\r\n    GET_TRANSLATIONS_REQUEST,GET_TRANSLATIONS_FAIL,GET_TRANSLATIONS_SUCCESS,\r\n    SET_ACTIVE_LANGUAGE\r\n} from \"./actionTypes\";\r\nimport SessionStorage from \"../../services/SessionStorage\";\r\n// import { translations } from './translation';\r\n// import { languages } from \"./languages\";\r\n\r\nconst INIT_STATE = {\r\n    languages:[],\r\n    translations:{},\r\n    activeLanguage:SessionStorage.get(\"lang\")?SessionStorage.get(\"lang\"):'am'\r\n};\r\n\r\n\r\nexport default (state = INIT_STATE, action) => {\r\n    switch (action.type) {\r\n        case GET_LANGUAGES_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n                success: false,\r\n                fail: false,\r\n                errors: {},\r\n            };\r\n        case GET_LANGUAGES_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: false,\r\n                fail: true,\r\n            };\r\n        case GET_LANGUAGES_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: true,\r\n                fail: false,\r\n                data: JSON.parse(action.result.data),\r\n                errors: {},\r\n            };\r\n        case GET_TRANSLATIONS_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n                success: false,\r\n                fail: false,\r\n                errors: {},\r\n            };\r\n        case GET_TRANSLATIONS_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: false,\r\n                fail: true,\r\n            };\r\n        case GET_TRANSLATIONS_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: true,\r\n                fail: false,\r\n                data: JSON.parse(action.result.data),\r\n                errors: {},\r\n            };\r\n        case SET_ACTIVE_LANGUAGE:\r\n            return {\r\n                ...state,\r\n                activeLanguage: action.lang,\r\n            };\r\n        default:\r\n            return {...state};\r\n    }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}