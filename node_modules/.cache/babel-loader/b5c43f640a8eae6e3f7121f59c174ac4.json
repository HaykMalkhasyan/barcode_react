{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\barcode\\\\src\\\\containers\\\\pages\\\\categories\\\\categoryModal.js\";\nimport React from \"react\";\nimport { Button, FormGroup, Label, Modal, ModalBody, ModalFooter, ModalHeader } from \"reactstrap\";\nimport Translate from \"../../../Translate\";\n\nvar CategoryModal = function CategoryModal(props) {\n  console.log(props.category);\n\n  function handleInputChange(key, value) {\n    var new_value = {};\n    new_value[key] = value;\n    props.setModalValues(new_value);\n  }\n\n  console.log(props);\n\n  function handleClick() {\n    if (props.type === \"delete\") {\n      props.deleteCategory(props.category);\n    } else {\n      props.addCategory(props.category);\n    }\n  }\n\n  function ModalBodyComponent(props) {\n    if (props.type === \"delete\") {\n      return React.createElement(ModalBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }, \"\\u0534\\u0578\\u0582\\u0584 \\u0570\\u0561\\u0574\\u0578\\u0566\\u057E\\u0561\\u056E \\u0565\\u055E\\u0584 \\u057B\\u0576\\u057B\\u0565\\u056C\");\n    } else {\n      return React.createElement(ModalBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }, React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, React.createElement(Translate, {\n        name: \"name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      })), React.createElement(\"input\", {\n        className: \"form-control\",\n        type: \"text\",\n        id: \"name\",\n        value: props.category.name,\n        onChange: function onChange(event) {\n          return handleInputChange(\"name\", event.target.value);\n        },\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      })), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"name_en\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, React.createElement(Translate, {\n        name: \"name_en\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      })), React.createElement(\"input\", {\n        className: \"form-control\",\n        type: \"text\",\n        id: \"name_en\",\n        value: props.category.name_en,\n        onChange: function onChange(event) {\n          return handleInputChange(\"name_en\", event.target.value);\n        },\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      })), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"name_ru\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, React.createElement(Translate, {\n        name: \"name_ru\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      })), React.createElement(\"input\", {\n        className: \"form-control\",\n        type: \"text\",\n        id: \"name_ru\",\n        value: props.category.name_ru,\n        onChange: function onChange(event) {\n          return handleInputChange(\"name_ru\", event.target.value);\n        },\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      })));\n    }\n  }\n\n  return React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, React.createElement(Modal, {\n    isOpen: props.modal[props.type],\n    toggle: function toggle() {\n      return props.toggleModal(props.type);\n    },\n    size: \"md\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, React.createElement(ModalHeader, {\n    toggle: function toggle() {\n      return props.toggleModal(props.type);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, React.createElement(Translate, {\n    name: \"addCategory\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  })), React.createElement(ModalBodyComponent, Object.assign({}, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  })), React.createElement(ModalFooter, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, React.createElement(Button, {\n    color: \"primary\",\n    type: \"submit\",\n    onClick: handleClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, React.createElement(Translate, {\n    name: \"confirm\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  })))));\n};\n\nexport default CategoryModal;","map":{"version":3,"sources":["C:/Users/User/Desktop/barcode/src/containers/pages/categories/categoryModal.js"],"names":["React","Button","FormGroup","Label","Modal","ModalBody","ModalFooter","ModalHeader","Translate","CategoryModal","props","console","log","category","handleInputChange","key","value","new_value","setModalValues","handleClick","type","deleteCategory","addCategory","ModalBodyComponent","name","event","target","name_en","name_ru","modal","toggleModal"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,MAAR,EAAgBC,SAAhB,EAA2BC,KAA3B,EAAkCC,KAAlC,EAAyCC,SAAzC,EAAoDC,WAApD,EAAiEC,WAAjE,QAAmF,YAAnF;AACA,OAAOC,SAAP,MAAsB,oBAAtB;;AAEA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAACC,KAAD,EAAW;AAC7BC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,QAAlB;;AACA,WAASC,iBAAT,CAA2BC,GAA3B,EAAgCC,KAAhC,EAAuC;AACnC,QAAIC,SAAS,GAAG,EAAhB;AACAA,IAAAA,SAAS,CAACF,GAAD,CAAT,GAAiBC,KAAjB;AACAN,IAAAA,KAAK,CAACQ,cAAN,CAAqBD,SAArB;AACH;;AACDN,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;;AACA,WAASS,WAAT,GAAuB;AACnB,QAAGT,KAAK,CAACU,IAAN,KAAa,QAAhB,EAAyB;AACrBV,MAAAA,KAAK,CAACW,cAAN,CAAqBX,KAAK,CAACG,QAA3B;AACH,KAFD,MAEK;AACDH,MAAAA,KAAK,CAACY,WAAN,CAAkBZ,KAAK,CAACG,QAAxB;AACH;AAEJ;;AACD,WAASU,kBAAT,CAA4Bb,KAA5B,EAAmC;AAC/B,QAAGA,KAAK,CAACU,IAAN,KAAa,QAAhB,EAAyB;AACrB,aACI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uIADJ;AAIH,KALD,MAKK;AACD,aACI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,KAAD;AAAO,QAAA,GAAG,EAAC,MAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAkB,oBAAC,SAAD;AAAW,QAAA,IAAI,EAAC,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAlB,CADJ,EAEI;AACI,QAAA,SAAS,EAAC,cADd;AAEI,QAAA,IAAI,EAAC,MAFT;AAGI,QAAA,EAAE,EAAC,MAHP;AAII,QAAA,KAAK,EAAEV,KAAK,CAACG,QAAN,CAAeW,IAJ1B;AAKI,QAAA,QAAQ,EAAE,kBAAAC,KAAK;AAAA,iBAAIX,iBAAiB,CAAC,MAAD,EAASW,KAAK,CAACC,MAAN,CAAaV,KAAtB,CAArB;AAAA,SALnB;AAMI,QAAA,QAAQ,MANZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,CADJ,EAYI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,KAAD;AAAO,QAAA,GAAG,EAAC,SAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAqB,oBAAC,SAAD;AAAW,QAAA,IAAI,EAAC,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAArB,CADJ,EAEI;AACI,QAAA,SAAS,EAAC,cADd;AAEI,QAAA,IAAI,EAAC,MAFT;AAGI,QAAA,EAAE,EAAC,SAHP;AAII,QAAA,KAAK,EAAEN,KAAK,CAACG,QAAN,CAAec,OAJ1B;AAKI,QAAA,QAAQ,EAAE,kBAAAF,KAAK;AAAA,iBAAIX,iBAAiB,CAAC,SAAD,EAAYW,KAAK,CAACC,MAAN,CAAaV,KAAzB,CAArB;AAAA,SALnB;AAMI,QAAA,QAAQ,MANZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,CAZJ,EAuBI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,KAAD;AAAO,QAAA,GAAG,EAAC,SAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAqB,oBAAC,SAAD;AAAW,QAAA,IAAI,EAAC,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAArB,CADJ,EAEI;AACI,QAAA,SAAS,EAAC,cADd;AAEI,QAAA,IAAI,EAAC,MAFT;AAGI,QAAA,EAAE,EAAC,SAHP;AAII,QAAA,KAAK,EAAEN,KAAK,CAACG,QAAN,CAAee,OAJ1B;AAKI,QAAA,QAAQ,EAAE,kBAAAH,KAAK;AAAA,iBAAIX,iBAAiB,CAAC,SAAD,EAAYW,KAAK,CAACC,MAAN,CAAaV,KAAzB,CAArB;AAAA,SALnB;AAMI,QAAA,QAAQ,MANZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,CAvBJ,CADJ;AAsCH;AAEJ;;AAED,SACI,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,KAAD;AAAO,IAAA,MAAM,EAAEN,KAAK,CAACmB,KAAN,CAAYnB,KAAK,CAACU,IAAlB,CAAf;AAAwC,IAAA,MAAM,EAAE;AAAA,aAAIV,KAAK,CAACoB,WAAN,CAAkBpB,KAAK,CAACU,IAAxB,CAAJ;AAAA,KAAhD;AAAoF,IAAA,IAAI,EAAC,IAAzF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,WAAD;AAAa,IAAA,MAAM,EAAE;AAAA,aAAIV,KAAK,CAACoB,WAAN,CAAkBpB,KAAK,CAACU,IAAxB,CAAJ;AAAA,KAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAwD,oBAAC,SAAD;AAAW,IAAA,IAAI,EAAC,aAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAxD,CADJ,EAEI,oBAAC,kBAAD,oBAAwBV,KAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAFJ,EAGI,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,SAAd;AAAwB,IAAA,IAAI,EAAC,QAA7B;AAAsC,IAAA,OAAO,EAAES,WAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,SAAD;AAAW,IAAA,IAAI,EAAC,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,CAHJ,CADJ,CADJ;AAeH,CAhFD;;AAkFA,eAAeV,aAAf","sourcesContent":["import React from \"react\";\r\nimport {Button, FormGroup, Label, Modal, ModalBody, ModalFooter, ModalHeader} from \"reactstrap\";\r\nimport Translate from \"../../../Translate\";\r\n\r\nconst CategoryModal = (props) => {\r\n    console.log(props.category)\r\n    function handleInputChange(key, value) {\r\n        let new_value = {}\r\n        new_value[key] = value\r\n        props.setModalValues(new_value)\r\n    }\r\n    console.log(props)\r\n    function handleClick() {\r\n        if(props.type===\"delete\"){\r\n            props.deleteCategory(props.category)\r\n        }else{\r\n            props.addCategory(props.category)\r\n        }\r\n\r\n    }\r\n    function ModalBodyComponent(props) {\r\n        if(props.type===\"delete\"){\r\n            return(\r\n                <ModalBody>Դուք համոզված ե՞ք ջնջել</ModalBody>\r\n            )\r\n\r\n        }else{\r\n            return(\r\n                <ModalBody>\r\n                    <FormGroup>\r\n                        <Label for=\"name\"><Translate name=\"name\"/></Label>\r\n                        <input\r\n                            className=\"form-control\"\r\n                            type=\"text\"\r\n                            id=\"name\"\r\n                            value={props.category.name}\r\n                            onChange={event => handleInputChange(\"name\", event.target.value)}\r\n                            required\r\n                        />\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                        <Label for=\"name_en\"><Translate name=\"name_en\"/></Label>\r\n                        <input\r\n                            className=\"form-control\"\r\n                            type=\"text\"\r\n                            id=\"name_en\"\r\n                            value={props.category.name_en}\r\n                            onChange={event => handleInputChange(\"name_en\", event.target.value)}\r\n                            required\r\n                        />\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                        <Label for=\"name_ru\"><Translate name=\"name_ru\"/></Label>\r\n                        <input\r\n                            className=\"form-control\"\r\n                            type=\"text\"\r\n                            id=\"name_ru\"\r\n                            value={props.category.name_ru}\r\n                            onChange={event => handleInputChange(\"name_ru\", event.target.value)}\r\n                            required\r\n                        />\r\n                    </FormGroup>\r\n                </ModalBody>\r\n            )\r\n\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Modal isOpen={props.modal[props.type]} toggle={()=>props.toggleModal(props.type)}  size=\"md\">\r\n                <ModalHeader toggle={()=>props.toggleModal(props.type)}><Translate name=\"addCategory\"/></ModalHeader>\r\n                <ModalBodyComponent {...props}/>\r\n                <ModalFooter>\r\n                    <Button color=\"primary\" type=\"submit\" onClick={handleClick}>\r\n                        <Translate name=\"confirm\"/>\r\n                    </Button>\r\n                </ModalFooter>\r\n            </Modal>\r\n\r\n        </React.Fragment>\r\n    );\r\n\r\n};\r\n\r\nexport default CategoryModal;"]},"metadata":{},"sourceType":"module"}