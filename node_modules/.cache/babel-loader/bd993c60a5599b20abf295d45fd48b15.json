{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\User\\\\Desktop\\\\barcode\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\barcode\\\\src\\\\components\\\\dropdown\\\\dropdown.js\";\nimport React, { useState } from \"react\";\nimport { Col, Row, FormGroup, Label, Button, ModalBody, ModalFooter, CustomInput } from \"reactstrap\";\nimport { ChevronDown, ChevronRight } from 'react-feather';\nimport Translate from \"../../Translate\";\n\nvar DropDownItemChild = function DropDownItemChild(props) {\n  var _useState = useState(props.checked),\n      _useState2 = _slicedToArray(_useState, 2),\n      checked = _useState2[0],\n      setValue = _useState2[1];\n\n  function handleChecked() {\n    setValue(!checked);\n  }\n\n  return React.createElement(\"li\", {\n    className: \"list-group-item list-group-item-action no-border  bg-lighten-4\",\n    key: id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, React.createElement(Row, {\n    className: \"todo-list-group-item\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, React.createElement(Col, {\n    sm: \"1\",\n    md: \"1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, React.createElement(Label, {\n    onClick: function onClick() {\n      return handleChecked();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, React.createElement(CustomInput, {\n    type: \"checkbox\",\n    checked: props.tools[id].checked,\n    defaultChecked: props.tools[id].checked,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }))), React.createElement(Col, {\n    sm: \"10\",\n    md: \"10\",\n    onClick: function onClick() {\n      return handleOpen();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    className: \"mb-0 font-small-3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, React.createElement(Translate, {\n    name: props.tools[id].name,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  })))));\n};\n\nvar DropDownItem = function DropDownItem(props) {\n  var _useState3 = useState(props.checked),\n      _useState4 = _slicedToArray(_useState3, 2),\n      checked = _useState4[0],\n      setValue = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      open = _useState6[0],\n      setOpen = _useState6[1];\n\n  function handleChecked() {\n    setValue(!checked);\n  }\n\n  function handleOpen() {\n    setOpen(!open);\n  }\n\n  function Greeting(props) {\n    if (!open) {\n      return React.createElement(ChevronRight, {\n        size: 18,\n        className: \"mr-2\",\n        onClick: function onClick() {\n          return handleOpen();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      });\n    }\n\n    return React.createElement(ChevronDown, {\n      size: 18,\n      className: \"mr-2\",\n      onClick: function onClick() {\n        return handleOpen();\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    });\n  }\n\n  return React.createElement(\"li\", {\n    className: \"list-group-item list-group-item-action no-border  bg-lighten-4\",\n    key: props.id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, React.createElement(Row, {\n    className: \"todo-list-group-item\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, React.createElement(Col, {\n    sm: \"1\",\n    md: \"1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, React.createElement(Label, {\n    onClick: function onClick() {\n      return handleChecked();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, React.createElement(CustomInput, {\n    type: \"checkbox\",\n    checked: checked,\n    defaultChecked: checked,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }))), React.createElement(Col, {\n    sm: \"10\",\n    md: \"10\",\n    onClick: function onClick() {\n      return handleOpen();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    className: \"mb-0 font-small-3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, React.createElement(Translate, {\n    name: props.name,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }))), React.createElement(Col, {\n    sm: \"1\",\n    md: \"1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, React.createElement(Greeting, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }))), React.createElement(\"ul\", {\n    className: \"list-group icheck-task hide\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, Object.keys(props.tools).map(function (key) {\n    if (props.tools[key].checked === undefined) {\n      props.tools[key].checked = true;\n    }\n\n    return React.createElement(DropDownItemChild, {\n      id: key,\n      key: key,\n      name: props.tools[key].name,\n      checked: props.tools[key].checked,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    });\n  })));\n};\n\nvar DropDown = function DropDown(props) {\n  var pages = props.pages;\n  return React.createElement(\"ul\", {\n    className: \"list-group icheck-task\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, Object.keys(pages).map(function (key) {\n    var checked = true;\n\n    if (pages[key].checked) {\n      checked = pages[key].checked;\n    }\n\n    return React.createElement(DropDownItem, {\n      id: key,\n      key: key,\n      name: pages[key].name,\n      tools: pages[key].tools,\n      checked: checked,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    });\n  }));\n};\n\nexport default DropDown;","map":{"version":3,"sources":["C:/Users/User/Desktop/barcode/src/components/dropdown/dropdown.js"],"names":["React","useState","Col","Row","FormGroup","Label","Button","ModalBody","ModalFooter","CustomInput","ChevronDown","ChevronRight","Translate","DropDownItemChild","props","checked","setValue","handleChecked","id","tools","handleOpen","name","DropDownItem","open","setOpen","Greeting","Object","keys","map","key","undefined","DropDown","pages"],"mappings":"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","sourcesContent":["import React, {useState} from \"react\";\nimport {Col, Row, FormGroup, Label, Button, ModalBody, ModalFooter, CustomInput} from \"reactstrap\";\nimport {ChevronDown, ChevronRight} from 'react-feather';\nimport Translate from \"../../Translate\";\nconst DropDownItemChild = (props) => {\n    const [checked, setValue] = useState(props.checked);\n\n    function handleChecked() {\n        setValue(!checked)\n    }\n\n    return (\n        <li className={\"list-group-item list-group-item-action no-border  bg-lighten-4\"} key={id}>\n            <Row className=\"todo-list-group-item\">\n                <Col sm=\"1\" md=\"1\"><Label onClick={() => handleChecked()}><CustomInput type=\"checkbox\"\n                                                                                       checked={props.tools[id].checked}\n                                                                                       defaultChecked={props.tools[id].checked}/></Label></Col>\n                <Col sm=\"10\" md=\"10\" onClick={() => handleOpen()}><p className=\"mb-0 font-small-3\"><Translate\n                    name={props.tools[id].name}/></p></Col>\n            </Row>\n        </li>\n    );\n}\n\nconst DropDownItem = (props) => {\n    const [checked, setValue] = useState(props.checked);\n    const [open, setOpen] = useState(false);\n\n    function handleChecked() {\n        setValue(!checked)\n    }\n\n    function handleOpen() {\n        setOpen(!open)\n    }\n\n    function Greeting(props) {\n        if (!open) {\n            return <ChevronRight size={18} className=\"mr-2\" onClick={() => handleOpen()}/>\n        }\n        return <ChevronDown size={18} className=\"mr-2\" onClick={() => handleOpen()}/>\n    }\n\n    return (\n        <li className={\"list-group-item list-group-item-action no-border  bg-lighten-4\"} key={props.id}>\n            <Row className=\"todo-list-group-item\">\n                <Col sm=\"1\" md=\"1\"><Label onClick={() => handleChecked()}><CustomInput type=\"checkbox\" checked={checked}\n                                                                                       defaultChecked={checked}/></Label></Col>\n                <Col sm=\"10\" md=\"10\" onClick={() => handleOpen()}><p className=\"mb-0 font-small-3\"><Translate\n                    name={props.name}/></p></Col>\n                <Col sm=\"1\" md=\"1\">\n                    <Greeting/>\n                </Col>\n            </Row>\n            <ul className=\"list-group icheck-task hide\">\n                {Object.keys(props.tools).map(function (key) {\n                    if (props.tools[key].checked === undefined) {\n                        props.tools[key].checked = true\n                    }\n                    return <DropDownItemChild id={key} key={key} name={props.tools[key].name}\n                                              checked={props.tools[key].checked}/>\n                })}\n            </ul>\n        </li>\n    );\n};\n\nconst DropDown = (props) => {\n    let pages = props.pages;\n    return (\n        <ul className=\"list-group icheck-task\">\n            {Object.keys(pages).map(function (key) {\n                let checked = true;\n                if (pages[key].checked) {\n                    checked = pages[key].checked\n                }\n                return <DropDownItem id={key} key={key} name={pages[key].name} tools={pages[key].tools}\n                                     checked={checked}/>\n            })}\n        </ul>\n    );\n};\nexport default DropDown;"]},"metadata":{},"sourceType":"module"}