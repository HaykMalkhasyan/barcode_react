{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\barcode\\\\src\\\\containers\\\\users\\\\userTable.js\";\nimport React from \"react\";\nimport { Modal, ModalHeader, Table } from \"reactstrap\";\nimport { Edit, Trash2 } from 'react-feather';\nimport Translate from \"../../Translate\";\nimport UserModal from \"./userModal\";\n\nvar UserTable = function UserTable(props) {\n  function _toggle(type, id) {\n    props.userModal(type, !props.modal[type]);\n\n    if (id) {\n      props.getUser(id);\n    }\n  }\n\n  if (props.users.length) {\n    return React.createElement(Table, {\n      responsive: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }, Object.keys(props.users[0]).map(function (key) {\n      return React.createElement(\"td\", {\n        key: key,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21\n        },\n        __self: this\n      }, React.createElement(Translate, {\n        name: key,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21\n        },\n        __self: this\n      }));\n    }), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, \"Actions\"))), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, props.users.map(function (value, index) {\n      return React.createElement(\"tr\", {\n        key: index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }, Object.keys(value).map(function (key) {\n        return React.createElement(\"td\", {\n          key: key,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 28\n          },\n          __self: this\n        }, value[key]);\n      }), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }, React.createElement(Edit, {\n        size: 18,\n        className: \"mr-2\",\n        onClick: function onClick() {\n          return _toggle(\"edit\", value['id']);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }), React.createElement(Trash2, {\n        size: 18,\n        color: \"#FF586B\",\n        onClick: function onClick() {\n          return _toggle(\"delete\", value['id']);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      })));\n    })), React.createElement(Modal, {\n      isOpen: props.modal.edit,\n      toggle: function toggle() {\n        return _toggle(\"edit\");\n      },\n      size: \"md\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, React.createElement(ModalHeader, {\n      toggle: function toggle() {\n        return _toggle(\"edit\");\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, React.createElement(Translate, {\n      name: \"editContact\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    })), React.createElement(UserModal, Object.assign({}, props, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }))));\n  } else {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    });\n  }\n};\n\nexport default UserTable;","map":{"version":3,"sources":["C:/Users/User/Desktop/barcode/src/containers/users/userTable.js"],"names":["React","Modal","ModalHeader","Table","Edit","Trash2","Translate","UserModal","UserTable","props","toggle","type","id","userModal","modal","getUser","users","length","Object","keys","map","key","value","index","edit"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,KAAR,EAAeC,WAAf,EAA4BC,KAA5B,QAAwC,YAAxC;AACA,SAAQC,IAAR,EAAcC,MAAd,QAA2B,eAA3B;AACA,OAAOC,SAAP,MAAsB,iBAAtB;AACA,OAAOC,SAAP,MAAsB,aAAtB;;AAEA,IAAMC,SAAS,GAAG,SAAZA,SAAY,CAACC,KAAD,EAAW;AAEzB,WAASC,OAAT,CAAgBC,IAAhB,EAAqBC,EAArB,EAAyB;AACrBH,IAAAA,KAAK,CAACI,SAAN,CAAgBF,IAAhB,EAAqB,CAACF,KAAK,CAACK,KAAN,CAAYH,IAAZ,CAAtB;;AACA,QAAGC,EAAH,EAAM;AACFH,MAAAA,KAAK,CAACM,OAAN,CAAcH,EAAd;AACH;AACJ;;AAED,MAAIH,KAAK,CAACO,KAAN,CAAYC,MAAhB,EAAwB;AACpB,WACI,oBAAC,KAAD;AAAO,MAAA,UAAU,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKC,MAAM,CAACC,IAAP,CAAYV,KAAK,CAACO,KAAN,CAAY,CAAZ,CAAZ,EAA4BI,GAA5B,CAAgC,UAACC,GAAD;AAAA,aAAS;AAAI,QAAA,GAAG,EAAEA,GAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAc,oBAAC,SAAD;AAAW,QAAA,IAAI,EAAEA,GAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAd,CAAT;AAAA,KAAhC,CADL,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAFJ,CADA,CADJ,EAOI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACCZ,KAAK,CAACO,KAAN,CAAYI,GAAZ,CAAgB,UAACE,KAAD,EAAQC,KAAR;AAAA,aACb;AAAI,QAAA,GAAG,EAAEA,KAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKL,MAAM,CAACC,IAAP,CAAYG,KAAZ,EAAmBF,GAAnB,CAAuB,UAACC,GAAD;AAAA,eAAS;AAAI,UAAA,GAAG,EAAEA,GAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAeC,KAAK,CAACD,GAAD,CAApB,CAAT;AAAA,OAAvB,CADL,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,IAAD;AAAM,QAAA,IAAI,EAAE,EAAZ;AAAgB,QAAA,SAAS,EAAC,MAA1B;AAAiC,QAAA,OAAO,EAAE;AAAA,iBAAMX,OAAM,CAAC,MAAD,EAAQY,KAAK,CAAC,IAAD,CAAb,CAAZ;AAAA,SAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAEI,oBAAC,MAAD;AAAQ,QAAA,IAAI,EAAE,EAAd;AAAkB,QAAA,KAAK,EAAC,SAAxB;AAAkC,QAAA,OAAO,EAAE;AAAA,iBAAMZ,OAAM,CAAC,QAAD,EAAUY,KAAK,CAAC,IAAD,CAAf,CAAZ;AAAA,SAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,CAFJ,CADa;AAAA,KAAhB,CADD,CAPJ,EAkBI,oBAAC,KAAD;AAAO,MAAA,MAAM,EAAEb,KAAK,CAACK,KAAN,CAAYU,IAA3B;AAAiC,MAAA,MAAM,EAAE;AAAA,eAAId,OAAM,CAAC,MAAD,CAAV;AAAA,OAAzC;AAA8D,MAAA,IAAI,EAAC,IAAnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,WAAD;AAAa,MAAA,MAAM,EAAE;AAAA,eAAIA,OAAM,CAAC,MAAD,CAAV;AAAA,OAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAyC,oBAAC,SAAD;AAAW,MAAA,IAAI,EAAC,aAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAzC,CADJ,EAEI,oBAAC,SAAD,oBAAeD,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAFJ,CAlBJ,CADJ;AA8BH,GA/BD,MA+BO;AACH,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ;AAGH;AACJ,CA7CD;;AA8CA,eAAeD,SAAf","sourcesContent":["import React from \"react\";\r\nimport {Modal, ModalHeader, Table} from \"reactstrap\";\r\nimport {Edit, Trash2} from 'react-feather';\r\nimport Translate from \"../../Translate\";\r\nimport UserModal from \"./userModal\";\r\n\r\nconst UserTable = (props) => {\r\n\r\n    function toggle(type,id) {\r\n        props.userModal(type,!props.modal[type])\r\n        if(id){\r\n            props.getUser(id)\r\n        }\r\n    }\r\n\r\n    if (props.users.length) {\r\n        return (\r\n            <Table responsive>\r\n                <thead>\r\n                <tr>\r\n                    {Object.keys(props.users[0]).map((key) => <td key={key}><Translate name={key}/></td>)}\r\n                    <th>Actions</th>\r\n                </tr>\r\n                </thead>\r\n                <tbody>\r\n                {props.users.map((value, index) =>\r\n                    <tr key={index}>\r\n                        {Object.keys(value).map((key) => <td key={key}>{value[key]}</td>)}\r\n                        <td>\r\n                            <Edit size={18} className=\"mr-2\" onClick={() => toggle(\"edit\",value['id'])}/>\r\n                            <Trash2 size={18} color=\"#FF586B\" onClick={() => toggle(\"delete\",value['id'])}/>\r\n                        </td>\r\n                    </tr>\r\n                )}\r\n                </tbody>\r\n                <Modal isOpen={props.modal.edit} toggle={()=>toggle(\"edit\")}  size=\"md\">\r\n                    <ModalHeader toggle={()=>toggle(\"edit\")}><Translate name=\"editContact\"/></ModalHeader>\r\n                    <UserModal {...props}/>\r\n                </Modal>\r\n                {/*<Modal isOpen={props.modal.delete} toggle={()=>toggle(\"delete\")}  size=\"md\">*/}\r\n                {/*    <ModalHeader toggle={()=>toggle(\"delete\")}><Translate name=\"deleteContact\"/></ModalHeader>*/}\r\n\r\n                {/*</Modal>*/}\r\n            </Table>\r\n\r\n        );\r\n    } else {\r\n        return (\r\n            <div></div>\r\n        )\r\n    }\r\n}\r\nexport default UserTable;"]},"metadata":{},"sourceType":"module"}