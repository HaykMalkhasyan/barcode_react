{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\User\\\\Desktop\\\\barcode\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport { GET_GROUPS_REQUEST, GET_GROUPS_FAIL, GET_GROUPS_SUCCESS, GET_GROUP_REQUEST, GET_GROUP_FAIL, GET_GROUP_SUCCESS, ADD_GROUP_REQUEST, ADD_GROUP_FAIL, ADD_GROUP_SUCCESS, EDIT_GROUP_REQUEST, EDIT_GROUP_FAIL, EDIT_GROUP_SUCCESS, DELETE_GROUP_REQUEST, DELETE_GROUP_FAIL, DELETE_GROUP_SUCCESS, GET_SUB_GROUP_REQUEST, GET_SUB_GROUP_FAIL, GET_SUB_GROUP_SUCCESS, ADD_SUB_GROUP_REQUEST, ADD_SUB_GROUP_FAIL, ADD_SUB_GROUP_SUCCESS, EDIT_SUB_GROUP_REQUEST, EDIT_SUB_GROUP_FAIL, EDIT_SUB_GROUP_SUCCESS, DELETE_SUB_GROUP_REQUEST, DELETE_SUB_GROUP_FAIL, DELETE_SUB_GROUP_SUCCESS, SET_GROUP_MODAL, TOGGLE_GROUP_MODAL, TOGGLE_SUB_GROUP_MODAL, OPEN_MENU } from \"./actionTypes\";\nimport { IsRequiredField, IsRequiredFields } from \"../../utility/utils\";\nvar INIT_STATE = {\n  groups: [],\n  group: {},\n  modal: {},\n  subModal: {},\n  required: [\"name\"],\n  loading: false,\n  success: false,\n  fail: false,\n  errors: {}\n};\n\nfunction myFunction(arr, id, key) {\n  var value = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n  arr.forEach(function (current, index) {\n    if (current.id === id) {\n      current[key] = !current[key];\n    } else {\n      if (current.child) {\n        myFunction(current.child, id, key);\n      }\n    }\n  });\n  return arr;\n}\n\nexport default (function () {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : INIT_STATE;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case GET_GROUPS_REQUEST:\n      return _objectSpread({}, state, {\n        loading: true,\n        success: false,\n        fail: false,\n        modal: {},\n        subModal: {},\n        errors: {}\n      });\n\n    case GET_GROUPS_FAIL:\n      return _objectSpread({}, state, {\n        loading: false,\n        success: false,\n        modal: {},\n        subModal: {},\n        fail: true\n      });\n\n    case GET_GROUPS_SUCCESS:\n      return _objectSpread({}, state, {\n        loading: false,\n        success: true,\n        fail: false,\n        modal: {},\n        subModal: {},\n        groups: JSON.parse(action.result.data),\n        errors: {}\n      });\n\n    case GET_GROUP_REQUEST:\n      return _objectSpread({}, state, {\n        loading: true,\n        success: false,\n        fail: false,\n        errors: {}\n      });\n\n    case GET_GROUP_FAIL:\n      return _objectSpread({}, state, {\n        loading: false,\n        success: false,\n        fail: true\n      });\n\n    case GET_GROUP_SUCCESS:\n      return _objectSpread({}, state, {\n        loading: false,\n        success: true,\n        fail: false,\n        group: JSON.parse(action.result.data),\n        errors: {}\n      });\n\n    case ADD_GROUP_REQUEST:\n      return _objectSpread({}, state, {\n        loading: true,\n        success: false,\n        fail: false,\n        errors: IsRequiredFields(state.required, state.group, state.errors)\n      });\n\n    case ADD_GROUP_FAIL:\n      return _objectSpread({}, state, {\n        loading: false,\n        success: false,\n        fail: true\n      });\n\n    case ADD_GROUP_SUCCESS:\n      return _objectSpread({}, state, {\n        loading: false,\n        success: true,\n        fail: false,\n        modal: {},\n        groups: JSON.parse(action.result.data)\n      });\n\n    case EDIT_GROUP_REQUEST:\n      return _objectSpread({}, state, {\n        loading: true,\n        success: false,\n        fail: false,\n        errors: IsRequiredFields(state.required, state.group, state.errors)\n      });\n\n    case EDIT_GROUP_FAIL:\n      return _objectSpread({}, state, {\n        loading: false,\n        success: false,\n        fail: true\n      });\n\n    case EDIT_GROUP_SUCCESS:\n      return _objectSpread({}, state, {\n        loading: false,\n        success: true,\n        fail: false,\n        modal: {},\n        group: {},\n        groups: JSON.parse(action.result.data)\n      });\n\n    case DELETE_GROUP_REQUEST:\n      return _objectSpread({}, state, {\n        loading: true,\n        success: false,\n        fail: false\n      });\n\n    case DELETE_GROUP_FAIL:\n      return _objectSpread({}, state, {\n        loading: false,\n        success: false,\n        fail: true\n      });\n\n    case DELETE_GROUP_SUCCESS:\n      return _objectSpread({}, state, {\n        loading: false,\n        success: true,\n        fail: false,\n        modal: {},\n        group: {},\n        groups: JSON.parse(action.result.data)\n      });\n\n    case GET_SUB_GROUP_REQUEST:\n      return _objectSpread({}, state, {\n        loading: true,\n        success: false,\n        fail: false,\n        errors: {}\n      });\n\n    case GET_SUB_GROUP_FAIL:\n      return _objectSpread({}, state, {\n        loading: false,\n        success: false,\n        fail: true\n      });\n\n    case GET_SUB_GROUP_SUCCESS:\n      console.log(JSON.parse(action.result.data));\n      return _objectSpread({}, state, {\n        loading: false,\n        success: true,\n        fail: false,\n        group: JSON.parse(action.result.data),\n        errors: {}\n      });\n\n    case ADD_SUB_GROUP_REQUEST:\n      return _objectSpread({}, state, {\n        loading: true,\n        success: false,\n        fail: false,\n        errors: IsRequiredFields(state.required, state.group, state.errors)\n      });\n\n    case ADD_SUB_GROUP_FAIL:\n      return _objectSpread({}, state, {\n        loading: false,\n        success: false,\n        fail: true\n      });\n\n    case ADD_SUB_GROUP_SUCCESS:\n      var data = JSON.parse(action.result.data);\n      state.groups[data.group_id].subGroup = data.subGroup;\n      return _objectSpread({}, state, {\n        loading: false,\n        success: true,\n        fail: false,\n        subModal: {},\n        groups: state.groups\n      });\n\n    case EDIT_SUB_GROUP_REQUEST:\n      return _objectSpread({}, state, {\n        loading: true,\n        success: false,\n        fail: false,\n        errors: IsRequiredFields(state.required, state.group, state.errors)\n      });\n\n    case EDIT_SUB_GROUP_FAIL:\n      return _objectSpread({}, state, {\n        loading: false,\n        success: false,\n        fail: true\n      });\n\n    case EDIT_SUB_GROUP_SUCCESS:\n      var data1 = JSON.parse(action.result.data);\n      console.log(data1);\n      state.groups[data1.group_id].subGroup = data1.subGroup;\n      return _objectSpread({}, state, {\n        loading: false,\n        success: true,\n        fail: false,\n        subModal: {},\n        group: {},\n        groups: state.groups\n      });\n\n    case DELETE_SUB_GROUP_REQUEST:\n      return _objectSpread({}, state, {\n        loading: true,\n        success: false,\n        fail: false\n      });\n\n    case DELETE_SUB_GROUP_FAIL:\n      return _objectSpread({}, state, {\n        loading: false,\n        success: false,\n        fail: true\n      });\n\n    case DELETE_SUB_GROUP_SUCCESS:\n      var data2 = JSON.parse(action.result.data);\n      state.groups[data2.group_id].subGroup = data2.subGroup;\n      return _objectSpread({}, state, {\n        loading: false,\n        success: true,\n        fail: false,\n        subModal: {},\n        group: {},\n        groups: state.groups\n      });\n\n    case SET_GROUP_MODAL:\n      state.group[action.key] = action.value;\n      return _objectSpread({}, state, {\n        errors: IsRequiredField(state.required, action, state.errors)\n      });\n\n    case TOGGLE_GROUP_MODAL:\n      state.modal[action.modalType] = !state.modal[action.modalType];\n\n      if (action.obj) {\n        if (action.modalType === \"edit\") {\n          state.group[action.obj.key] = action.obj.value;\n        } else {\n          state.group = action.obj;\n        }\n      }\n\n      return _objectSpread({}, state, {\n        errors: {},\n        subModal: {}\n      });\n\n    case TOGGLE_SUB_GROUP_MODAL:\n      state.subModal[action.modalType] = !state.subModal[action.modalType];\n      var obj = action.obj;\n\n      if (obj) {\n        if (action.modalType === \"edit\") {\n          state.group = _objectSpread({}, state.group, obj);\n        } else {\n          state.group = obj;\n        }\n      }\n\n      return _objectSpread({}, state, {\n        errors: {},\n        modal: {}\n      });\n\n    case OPEN_MENU:\n      console.log(action);\n      myFunction(state.groups[action.group_id].subGroup, action.id, \"open\");\n      return _objectSpread({}, state);\n\n    default:\n      return _objectSpread({}, state);\n  }\n});","map":{"version":3,"sources":["C:/Users/User/Desktop/barcode/src/redux/group/reducer.js"],"names":["GET_GROUPS_REQUEST","GET_GROUPS_FAIL","GET_GROUPS_SUCCESS","GET_GROUP_REQUEST","GET_GROUP_FAIL","GET_GROUP_SUCCESS","ADD_GROUP_REQUEST","ADD_GROUP_FAIL","ADD_GROUP_SUCCESS","EDIT_GROUP_REQUEST","EDIT_GROUP_FAIL","EDIT_GROUP_SUCCESS","DELETE_GROUP_REQUEST","DELETE_GROUP_FAIL","DELETE_GROUP_SUCCESS","GET_SUB_GROUP_REQUEST","GET_SUB_GROUP_FAIL","GET_SUB_GROUP_SUCCESS","ADD_SUB_GROUP_REQUEST","ADD_SUB_GROUP_FAIL","ADD_SUB_GROUP_SUCCESS","EDIT_SUB_GROUP_REQUEST","EDIT_SUB_GROUP_FAIL","EDIT_SUB_GROUP_SUCCESS","DELETE_SUB_GROUP_REQUEST","DELETE_SUB_GROUP_FAIL","DELETE_SUB_GROUP_SUCCESS","SET_GROUP_MODAL","TOGGLE_GROUP_MODAL","TOGGLE_SUB_GROUP_MODAL","OPEN_MENU","IsRequiredField","IsRequiredFields","INIT_STATE","groups","group","modal","subModal","required","loading","success","fail","errors","myFunction","arr","id","key","value","forEach","current","index","child","state","action","type","JSON","parse","result","data","console","log","group_id","subGroup","data1","data2","modalType","obj"],"mappings":"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","sourcesContent":["import {\r\n    GET_GROUPS_REQUEST,GET_GROUPS_FAIL,GET_GROUPS_SUCCESS,\r\n    GET_GROUP_REQUEST,GET_GROUP_FAIL,GET_GROUP_SUCCESS,\r\n    ADD_GROUP_REQUEST,ADD_GROUP_FAIL,ADD_GROUP_SUCCESS,\r\n    EDIT_GROUP_REQUEST,EDIT_GROUP_FAIL,EDIT_GROUP_SUCCESS,\r\n    DELETE_GROUP_REQUEST,DELETE_GROUP_FAIL,DELETE_GROUP_SUCCESS,\r\n    GET_SUB_GROUP_REQUEST,GET_SUB_GROUP_FAIL,GET_SUB_GROUP_SUCCESS,\r\n    ADD_SUB_GROUP_REQUEST,ADD_SUB_GROUP_FAIL,ADD_SUB_GROUP_SUCCESS,\r\n    EDIT_SUB_GROUP_REQUEST,EDIT_SUB_GROUP_FAIL,EDIT_SUB_GROUP_SUCCESS,\r\n    DELETE_SUB_GROUP_REQUEST,DELETE_SUB_GROUP_FAIL,DELETE_SUB_GROUP_SUCCESS,\r\n    SET_GROUP_MODAL,TOGGLE_GROUP_MODAL,TOGGLE_SUB_GROUP_MODAL,OPEN_MENU\r\n} from \"./actionTypes\";\r\nimport {IsRequiredField,IsRequiredFields} from \"../../utility/utils\";\r\n\r\nconst INIT_STATE = {\r\n    groups: [],\r\n    group:{},\r\n    modal: {},\r\n    subModal: {},\r\n    required: [\"name\"],\r\n    loading: false,\r\n    success: false,\r\n    fail: false,\r\n    errors: {}\r\n};\r\nfunction myFunction(arr,id,key,value=false){\r\n\r\n    arr.forEach(function(current, index){\r\n        if(current.id===id){\r\n            current[key] = !current[key]\r\n        }else{\r\n            if(current.child){\r\n                myFunction(current.child,id,key)\r\n            }\r\n        }\r\n    })\r\n    return arr;\r\n}\r\n\r\nexport default (state = INIT_STATE, action) => {\r\n    switch (action.type) {\r\n        case GET_GROUPS_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n                success: false,\r\n                fail: false,\r\n                modal:{},\r\n                subModal: {},\r\n                errors: {},\r\n            };\r\n        case GET_GROUPS_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: false,\r\n                modal:{},\r\n                subModal: {},\r\n                fail: true,\r\n            };\r\n        case GET_GROUPS_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: true,\r\n                fail: false,\r\n                modal:{},\r\n                subModal: {},\r\n                groups: JSON.parse(action.result.data),\r\n                errors: {},\r\n            };\r\n        case GET_GROUP_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n                success: false,\r\n                fail: false,\r\n                errors: {},\r\n            };\r\n        case GET_GROUP_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: false,\r\n                fail: true,\r\n            };\r\n        case GET_GROUP_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: true,\r\n                fail: false,\r\n                group: JSON.parse(action.result.data),\r\n                errors: {},\r\n            };\r\n        case ADD_GROUP_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n                success: false,\r\n                fail: false,\r\n                errors:IsRequiredFields(state.required,state.group,state.errors)\r\n            }\r\n        case ADD_GROUP_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: false,\r\n                fail: true,\r\n\r\n            };\r\n        case ADD_GROUP_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: true,\r\n                fail: false,\r\n                modal: {},\r\n                groups: JSON.parse(action.result.data)\r\n            };\r\n        case EDIT_GROUP_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n                success: false,\r\n                fail: false,\r\n                errors: IsRequiredFields(state.required,state.group,state.errors)\r\n            }\r\n        case EDIT_GROUP_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: false,\r\n                fail: true,\r\n\r\n            };\r\n        case EDIT_GROUP_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: true,\r\n                fail: false,\r\n                modal: {},\r\n                group: {},\r\n                groups: JSON.parse(action.result.data)\r\n            };\r\n        case DELETE_GROUP_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n                success: false,\r\n                fail: false,\r\n            }\r\n        case DELETE_GROUP_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: false,\r\n                fail: true,\r\n\r\n            };\r\n        case DELETE_GROUP_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: true,\r\n                fail: false,\r\n                modal: {},\r\n                group: {},\r\n                groups: JSON.parse(action.result.data)\r\n            };\r\n        case GET_SUB_GROUP_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n                success: false,\r\n                fail: false,\r\n                errors: {},\r\n            };\r\n        case GET_SUB_GROUP_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: false,\r\n                fail: true,\r\n            };\r\n        case GET_SUB_GROUP_SUCCESS:\r\n            console.log(JSON.parse(action.result.data))\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: true,\r\n                fail: false,\r\n                group: JSON.parse(action.result.data),\r\n                errors: {},\r\n            };\r\n        case ADD_SUB_GROUP_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n                success: false,\r\n                fail: false,\r\n                errors:IsRequiredFields(state.required,state.group,state.errors)\r\n            }\r\n        case ADD_SUB_GROUP_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: false,\r\n                fail: true,\r\n\r\n            };\r\n        case ADD_SUB_GROUP_SUCCESS:\r\n            let data =  JSON.parse(action.result.data);\r\n            state.groups[data.group_id].subGroup = data.subGroup;\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: true,\r\n                fail: false,\r\n                subModal: {},\r\n                groups: state.groups\r\n            };\r\n        case EDIT_SUB_GROUP_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n                success: false,\r\n                fail: false,\r\n                errors: IsRequiredFields(state.required,state.group,state.errors)\r\n            }\r\n        case EDIT_SUB_GROUP_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: false,\r\n                fail: true,\r\n\r\n            };\r\n        case EDIT_SUB_GROUP_SUCCESS:\r\n            let data1 =  JSON.parse(action.result.data);\r\n            console.log(data1)\r\n            state.groups[data1.group_id].subGroup = data1.subGroup\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: true,\r\n                fail: false,\r\n                subModal: {},\r\n                group: {},\r\n                groups: state.groups\r\n            };\r\n        case DELETE_SUB_GROUP_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n                success: false,\r\n                fail: false,\r\n            }\r\n        case DELETE_SUB_GROUP_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: false,\r\n                fail: true,\r\n\r\n            };\r\n        case DELETE_SUB_GROUP_SUCCESS:\r\n            let data2 =  JSON.parse(action.result.data);\r\n            state.groups[data2.group_id].subGroup = data2.subGroup\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: true,\r\n                fail: false,\r\n                subModal: {},\r\n                group: {},\r\n                groups: state.groups\r\n            };\r\n\r\n        case SET_GROUP_MODAL:\r\n            state.group[action.key] = action.value;\r\n            return {\r\n                ...state,\r\n                errors:IsRequiredField(state.required,action,state.errors)\r\n            };\r\n        case TOGGLE_GROUP_MODAL:\r\n            state.modal[action.modalType] = !state.modal[action.modalType];\r\n            if(action.obj){\r\n                if(action.modalType===\"edit\"){\r\n                    state.group[action.obj.key] = action.obj.value\r\n                }else{\r\n                    state.group = action.obj\r\n                }\r\n            }\r\n\r\n            return {\r\n                ...state,\r\n                errors: {},\r\n                subModal: {}\r\n            }\r\n        case TOGGLE_SUB_GROUP_MODAL:\r\n            state.subModal[action.modalType] = !state.subModal[action.modalType];\r\n            let obj = action.obj\r\n            if(obj){\r\n                if(action.modalType===\"edit\"){\r\n                    state.group = {\r\n                        ...state.group,\r\n                        ...obj\r\n                    }\r\n                }else{\r\n                    state.group = obj\r\n                }\r\n            }\r\n\r\n            return {\r\n                ...state,\r\n                errors: {},\r\n                modal: {}\r\n            }\r\n        case OPEN_MENU:\r\n            console.log(action)\r\n            myFunction(state.groups[action.group_id].subGroup,action.id,\"open\")\r\n            return {\r\n                ...state,\r\n            }\r\n        default:\r\n            return {...state};\r\n    }\r\n};\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}