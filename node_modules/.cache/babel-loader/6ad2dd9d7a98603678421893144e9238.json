{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\barcode\\\\src\\\\containers\\\\users\\\\addUser.js\";\nimport React from \"react\";\nimport { Col, Row, Form, FormGroup, Label, Button, ModalBody, ModalFooter } from \"reactstrap\"; // import { connect } from \"react-redux\";\n// import { addContact } from \"../../redux\";\n\nvar AddContact = function AddContact(_ref) {\n  var id = _ref.id,\n      dispatch = _ref.dispatch;\n  var firstname, lastname, department, company, phone, email, address, notes;\n  return React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, React.createElement(Form, {\n    onSubmit: function onSubmit(e) {\n      e.preventDefault();\n\n      if (!firstname.value.trim() || !phone.value.trim() || !email.value.trim()) {\n        return;\n      } // dispatch(\n      //     addContact(\n      //         id,\n      //         firstname.value,\n      //         lastname.value,\n      //         company.value,\n      //         department.value,\n      //         email.value,\n      //         phone.value,\n      //         address.value,\n      //         notes.value\n      //     )\n      // );\n\n\n      firstname.value = \"\";\n      lastname.value = \"\";\n      company.value = \"\";\n      department.value = \"\";\n      email.value = \"\";\n      phone.value = \"\";\n      address.value = \"\";\n      notes.value = \"\";\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, React.createElement(ModalBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, React.createElement(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, React.createElement(Col, {\n    md: 6,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, React.createElement(FormGroup, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, React.createElement(Label, {\n    for: \"firstName\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, \"First Name\"), React.createElement(\"input\", {\n    className: \"form-control\",\n    type: \"text\",\n    name: \"firstname\",\n    id: \"firstName\",\n    ref: function ref(node) {\n      return firstname = node;\n    },\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }))), React.createElement(Col, {\n    md: 6,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, React.createElement(FormGroup, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, React.createElement(Label, {\n    for: \"lastName\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, \"Last Name\"), React.createElement(\"input\", {\n    className: \"form-control\",\n    type: \"text\",\n    name: \"lastname\",\n    id: \"lastName\",\n    ref: function ref(node) {\n      return lastname = node;\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  })))), React.createElement(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, React.createElement(Col, {\n    md: 6,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, React.createElement(FormGroup, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, React.createElement(Label, {\n    for: \"department\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, \"User Name\"), React.createElement(\"input\", {\n    className: \"form-control\",\n    type: \"text\",\n    name: \"department\",\n    id: \"department\",\n    ref: function ref(node) {\n      return department = node;\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }))), React.createElement(Col, {\n    md: 6,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, React.createElement(FormGroup, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, React.createElement(Label, {\n    for: \"company\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, \"Password\"), React.createElement(\"input\", {\n    className: \"form-control\",\n    type: \"text\",\n    name: \"company\",\n    id: \"company\",\n    ref: function ref(node) {\n      return company = node;\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  })))), React.createElement(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, React.createElement(Col, {\n    md: 6,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, React.createElement(FormGroup, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, React.createElement(Label, {\n    for: \"phone\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, \"Position\"), React.createElement(\"input\", {\n    className: \"form-control\",\n    type: \"phone\",\n    name: \"phone\",\n    id: \"phone\",\n    ref: function ref(node) {\n      return phone = node;\n    },\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }))), React.createElement(Col, {\n    md: 6,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }, React.createElement(FormGroup, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }, React.createElement(Label, {\n    for: \"email\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }, \"Active\"), React.createElement(\"input\", {\n    className: \"form-control\",\n    type: \"email\",\n    name: \"email\",\n    id: \"email\",\n    ref: function ref(node) {\n      return email = node;\n    },\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }))))), React.createElement(ModalFooter, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126\n    },\n    __self: this\n  }, React.createElement(Button, {\n    color: \"primary\",\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127\n    },\n    __self: this\n  }, \"Add Contact\"))));\n};\n\nexport default AddContact;","map":{"version":3,"sources":["C:/Users/User/Desktop/barcode/src/containers/users/addUser.js"],"names":["React","Col","Row","Form","FormGroup","Label","Button","ModalBody","ModalFooter","AddContact","id","dispatch","firstname","lastname","department","company","phone","email","address","notes","e","preventDefault","value","trim","node"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { Col, Row, Form, FormGroup, Label, Button, ModalBody, ModalFooter } from \"reactstrap\";\r\n// import { connect } from \"react-redux\";\r\n// import { addContact } from \"../../redux\";\r\n\r\n\r\n\r\nconst AddContact = ({ id, dispatch }) => {\r\n    let firstname, lastname, department, company, phone, email, address, notes;\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Form\r\n                onSubmit={e => {\r\n                    e.preventDefault();\r\n                    if (!firstname.value.trim() || !phone.value.trim() || !email.value.trim()) {\r\n                        return;\r\n                    }\r\n                    // dispatch(\r\n                    //     addContact(\r\n                    //         id,\r\n                    //         firstname.value,\r\n                    //         lastname.value,\r\n                    //         company.value,\r\n                    //         department.value,\r\n                    //         email.value,\r\n                    //         phone.value,\r\n                    //         address.value,\r\n                    //         notes.value\r\n                    //     )\r\n                    // );\r\n                    firstname.value = \"\";\r\n                    lastname.value = \"\";\r\n                    company.value = \"\";\r\n                    department.value = \"\";\r\n                    email.value = \"\";\r\n                    phone.value = \"\";\r\n                    address.value = \"\";\r\n                    notes.value = \"\";\r\n                }}\r\n            >\r\n                <ModalBody>\r\n                    <Row>\r\n                        <Col md={6}>\r\n                            <FormGroup>\r\n                                <Label for=\"firstName\">First Name</Label>\r\n                                <input\r\n                                    className=\"form-control\"\r\n                                    type=\"text\"\r\n                                    name=\"firstname\"\r\n                                    id=\"firstName\"\r\n                                    ref={node => (firstname = node)}\r\n                                    required\r\n                                />\r\n                            </FormGroup>\r\n                        </Col>\r\n                        <Col md={6}>\r\n                            <FormGroup>\r\n                                <Label for=\"lastName\">Last Name</Label>\r\n                                <input\r\n                                    className=\"form-control\"\r\n                                    type=\"text\"\r\n                                    name=\"lastname\"\r\n                                    id=\"lastName\"\r\n                                    ref={node => (lastname = node)}\r\n                                />\r\n                            </FormGroup>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col md={6}>\r\n                            <FormGroup>\r\n                                <Label for=\"department\">User Name</Label>\r\n                                <input\r\n                                    className=\"form-control\"\r\n                                    type=\"text\"\r\n                                    name=\"department\"\r\n                                    id=\"department\"\r\n                                    ref={node => (department = node)}\r\n                                />\r\n                            </FormGroup>\r\n                        </Col>\r\n                        <Col md={6}>\r\n                            <FormGroup>\r\n                                <Label for=\"company\">Password</Label>\r\n                                <input\r\n                                    className=\"form-control\"\r\n                                    type=\"text\"\r\n                                    name=\"company\"\r\n                                    id=\"company\"\r\n                                    ref={node => (company = node)}\r\n                                />\r\n                            </FormGroup>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col md={6}>\r\n                            <FormGroup>\r\n                                <Label for=\"phone\">Position</Label>\r\n                                <input\r\n                                    className=\"form-control\"\r\n                                    type=\"phone\"\r\n                                    name=\"phone\"\r\n                                    id=\"phone\"\r\n                                    ref={node => (phone = node)}\r\n                                    required\r\n                                />\r\n                            </FormGroup>\r\n                        </Col>\r\n                        <Col md={6}>\r\n                            <FormGroup>\r\n                                <Label for=\"email\">Active</Label>\r\n                                <input\r\n                                    className=\"form-control\"\r\n                                    type=\"email\"\r\n                                    name=\"email\"\r\n                                    id=\"email\"\r\n                                    ref={node => (email = node)}\r\n                                    required\r\n                                />\r\n                            </FormGroup>\r\n                        </Col>\r\n                    </Row>\r\n                   \r\n                </ModalBody>\r\n                <ModalFooter>\r\n                    <Button color=\"primary\" type=\"submit\">\r\n                        Add Contact\r\n                    </Button>\r\n                </ModalFooter>\r\n            </Form>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default AddContact;\r\n"]},"metadata":{},"sourceType":"module"}