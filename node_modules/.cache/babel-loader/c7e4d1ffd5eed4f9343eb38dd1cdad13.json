{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\User\\\\Desktop\\\\barcode\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\User\\\\Desktop\\\\barcode\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\User\\\\Desktop\\\\barcode\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\User\\\\Desktop\\\\barcode\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\User\\\\Desktop\\\\barcode\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\barcode\\\\src\\\\containers\\\\pages\\\\group\\\\content.js\";\nimport React, { Component } from 'react';\nimport { Button, ButtonGroup, Card, CardBody, Col, Collapse, ListGroup, ListGroupItem, Row } from 'reactstrap';\nimport SubGroupMenu from \"./subGroupMenu\";\nimport classes from './content.module.css';\nimport { ChevronDown, ChevronRight } from \"react-feather\";\nimport PlusButton from \"../../../components/buttons/plusButton\";\nimport EditButton from \"../../../components/buttons/editButton\";\nimport DeleteButton from \"../../../components/buttons/deleteButton\";\nimport * as Icon from \"react-feather\";\nimport TextFields from \"../../../components/textFieldUI/textField\";\nimport Translate from \"../../../Translate\";\nimport CustomizedTreeView from \"./treeUi/tree\";\n\nvar ContentTable =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ContentTable, _Component);\n\n  function ContentTable() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, ContentTable);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ContentTable)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.clickHandler = function (id) {\n      _this.props.getSeletGroup(id);\n\n      _this.props.getSubGroup(id);\n    };\n\n    _this.searchCHangeHandler = function (name, value, mainId) {\n      _this.props.searchGroups(name, value, mainId);\n    };\n\n    return _this;\n  }\n\n  _createClass(ContentTable, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(React.Fragment, null, React.createElement(\"header\", {\n        className: classes.header,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, this.props.groups ? this.props.groups.map(function (item) {\n        return React.createElement(React.Fragment, {\n          key: item.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 46\n          },\n          __self: this\n        }, React.createElement(Button, {\n          active: _this2.props.group.id === item.id ? true : false,\n          className: classes.groupBtn,\n          outline: true,\n          color: \"primary\",\n          onClick: function onClick() {\n            return _this2.clickHandler(item.id);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 47\n          },\n          __self: this\n        }, item.name));\n      }) : null), React.createElement(\"nav\", {\n        className: classes.nav,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: classes.controllers,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, this.props.group.id ? React.createElement(PlusButton, {\n        perm: this.props.perm,\n        onClick: function onClick() {\n          return _this2.props.setActionToggleSubModal('add', _this2.props.group.id);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }) : null, this.props.group.id ? React.createElement(EditButton, {\n        perm: this.props.perm,\n        onClick: function onClick() {\n          _this2.props.toggleModal('edit', _this2.props.group.id);\n\n          _this2.props.groupActions(\"get\", _this2.props.group);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }) : null, this.props.group.id ? React.createElement(DeleteButton, {\n        perm: this.props.perm,\n        onClick: function onClick() {\n          return _this2.props.toggleModal('delete', _this2.props.group.id);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }) : null), React.createElement(TextFields, {\n        label: React.createElement(Translate, {\n          name: 'Search',\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 109\n          },\n          __self: this\n        }),\n        name: 'search',\n        value: this.props.search ? this.props.search.value : '',\n        onChange: function onChange(event) {\n          return _this2.searchCHangeHandler(event.target.name, event.target.value, _this2.props.group.id);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      })), React.createElement(\"section\", {\n        className: classes.section,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }, this.props.search && this.props.searchResult.length ? React.createElement(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, this.props.searchResult.map(function (item) {\n        return React.createElement(\"li\", {\n          key: item.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 126\n          },\n          __self: this\n        }, item.name, React.createElement(\"button\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 128\n          },\n          __self: this\n        }, \"edit\"), React.createElement(\"button\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 129\n          },\n          __self: this\n        }, \"delete\"));\n      })) : this.props.group.id ? React.createElement(CustomizedTreeView, {\n        subGroupActions: this.props.subGroupActions,\n        setActionToggleSubModal: this.props.setActionToggleSubModal,\n        mainId: this.props.group.id,\n        mainName: this.props.group.name,\n        data: this.props.subGroups,\n        movingGroupStatus: this.props.movingGroupStatus,\n        startMovingGroup: this.props.startMovingGroup,\n        endeMovingGroup: this.props.endeMovingGroup,\n        editPosition: this.props.editPosition,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      }) : null));\n    }\n  }]);\n\n  return ContentTable;\n}(Component);\n\nexport default ContentTable;","map":{"version":3,"sources":["C:/Users/User/Desktop/barcode/src/containers/pages/group/content.js"],"names":["React","Component","Button","ButtonGroup","Card","CardBody","Col","Collapse","ListGroup","ListGroupItem","Row","SubGroupMenu","classes","ChevronDown","ChevronRight","PlusButton","EditButton","DeleteButton","Icon","TextFields","Translate","CustomizedTreeView","ContentTable","clickHandler","id","props","getSeletGroup","getSubGroup","searchCHangeHandler","name","value","mainId","searchGroups","header","groups","map","item","group","groupBtn","nav","controllers","perm","setActionToggleSubModal","toggleModal","groupActions","search","event","target","section","searchResult","length","subGroupActions","subGroups","movingGroupStatus","startMovingGroup","endeMovingGroup","editPosition"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\nimport {\r\n    Button,\r\n    ButtonGroup,\r\n    Card,\r\n    CardBody,\r\n    Col,\r\n    Collapse,\r\n    ListGroup,\r\n    ListGroupItem,\r\n    Row\r\n} from 'reactstrap';\r\nimport SubGroupMenu from \"./subGroupMenu\"\r\nimport classes from './content.module.css'\r\nimport {ChevronDown, ChevronRight} from \"react-feather\";\r\nimport PlusButton from \"../../../components/buttons/plusButton\";\r\nimport EditButton from \"../../../components/buttons/editButton\";\r\nimport DeleteButton from \"../../../components/buttons/deleteButton\";\r\nimport * as Icon from \"react-feather\"\r\nimport TextFields from \"../../../components/textFieldUI/textField\";\r\nimport Translate from \"../../../Translate\";\r\nimport CustomizedTreeView from \"./treeUi/tree\";\r\n\r\nclass ContentTable extends Component {\r\n\r\n    clickHandler = id => {\r\n        this.props.getSeletGroup(id)\r\n        this.props.getSubGroup(id)\r\n    }\r\n\r\n    searchCHangeHandler = (name, value, mainId) => {\r\n        this.props.searchGroups(name, value, mainId)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n\r\n                <header className={classes.header}>\r\n                    {\r\n                        this.props.groups ?\r\n                            this.props.groups.map(\r\n                                item => {\r\n\r\n                                    return (\r\n                                        <React.Fragment key={item.id}>\r\n                                            <Button\r\n                                                active={\r\n                                                    this.props.group.id === item.id ?\r\n                                                        true\r\n                                                        :\r\n                                                        false\r\n                                                }\r\n                                                className={classes.groupBtn}\r\n                                                outline\r\n                                                color='primary'\r\n                                                onClick={\r\n                                                    () => this.clickHandler(item.id)\r\n                                                }\r\n                                            >\r\n                                                {item.name}\r\n                                            </Button>\r\n                                        </React.Fragment>\r\n                                    )\r\n                                }\r\n                            )\r\n                            :\r\n                            null\r\n                    }\r\n                </header>\r\n                <nav className={classes.nav}>\r\n                    <div className={classes.controllers}>\r\n                        {\r\n                            this.props.group.id ?\r\n                                <PlusButton\r\n                                    perm={this.props.perm}\r\n                                    onClick={\r\n                                        () => this.props.setActionToggleSubModal('add', this.props.group.id)\r\n                                    }\r\n                                />\r\n                                :\r\n                                null\r\n                        }\r\n                        {\r\n                            this.props.group.id ?\r\n                                <EditButton\r\n                                    perm={this.props.perm}\r\n                                    onClick={() => {\r\n                                        this.props.toggleModal('edit', this.props.group.id);\r\n                                        this.props.groupActions(\"get\", this.props.group)\r\n                                    }}\r\n                                />\r\n                                :\r\n                                null\r\n                        }\r\n                        {\r\n                            this.props.group.id ?\r\n                                <DeleteButton\r\n                                    perm={this.props.perm}\r\n                                    onClick={\r\n                                        () => this.props.toggleModal('delete', this.props.group.id)\r\n                                    }\r\n                                />\r\n                                :\r\n                                null\r\n                        }\r\n                    </div>\r\n                    <TextFields\r\n                        label={<Translate name={'Search'}/>}\r\n                        name={'search'}\r\n                        value={this.props.search ? this.props.search.value : ''}\r\n                        onChange={\r\n                            event => this.searchCHangeHandler(event.target.name, event.target.value, this.props.group.id)\r\n                        }\r\n                    />\r\n                </nav>\r\n                <section className={classes.section}>\r\n                    {\r\n                        this.props.search && this.props.searchResult.length ?\r\n                            <ul>\r\n                                {\r\n                                    this.props.searchResult.map(\r\n                                        item => {\r\n\r\n                                            return (\r\n                                                <li key={item.id}>\r\n                                                    {item.name}\r\n                                                    <button>edit</button>\r\n                                                    <button>delete</button>\r\n                                                </li>\r\n                                            )\r\n                                        }\r\n                                    )\r\n                                }\r\n                            </ul>\r\n                            :\r\n                            this.props.group.id ?\r\n                                <CustomizedTreeView\r\n                                    subGroupActions={this.props.subGroupActions}\r\n                                    setActionToggleSubModal={this.props.setActionToggleSubModal}\r\n                                    mainId={this.props.group.id}\r\n                                    mainName={this.props.group.name}\r\n                                    data={this.props.subGroups}\r\n                                    movingGroupStatus={this.props.movingGroupStatus}\r\n                                    startMovingGroup={this.props.startMovingGroup}\r\n                                    endeMovingGroup={this.props.endeMovingGroup}\r\n                                    editPosition={this.props.editPosition}\r\n                                />\r\n                                :\r\n                                null\r\n                    }\r\n                </section>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ContentTable"]},"metadata":{},"sourceType":"module"}