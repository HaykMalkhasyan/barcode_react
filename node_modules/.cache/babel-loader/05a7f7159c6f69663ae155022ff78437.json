{"ast":null,"code":"import { GET_GROUPS_REQUEST, GET_GROUPS_FAIL, GET_GROUPS_SUCCESS, GET_GROUP_REQUEST, GET_GROUP_FAIL, GET_GROUP_SUCCESS, ADD_GROUP_REQUEST, ADD_GROUP_FAIL, ADD_GROUP_SUCCESS, EDIT_GROUP_REQUEST, EDIT_GROUP_FAIL, EDIT_GROUP_SUCCESS, DELETE_GROUP_REQUEST, DELETE_GROUP_FAIL, DELETE_GROUP_SUCCESS, ADD_SUB_GROUP_REQUEST, ADD_SUB_GROUP_FAIL, ADD_SUB_GROUP_SUCCESS, EDIT_SUB_GROUP_REQUEST, EDIT_SUB_GROUP_FAIL, EDIT_SUB_GROUP_SUCCESS, DELETE_SUB_GROUP_REQUEST, DELETE_SUB_GROUP_FAIL, DELETE_SUB_GROUP_SUCCESS, SET_GROUP_MODAL, TOGGLE_GROUP_MODAL } from \"./actionTypes\";\nvar cols = 'id,name';\nvar url = \"Group/Group\";\nvar url1 = \"Group/SubGroup\";\nexport var groupActions = function groupActions(type, data) {\n  console.log(data);\n\n  switch (type) {\n    case \"get\":\n      return {\n        types: [GET_GROUP_REQUEST, GET_GROUP_FAIL, GET_GROUP_SUCCESS],\n        promise: function promise(apiClient) {\n          return apiClient.get(url, JSON.stringify({\n            param: {\n              id: data.id\n            }\n          }));\n        }\n      };\n\n    case \"getAll\":\n      return {\n        types: [GET_GROUPS_REQUEST, GET_GROUPS_FAIL, GET_GROUPS_SUCCESS],\n        promise: function promise(apiClient) {\n          return apiClient.get(url, JSON.stringify({\n            cols: cols\n          }));\n        }\n      };\n\n    case \"add\":\n      return {\n        types: [ADD_GROUP_REQUEST, ADD_GROUP_FAIL, ADD_GROUP_SUCCESS],\n        promise: function promise(apiClient) {\n          return apiClient.post(url, JSON.stringify({\n            data: data,\n            cols: cols\n          }));\n        }\n      };\n\n    case \"edit\":\n      return {\n        types: [EDIT_GROUP_REQUEST, EDIT_GROUP_FAIL, EDIT_GROUP_SUCCESS],\n        promise: function promise(apiClient) {\n          return apiClient.put(url, JSON.stringify({\n            id: data.id,\n            data: data,\n            cols: cols\n          }));\n        }\n      };\n\n    case \"delete\":\n      return {\n        types: [DELETE_GROUP_REQUEST, DELETE_GROUP_FAIL, DELETE_GROUP_SUCCESS],\n        promise: function promise(apiClient) {\n          return apiClient.delete(url, JSON.stringify({\n            id: data.id,\n            data: data,\n            cols: cols\n          }));\n        }\n      };\n\n    default:\n      return;\n  }\n};\nexport var subGroupActions = function subGroupActions(type, data) {\n  console.log(data);\n\n  switch (type) {\n    case \"add\":\n      return {\n        types: [ADD_SUB_GROUP_REQUEST, ADD_SUB_GROUP_FAIL, ADD_SUB_GROUP_SUCCESS],\n        promise: function promise(apiClient) {\n          return apiClient.post(url1, JSON.stringify({\n            data: data,\n            cols: cols\n          }));\n        }\n      };\n\n    case \"edit\":\n      return {\n        types: [EDIT_SUB_GROUP_REQUEST, EDIT_SUB_GROUP_FAIL, EDIT_SUB_GROUP_SUCCESS],\n        promise: function promise(apiClient) {\n          return apiClient.put(url1, JSON.stringify({\n            id: data.id,\n            data: data,\n            cols: cols\n          }));\n        }\n      };\n\n    case \"delete\":\n      return {\n        types: [DELETE_SUB_GROUP_REQUEST, DELETE_SUB_GROUP_FAIL, DELETE_SUB_GROUP_SUCCESS],\n        promise: function promise(apiClient) {\n          return apiClient.delete(url1, JSON.stringify({\n            id: data.id,\n            data: data,\n            cols: cols\n          }));\n        }\n      };\n\n    default:\n      return;\n  }\n};\nexport var setModalValues = function setModalValues(key, value) {\n  return {\n    type: SET_GROUP_MODAL,\n    key: key,\n    value: value\n  };\n};\nexport var toggleModal = function toggleModal(modalType, type, id) {\n  var obj = modalType === \"add\" ? {\n    \"parent_id\": id\n  } : {\n    \"id\": id\n  };\n\n  if (type === \"group\") {\n    obj = modalType === \"add\" ? {\n      \"group_id\": id\n    } : {\n      \"id\": id\n    };\n  }\n\n  return {\n    type: TOGGLE_GROUP_MODAL,\n    modalType: modalType,\n    obj: obj\n  };\n};","map":{"version":3,"sources":["C:/Users/User/Desktop/barcode/src/redux/group/actions.js"],"names":["GET_GROUPS_REQUEST","GET_GROUPS_FAIL","GET_GROUPS_SUCCESS","GET_GROUP_REQUEST","GET_GROUP_FAIL","GET_GROUP_SUCCESS","ADD_GROUP_REQUEST","ADD_GROUP_FAIL","ADD_GROUP_SUCCESS","EDIT_GROUP_REQUEST","EDIT_GROUP_FAIL","EDIT_GROUP_SUCCESS","DELETE_GROUP_REQUEST","DELETE_GROUP_FAIL","DELETE_GROUP_SUCCESS","ADD_SUB_GROUP_REQUEST","ADD_SUB_GROUP_FAIL","ADD_SUB_GROUP_SUCCESS","EDIT_SUB_GROUP_REQUEST","EDIT_SUB_GROUP_FAIL","EDIT_SUB_GROUP_SUCCESS","DELETE_SUB_GROUP_REQUEST","DELETE_SUB_GROUP_FAIL","DELETE_SUB_GROUP_SUCCESS","SET_GROUP_MODAL","TOGGLE_GROUP_MODAL","cols","url","url1","groupActions","type","data","console","log","types","promise","apiClient","get","JSON","stringify","param","id","post","put","delete","subGroupActions","setModalValues","key","value","toggleModal","modalType","obj"],"mappings":"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","sourcesContent":["import {\r\n    GET_GROUPS_REQUEST,GET_GROUPS_FAIL,GET_GROUPS_SUCCESS,\r\n    GET_GROUP_REQUEST,GET_GROUP_FAIL,GET_GROUP_SUCCESS,\r\n    ADD_GROUP_REQUEST,ADD_GROUP_FAIL,ADD_GROUP_SUCCESS,\r\n    EDIT_GROUP_REQUEST,EDIT_GROUP_FAIL,EDIT_GROUP_SUCCESS,\r\n    DELETE_GROUP_REQUEST,DELETE_GROUP_FAIL,DELETE_GROUP_SUCCESS,\r\n    ADD_SUB_GROUP_REQUEST,ADD_SUB_GROUP_FAIL,ADD_SUB_GROUP_SUCCESS,\r\n    EDIT_SUB_GROUP_REQUEST,EDIT_SUB_GROUP_FAIL,EDIT_SUB_GROUP_SUCCESS,\r\n    DELETE_SUB_GROUP_REQUEST,DELETE_SUB_GROUP_FAIL,DELETE_SUB_GROUP_SUCCESS,\r\n    SET_GROUP_MODAL,TOGGLE_GROUP_MODAL\r\n} from \"./actionTypes\";\r\n\r\n\r\nlet cols =  'id,name';\r\nlet url = `Group/Group`;\r\nlet url1 = `Group/SubGroup`\r\n\r\nexport const groupActions = (type,data) => {\r\n    console.log(data)\r\n    switch(type) {\r\n        case \"get\":\r\n            return {\r\n                types: [GET_GROUP_REQUEST,GET_GROUP_FAIL,GET_GROUP_SUCCESS],\r\n                promise: (apiClient) => apiClient.get(url, JSON.stringify({ param:{id:data.id} }))\r\n            }\r\n        case \"getAll\":\r\n            return {\r\n                types: [GET_GROUPS_REQUEST,GET_GROUPS_FAIL,GET_GROUPS_SUCCESS],\r\n                promise: (apiClient) => apiClient.get(url, JSON.stringify({ cols }))\r\n            }\r\n        case \"add\":\r\n            return {\r\n                types: [ADD_GROUP_REQUEST, ADD_GROUP_FAIL, ADD_GROUP_SUCCESS],\r\n                promise: (apiClient) => apiClient.post(url, JSON.stringify({data, cols}))\r\n            }\r\n        case \"edit\":\r\n            return {\r\n                types: [EDIT_GROUP_REQUEST,EDIT_GROUP_FAIL,EDIT_GROUP_SUCCESS],\r\n                promise: (apiClient) => apiClient.put(url,JSON.stringify({id:data.id,data,cols}))\r\n            }\r\n        case \"delete\":\r\n            return {\r\n                types: [DELETE_GROUP_REQUEST,DELETE_GROUP_FAIL,DELETE_GROUP_SUCCESS],\r\n                promise: (apiClient) => apiClient.delete(url, JSON.stringify({id:data.id, data,cols }))\r\n            }\r\n        default:\r\n            return ;\r\n    }\r\n};\r\nexport const subGroupActions = (type,data) => {\r\n    console.log(data)\r\n    switch(type) {\r\n        case \"add\":\r\n            return {\r\n                types: [ADD_SUB_GROUP_REQUEST, ADD_SUB_GROUP_FAIL, ADD_SUB_GROUP_SUCCESS],\r\n                promise: (apiClient) => apiClient.post(url1, JSON.stringify({data, cols}))\r\n            }\r\n        case \"edit\":\r\n            return {\r\n                types: [EDIT_SUB_GROUP_REQUEST,EDIT_SUB_GROUP_FAIL,EDIT_SUB_GROUP_SUCCESS],\r\n                promise: (apiClient) => apiClient.put(url1,JSON.stringify({id:data.id,data,cols}))\r\n            }\r\n        case \"delete\":\r\n            return {\r\n                types: [DELETE_SUB_GROUP_REQUEST,DELETE_SUB_GROUP_FAIL,DELETE_SUB_GROUP_SUCCESS],\r\n                promise: (apiClient) => apiClient.delete(url1, JSON.stringify({id:data.id, data,cols }))\r\n            }\r\n        default:\r\n            return ;\r\n    }\r\n};\r\n\r\n\r\nexport const setModalValues = (key,value) => {\r\n    return {\r\n        type: SET_GROUP_MODAL,\r\n        key,\r\n        value\r\n    }\r\n}\r\n\r\nexport const toggleModal = (modalType,type,id) => {\r\n    let obj = (modalType===\"add\")?{\"parent_id\":id}:{\"id\":id};\r\n    if(type===\"group\"){\r\n        obj = (modalType===\"add\")?{\"group_id\":id}:{\"id\":id};\r\n    }\r\n    return {\r\n        type: TOGGLE_GROUP_MODAL,\r\n        modalType,\r\n        obj\r\n    }\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}