{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\User\\\\Desktop\\\\barcode\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport { GET_GROUPS_REQUEST, GET_GROUPS_FAIL, GET_GROUPS_SUCCESS, GET_GROUP_REQUEST, GET_GROUP_FAIL, GET_GROUP_SUCCESS, ADD_GROUP_REQUEST, ADD_GROUP_FAIL, ADD_GROUP_SUCCESS, EDIT_GROUP_REQUEST, EDIT_GROUP_FAIL, EDIT_GROUP_SUCCESS, DELETE_GROUP_REQUEST, DELETE_GROUP_FAIL, DELETE_GROUP_SUCCESS, GET_SUB_GROUP_REQUEST, GET_SUB_GROUP_FAIL, GET_SUB_GROUP_SUCCESS, ADD_SUB_GROUP_REQUEST, ADD_SUB_GROUP_FAIL, ADD_SUB_GROUP_SUCCESS, EDIT_SUB_GROUP_REQUEST, EDIT_SUB_GROUP_FAIL, EDIT_SUB_GROUP_SUCCESS, DELETE_SUB_GROUP_REQUEST, DELETE_SUB_GROUP_FAIL, DELETE_SUB_GROUP_SUCCESS, SET_GROUP_MODAL, TOGGLE_GROUP_MODAL, TOGGLE_SUB_GROUP_MODAL, OPEN_MENU, SELECT_GROUP, GET_SUB_GROUPS_REQUEST, GET_SUB_GROUPS_FAIL, GET_SUB_GROUPS_SUCCESS, SELECT_GROUPS_REQUEST, SELECT_GROUPS_FAIL, SELECT_GROUPS_SUCCESS, SET_TOGGLE_SUB_MODAL_VALUE, SET_SUB_MODAL_NAME_VALUE, TOGGLE_SUB_MODAL, START_MOVING_GROUP, END_MOVING_GROUP, SET_SEARCH_VALUE, SHOW_ALTERNATIVE } from \"./actionTypes\";\nimport { IsRequiredField, Put, IsRequiredFields, Pushend, changeElement, RemoveItem } from \"../../utility/utils\";\nimport { openMenu } from \"./functions\";\nvar INIT_STATE = {\n  groups: [],\n  group: {},\n  subGroups: [],\n  subGroup: {},\n  modal: {},\n  subModal: {},\n  required: [\"name\"],\n  selected: {},\n  loading: false,\n  success: false,\n  fail: false,\n  errors: {},\n  movingGroupStatus: false,\n  movingstatus: false,\n  search: null,\n  alternative: true,\n  searchResult: []\n};\nexport default (function () {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : INIT_STATE;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case SHOW_ALTERNATIVE:\n      return _objectSpread({}, state, {\n        alternative: !state.alternative\n      });\n\n    case SET_SEARCH_VALUE:\n      return _objectSpread({}, state, {\n        searchResult: action.searchResult,\n        search: action.search\n      });\n\n    case END_MOVING_GROUP:\n      return _objectSpread({}, state, {\n        movingGroupStatus: false\n      });\n\n    case START_MOVING_GROUP:\n      return _objectSpread({}, state, {\n        movingGroupStatus: action.id\n      });\n\n    case TOGGLE_SUB_MODAL:\n      return _objectSpread({}, state, {\n        subModal: {}\n      });\n\n    case SET_TOGGLE_SUB_MODAL_VALUE:\n      return action.subGroup ? _objectSpread({}, state, {\n        subModal: action.subModal,\n        subGroup: action.subGroup\n      }) : _objectSpread({}, state, {\n        subModal: action.subModal\n      });\n\n    case SET_SUB_MODAL_NAME_VALUE:\n      return _objectSpread({}, state, {\n        subGroup: action.subGroup\n      });\n\n    case SELECT_GROUPS_REQUEST:\n      return _objectSpread({}, state, {\n        loading: true,\n        success: false,\n        fail: false,\n        modal: {},\n        subModal: {},\n        errors: {}\n      });\n\n    case SELECT_GROUPS_FAIL:\n      return _objectSpread({}, state, {\n        loading: false,\n        success: false,\n        modal: {},\n        subModal: {},\n        fail: true\n      });\n\n    case SELECT_GROUPS_SUCCESS:\n      return _objectSpread({}, state, {\n        loading: false,\n        success: true,\n        fail: false,\n        modal: {},\n        subModal: {},\n        group: action.result,\n        search: null,\n        searchResult: [],\n        errors: {}\n      });\n\n    case GET_GROUPS_REQUEST:\n      return _objectSpread({}, state, {\n        loading: true,\n        success: false,\n        fail: false,\n        modal: {},\n        subModal: {},\n        errors: {}\n      });\n\n    case GET_GROUPS_FAIL:\n      return _objectSpread({}, state, {\n        loading: false,\n        success: false,\n        modal: {},\n        subModal: {},\n        fail: true\n      });\n\n    case GET_GROUPS_SUCCESS:\n      return _objectSpread({}, state, {\n        loading: false,\n        success: true,\n        fail: false,\n        modal: {},\n        subModal: {},\n        groups: action.result.results,\n        group: action.result.results[0],\n        errors: {}\n      });\n\n    case GET_GROUP_REQUEST:\n      return _objectSpread({}, state, {\n        loading: true,\n        success: false,\n        fail: false,\n        errors: {}\n      });\n\n    case GET_GROUP_FAIL:\n      return _objectSpread({}, state, {\n        loading: false,\n        success: false,\n        fail: true\n      });\n\n    case GET_GROUP_SUCCESS:\n      // console.log('ggg',action.result[Object.keys(action.result)[0]])\n      return _objectSpread({}, state, {\n        loading: false,\n        success: true,\n        fail: false,\n        group: action.result,\n        errors: {}\n      });\n\n    case ADD_GROUP_REQUEST:\n      return _objectSpread({}, state, {\n        loading: true,\n        success: false,\n        fail: false,\n        errors: IsRequiredFields(state.required, state.group, state.errors)\n      });\n\n    case ADD_GROUP_FAIL:\n      return _objectSpread({}, state, {\n        loading: false,\n        success: false,\n        fail: true\n      });\n\n    case ADD_GROUP_SUCCESS:\n      return _objectSpread({}, state, {\n        loading: false,\n        success: true,\n        fail: false,\n        modal: {},\n        groups: Pushend(state.groups, action.result)\n      });\n\n    case EDIT_GROUP_REQUEST:\n      return _objectSpread({}, state, {\n        loading: true,\n        success: false,\n        fail: false,\n        errors: IsRequiredFields(state.required, state.group, state.errors)\n      });\n\n    case EDIT_GROUP_FAIL:\n      return _objectSpread({}, state, {\n        loading: false,\n        success: false,\n        fail: true\n      });\n\n    case EDIT_GROUP_SUCCESS:\n      return _objectSpread({}, state, {\n        groups: changeElement(state.groups, action.result),\n        modal: {},\n        loading: false,\n        success: true,\n        fail: false\n      });\n\n    case DELETE_GROUP_REQUEST:\n      return _objectSpread({}, state, {\n        loading: true,\n        success: false,\n        fail: false\n      });\n\n    case DELETE_GROUP_FAIL:\n      return _objectSpread({}, state, {\n        loading: false,\n        success: false,\n        fail: true\n      });\n\n    case DELETE_GROUP_SUCCESS:\n      return _objectSpread({}, state, {\n        groups: RemoveItem(state.groups, action.data),\n        modal: {},\n        loading: false,\n        success: true,\n        fail: false,\n        group: {}\n      });\n\n    case GET_SUB_GROUP_REQUEST:\n      return _objectSpread({}, state, {\n        loading: true,\n        success: false,\n        fail: false,\n        errors: {}\n      });\n\n    case GET_SUB_GROUP_FAIL:\n      return _objectSpread({}, state, {\n        loading: false,\n        success: false,\n        fail: true\n      });\n\n    case GET_SUB_GROUP_SUCCESS:\n      return _objectSpread({}, state, {\n        loading: false,\n        success: true,\n        fail: false,\n        subGroup: action.result,\n        errors: {}\n      });\n\n    case GET_SUB_GROUPS_REQUEST:\n      return _objectSpread({}, state, {\n        loading: true,\n        success: false,\n        fail: false,\n        errors: {}\n      });\n\n    case GET_SUB_GROUPS_FAIL:\n      return _objectSpread({}, state, {\n        loading: false,\n        success: false,\n        fail: true\n      });\n\n    case GET_SUB_GROUPS_SUCCESS:\n      return _objectSpread({}, state, {\n        loading: false,\n        success: true,\n        fail: false,\n        subGroups: action.result.results,\n        errors: {}\n      });\n\n    case ADD_SUB_GROUP_REQUEST:\n      return _objectSpread({}, state, {\n        loading: true,\n        success: false,\n        fail: false,\n        errors: IsRequiredFields(state.required, state.group, state.errors)\n      });\n\n    case ADD_SUB_GROUP_FAIL:\n      return _objectSpread({}, state, {\n        loading: false,\n        success: false,\n        fail: true\n      });\n\n    case ADD_SUB_GROUP_SUCCESS:\n      return _objectSpread({}, state, {\n        subGroups: Pushend(state.subGroups, action.result),\n        subModal: {},\n        loading: false,\n        success: true,\n        fail: false\n      });\n\n    case EDIT_SUB_GROUP_REQUEST:\n      return _objectSpread({}, state, {\n        loading: true,\n        success: false,\n        fail: false,\n        errors: IsRequiredFields(state.required, state.group, state.errors)\n      });\n\n    case EDIT_SUB_GROUP_FAIL:\n      return _objectSpread({}, state, {\n        loading: false,\n        success: false,\n        fail: true\n      });\n\n    case EDIT_SUB_GROUP_SUCCESS:\n      console.log(action.result);\n      return _objectSpread({}, state, {\n        loading: false,\n        success: true,\n        fail: false,\n        subModal: {},\n        movingGroupStatus: false,\n        subGroups: Put(state.subGroups, action.result, 'id'),\n        searchResult: state.searchResult.length > 0 ? Put(state.searchResult, action.result, 'id') : []\n      });\n\n    case DELETE_SUB_GROUP_REQUEST:\n      return _objectSpread({}, state, {\n        loading: true,\n        success: false,\n        fail: false\n      });\n\n    case DELETE_SUB_GROUP_FAIL:\n      return _objectSpread({}, state, {\n        loading: false,\n        success: false,\n        fail: true\n      });\n\n    case DELETE_SUB_GROUP_SUCCESS:\n      return _objectSpread({}, state, {\n        loading: false,\n        success: true,\n        fail: false,\n        subGroups: RemoveItem(state.subGroups, {\n          id: action.data\n        }),\n        searchResult: state.searchResult.length > 0 ? RemoveItem(action.data, {\n          id: action.data\n        }) : []\n      });\n\n    case SET_GROUP_MODAL:\n      state.group[action.key] = action.value;\n      return _objectSpread({}, state, {\n        errors: IsRequiredField(state.required, action, state.errors)\n      });\n\n    case TOGGLE_GROUP_MODAL:\n      state.modal[action.modalType] = !state.modal[action.modalType];\n\n      if (action.obj) {\n        if (action.modalType === \"edit\") {\n          state.group[action.obj.key] = action.obj.value;\n        } else {\n          state.group = action.obj;\n        }\n      }\n\n      return _objectSpread({}, state, {\n        errors: {},\n        subModal: {}\n      });\n\n    case TOGGLE_SUB_GROUP_MODAL:\n      state.subModal[action.modalType] = !state.subModal[action.modalType];\n      var obj = action.obj;\n\n      if (obj) {\n        if (action.modalType === \"edit\") {\n          state.subGroup = _objectSpread({}, state.subGroup, obj);\n        } else {\n          state.subGroup = obj;\n        }\n      }\n\n      return _objectSpread({}, state, {\n        errors: {},\n        modal: {}\n      });\n\n    case OPEN_MENU:\n      state.groups[action.group_id].subGroup = openMenu(state.groups[action.group_id].subGroup, action.id, \"open\");\n      return _objectSpread({}, state, {\n        groups: state.groups\n      });\n\n    case SELECT_GROUP:\n      state.selected[action.group_id] = action.value;\n      return _objectSpread({}, state);\n\n    default:\n      return _objectSpread({}, state);\n  }\n});","map":{"version":3,"sources":["C:/Users/User/Desktop/barcode/src/redux/group/reducer.js"],"names":["GET_GROUPS_REQUEST","GET_GROUPS_FAIL","GET_GROUPS_SUCCESS","GET_GROUP_REQUEST","GET_GROUP_FAIL","GET_GROUP_SUCCESS","ADD_GROUP_REQUEST","ADD_GROUP_FAIL","ADD_GROUP_SUCCESS","EDIT_GROUP_REQUEST","EDIT_GROUP_FAIL","EDIT_GROUP_SUCCESS","DELETE_GROUP_REQUEST","DELETE_GROUP_FAIL","DELETE_GROUP_SUCCESS","GET_SUB_GROUP_REQUEST","GET_SUB_GROUP_FAIL","GET_SUB_GROUP_SUCCESS","ADD_SUB_GROUP_REQUEST","ADD_SUB_GROUP_FAIL","ADD_SUB_GROUP_SUCCESS","EDIT_SUB_GROUP_REQUEST","EDIT_SUB_GROUP_FAIL","EDIT_SUB_GROUP_SUCCESS","DELETE_SUB_GROUP_REQUEST","DELETE_SUB_GROUP_FAIL","DELETE_SUB_GROUP_SUCCESS","SET_GROUP_MODAL","TOGGLE_GROUP_MODAL","TOGGLE_SUB_GROUP_MODAL","OPEN_MENU","SELECT_GROUP","GET_SUB_GROUPS_REQUEST","GET_SUB_GROUPS_FAIL","GET_SUB_GROUPS_SUCCESS","SELECT_GROUPS_REQUEST","SELECT_GROUPS_FAIL","SELECT_GROUPS_SUCCESS","SET_TOGGLE_SUB_MODAL_VALUE","SET_SUB_MODAL_NAME_VALUE","TOGGLE_SUB_MODAL","START_MOVING_GROUP","END_MOVING_GROUP","SET_SEARCH_VALUE","SHOW_ALTERNATIVE","IsRequiredField","Put","IsRequiredFields","Pushend","changeElement","RemoveItem","openMenu","INIT_STATE","groups","group","subGroups","subGroup","modal","subModal","required","selected","loading","success","fail","errors","movingGroupStatus","movingstatus","search","alternative","searchResult","state","action","type","id","result","results","data","console","log","length","key","value","modalType","obj","group_id"],"mappings":"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","sourcesContent":["import {\r\n    GET_GROUPS_REQUEST,\r\n    GET_GROUPS_FAIL,\r\n    GET_GROUPS_SUCCESS,\r\n    GET_GROUP_REQUEST,\r\n    GET_GROUP_FAIL,\r\n    GET_GROUP_SUCCESS,\r\n    ADD_GROUP_REQUEST,\r\n    ADD_GROUP_FAIL,\r\n    ADD_GROUP_SUCCESS,\r\n    EDIT_GROUP_REQUEST,\r\n    EDIT_GROUP_FAIL,\r\n    EDIT_GROUP_SUCCESS,\r\n    DELETE_GROUP_REQUEST,\r\n    DELETE_GROUP_FAIL,\r\n    DELETE_GROUP_SUCCESS,\r\n    GET_SUB_GROUP_REQUEST,\r\n    GET_SUB_GROUP_FAIL,\r\n    GET_SUB_GROUP_SUCCESS,\r\n    ADD_SUB_GROUP_REQUEST,\r\n    ADD_SUB_GROUP_FAIL,\r\n    ADD_SUB_GROUP_SUCCESS,\r\n    EDIT_SUB_GROUP_REQUEST,\r\n    EDIT_SUB_GROUP_FAIL,\r\n    EDIT_SUB_GROUP_SUCCESS,\r\n    DELETE_SUB_GROUP_REQUEST,\r\n    DELETE_SUB_GROUP_FAIL,\r\n    DELETE_SUB_GROUP_SUCCESS,\r\n    SET_GROUP_MODAL,\r\n    TOGGLE_GROUP_MODAL,\r\n    TOGGLE_SUB_GROUP_MODAL,\r\n    OPEN_MENU,\r\n    SELECT_GROUP,\r\n    GET_SUB_GROUPS_REQUEST,\r\n    GET_SUB_GROUPS_FAIL,\r\n    GET_SUB_GROUPS_SUCCESS,\r\n    SELECT_GROUPS_REQUEST,\r\n    SELECT_GROUPS_FAIL,\r\n    SELECT_GROUPS_SUCCESS,\r\n    SET_TOGGLE_SUB_MODAL_VALUE,\r\n    SET_SUB_MODAL_NAME_VALUE, TOGGLE_SUB_MODAL, START_MOVING_GROUP, END_MOVING_GROUP, SET_SEARCH_VALUE, SHOW_ALTERNATIVE\r\n} from \"./actionTypes\";\r\nimport {IsRequiredField, Put, IsRequiredFields, Pushend, changeElement, RemoveItem} from \"../../utility/utils\";\r\nimport {openMenu} from \"./functions\";\r\n\r\nconst INIT_STATE = {\r\n    groups: [],\r\n    group: {},\r\n    subGroups: [],\r\n    subGroup: {},\r\n    modal: {},\r\n    subModal: {},\r\n    required: [\"name\"],\r\n    selected: {},\r\n    loading: false,\r\n    success: false,\r\n    fail: false,\r\n    errors: {},\r\n    movingGroupStatus: false,\r\n    movingstatus: false,\r\n    search: null,\r\n    alternative: true,\r\n    searchResult: []\r\n};\r\n\r\nexport default (state = INIT_STATE, action) => {\r\n    switch (action.type) {\r\n        case SHOW_ALTERNATIVE:\r\n            return {\r\n                ...state,\r\n                alternative: !state.alternative\r\n            }\r\n        case SET_SEARCH_VALUE:\r\n            return {\r\n                ...state,\r\n                searchResult: action.searchResult,\r\n                search: action.search\r\n            }\r\n        case END_MOVING_GROUP:\r\n            return {\r\n                ...state,\r\n                movingGroupStatus: false\r\n            }\r\n        case START_MOVING_GROUP:\r\n            return {\r\n                ...state,\r\n                movingGroupStatus: action.id\r\n            }\r\n        case TOGGLE_SUB_MODAL:\r\n            return {\r\n                ...state,\r\n                subModal: {}\r\n            }\r\n        case SET_TOGGLE_SUB_MODAL_VALUE:\r\n            return action.subGroup ?\r\n                {\r\n                    ...state,\r\n                    subModal: action.subModal,\r\n                    subGroup: action.subGroup\r\n                }\r\n                :\r\n                {\r\n                    ...state,\r\n                    subModal: action.subModal,\r\n                }\r\n        case SET_SUB_MODAL_NAME_VALUE:\r\n            return {\r\n                ...state,\r\n                subGroup: action.subGroup\r\n            }\r\n        case SELECT_GROUPS_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n                success: false,\r\n                fail: false,\r\n                modal: {},\r\n                subModal: {},\r\n                errors: {},\r\n            };\r\n        case SELECT_GROUPS_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: false,\r\n                modal: {},\r\n                subModal: {},\r\n                fail: true,\r\n            };\r\n        case SELECT_GROUPS_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: true,\r\n                fail: false,\r\n                modal: {},\r\n                subModal: {},\r\n                group: action.result,\r\n                search: null,\r\n                searchResult: [],\r\n                errors: {},\r\n            };\r\n        case GET_GROUPS_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n                success: false,\r\n                fail: false,\r\n                modal: {},\r\n                subModal: {},\r\n                errors: {},\r\n            };\r\n        case GET_GROUPS_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: false,\r\n                modal: {},\r\n                subModal: {},\r\n                fail: true,\r\n            };\r\n        case GET_GROUPS_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: true,\r\n                fail: false,\r\n                modal: {},\r\n                subModal: {},\r\n                groups: action.result.results,\r\n                group: action.result.results[0],\r\n                errors: {},\r\n            };\r\n        case GET_GROUP_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n                success: false,\r\n                fail: false,\r\n                errors: {},\r\n            };\r\n        case GET_GROUP_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: false,\r\n                fail: true,\r\n            };\r\n        case GET_GROUP_SUCCESS:\r\n            // console.log('ggg',action.result[Object.keys(action.result)[0]])\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: true,\r\n                fail: false,\r\n                group: action.result,\r\n                errors: {},\r\n            };\r\n        case ADD_GROUP_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n                success: false,\r\n                fail: false,\r\n                errors: IsRequiredFields(state.required, state.group, state.errors)\r\n            }\r\n        case ADD_GROUP_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: false,\r\n                fail: true,\r\n\r\n            };\r\n        case ADD_GROUP_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: true,\r\n                fail: false,\r\n                modal: {},\r\n                groups: Pushend(state.groups, action.result)\r\n            };\r\n        case EDIT_GROUP_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n                success: false,\r\n                fail: false,\r\n                errors: IsRequiredFields(state.required, state.group, state.errors)\r\n            }\r\n        case EDIT_GROUP_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: false,\r\n                fail: true,\r\n\r\n            };\r\n        case EDIT_GROUP_SUCCESS:\r\n            return {\r\n                ...state,\r\n                groups: changeElement(state.groups, action.result),\r\n                modal: {},\r\n                loading: false,\r\n                success: true,\r\n                fail: false,\r\n            };\r\n        case DELETE_GROUP_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n                success: false,\r\n                fail: false,\r\n            }\r\n        case DELETE_GROUP_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: false,\r\n                fail: true,\r\n\r\n            };\r\n        case DELETE_GROUP_SUCCESS:\r\n            return {\r\n                ...state,\r\n                groups: RemoveItem(state.groups, action.data),\r\n                modal: {},\r\n                loading: false,\r\n                success: true,\r\n                fail: false,\r\n                group: {}\r\n            };\r\n        case GET_SUB_GROUP_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n                success: false,\r\n                fail: false,\r\n                errors: {},\r\n            };\r\n        case GET_SUB_GROUP_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: false,\r\n                fail: true,\r\n            };\r\n        case GET_SUB_GROUP_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: true,\r\n                fail: false,\r\n                subGroup: action.result,\r\n                errors: {},\r\n            };\r\n        case GET_SUB_GROUPS_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n                success: false,\r\n                fail: false,\r\n                errors: {},\r\n            };\r\n        case GET_SUB_GROUPS_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: false,\r\n                fail: true,\r\n            };\r\n        case GET_SUB_GROUPS_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: true,\r\n                fail: false,\r\n                subGroups: action.result.results,\r\n                errors: {},\r\n            };\r\n        case ADD_SUB_GROUP_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n                success: false,\r\n                fail: false,\r\n                errors: IsRequiredFields(state.required, state.group, state.errors)\r\n            }\r\n        case ADD_SUB_GROUP_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: false,\r\n                fail: true,\r\n\r\n            };\r\n        case ADD_SUB_GROUP_SUCCESS:\r\n            return {\r\n                ...state,\r\n                subGroups: Pushend(state.subGroups, action.result),\r\n                subModal: {},\r\n                loading: false,\r\n                success: true,\r\n                fail: false\r\n            };\r\n        case EDIT_SUB_GROUP_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n                success: false,\r\n                fail: false,\r\n                errors: IsRequiredFields(state.required, state.group, state.errors)\r\n            }\r\n        case EDIT_SUB_GROUP_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: false,\r\n                fail: true,\r\n\r\n            };\r\n        case EDIT_SUB_GROUP_SUCCESS:\r\n            console.log(action.result)\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: true,\r\n                fail: false,\r\n                subModal: {},\r\n                movingGroupStatus: false,\r\n                subGroups: Put(state.subGroups, action.result, 'id'),\r\n                searchResult: state.searchResult.length > 0 ? Put(state.searchResult, action.result, 'id') : [],\r\n            };\r\n        case DELETE_SUB_GROUP_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n                success: false,\r\n                fail: false,\r\n            }\r\n        case DELETE_SUB_GROUP_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: false,\r\n                fail: true,\r\n\r\n            };\r\n        case DELETE_SUB_GROUP_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: true,\r\n                fail: false,\r\n                subGroups: RemoveItem(state.subGroups, {id: action.data}),\r\n                searchResult: state.searchResult.length > 0 ? RemoveItem(action.data, {id: action.data}) : [],\r\n            };\r\n\r\n        case SET_GROUP_MODAL:\r\n            state.group[action.key] = action.value;\r\n            return {\r\n                ...state,\r\n                errors: IsRequiredField(state.required, action, state.errors)\r\n            };\r\n        case TOGGLE_GROUP_MODAL:\r\n            state.modal[action.modalType] = !state.modal[action.modalType];\r\n            if (action.obj) {\r\n                if (action.modalType === \"edit\") {\r\n                    state.group[action.obj.key] = action.obj.value\r\n                } else {\r\n                    state.group = action.obj\r\n                }\r\n            }\r\n\r\n            return {\r\n                ...state,\r\n                errors: {},\r\n                subModal: {}\r\n            }\r\n        case TOGGLE_SUB_GROUP_MODAL:\r\n            state.subModal[action.modalType] = !state.subModal[action.modalType];\r\n            let obj = action.obj\r\n            if (obj) {\r\n                if (action.modalType === \"edit\") {\r\n                    state.subGroup = {\r\n                        ...state.subGroup,\r\n                        ...obj\r\n                    }\r\n                } else {\r\n                    state.subGroup = obj\r\n                }\r\n            }\r\n\r\n            return {\r\n                ...state,\r\n                errors: {},\r\n                modal: {}\r\n            }\r\n        case OPEN_MENU:\r\n            state.groups[action.group_id].subGroup = openMenu(state.groups[action.group_id].subGroup, action.id, \"open\");\r\n            return {\r\n                ...state,\r\n                groups: state.groups\r\n            }\r\n        case SELECT_GROUP:\r\n            state.selected[action.group_id] = action.value\r\n            return {\r\n                ...state,\r\n            }\r\n        default:\r\n            return {...state};\r\n    }\r\n};\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}