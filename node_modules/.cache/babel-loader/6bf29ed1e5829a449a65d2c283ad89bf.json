{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\User\\\\Desktop\\\\barcode\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport { GET_SUPPLIERS_REQUEST, GET_SUPPLIERS_FAIL, GET_SUPPLIERS_SUCCESS, GET_SUPPLIER_REQUEST, GET_SUPPLIER_FAIL, GET_SUPPLIER_SUCCESS, ADD_SUPPLIER_REQUEST, ADD_SUPPLIER_FAIL, ADD_SUPPLIER_SUCCESS, EDIT_SUPPLIER_REQUEST, EDIT_SUPPLIER_FAIL, EDIT_SUPPLIER_SUCCESS, DELETE_SUPPLIER_REQUEST, DELETE_SUPPLIER_FAIL, DELETE_SUPPLIER_SUCCESS, GET_BANKS_REQUEST, GET_BANKS_FAIL, GET_BANKS_SUCCESS, SET_SUPPLIER_MODAL, TOGGLE_SUPPLIER_MODAL, GET_Currency_REQUEST, GET_Currency_FAIL, GET_Currency_SUCCESS, SUPPLIERS_ADD_MODAL, SET_SUPPLIERS_VALUE, FETCH_SUPPLIER_REQUEST, FETCH_SUPPLIER_FAIL, FETCH_SUPPLIER_SUCCESS, SUPPLIERS_OPEN_MODAL, EMPTY_VALUE, SUCCES_VALUE } from \"./actionTypes\";\nimport { IsRequiredField, IsRequiredFields, Push, Put, RemoveItem } from \"../../utility/utils\";\nvar INIT_STATE = {\n  suppliers: [],\n  supplier: {},\n  banks: [],\n  currency: [],\n  modal: {},\n  required: [\"name\"],\n  loading: false,\n  success: false,\n  fail: false,\n  errors: {},\n  tin: {},\n\n  /*---------------------------------*/\n  isOpen: false,\n  modalType: '',\n  setSupplier: {\n    name: '',\n    hh: '',\n    hvhh: '',\n    address: '',\n    tin: [],\n    director: '',\n    phone: [],\n    active: 0,\n    type: 0\n  },\n  errorMessage: null,\n  checkValueStatus: {\n    name: false,\n    hh: false,\n    hvhh: false,\n    address: false,\n    director: false,\n    bank_id: false,\n    currency_id: false,\n    tin_value: false,\n    phone: false\n  }\n};\nexport default (function () {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : INIT_STATE;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case GET_SUPPLIERS_REQUEST:\n      return _objectSpread({}, state, {\n        loading: true,\n        success: false,\n        modal: {},\n        fail: false,\n        errors: {}\n      });\n\n    case GET_SUPPLIERS_FAIL:\n      return _objectSpread({}, state, {\n        loading: false,\n        success: false,\n        modal: {},\n        fail: true\n      });\n\n    case GET_SUPPLIERS_SUCCESS:\n      return _objectSpread({}, state, {\n        loading: false,\n        success: true,\n        fail: false,\n        suppliers: action.result.results,\n        modal: {},\n        errors: {}\n      });\n\n    case GET_SUPPLIER_REQUEST:\n      return _objectSpread({}, state, {\n        loading: true,\n        success: false,\n        fail: false,\n        errors: {}\n      });\n\n    case GET_SUPPLIER_FAIL:\n      return _objectSpread({}, state, {\n        loading: false,\n        success: false,\n        fail: true\n      });\n\n    case GET_SUPPLIER_SUCCESS:\n      return _objectSpread({}, state, {\n        loading: false,\n        success: true,\n        fail: false,\n        setSupplier: action.result,\n        errors: {}\n      });\n\n    case ADD_SUPPLIER_REQUEST:\n      return _objectSpread({}, state, {\n        loading: true,\n        success: false,\n        fail: false,\n        errors: IsRequiredFields(state.required, state.supplier, state.errors)\n      });\n\n    case ADD_SUPPLIER_FAIL:\n      return _objectSpread({}, state, {\n        loading: false,\n        success: false,\n        fail: true\n      });\n\n    case ADD_SUPPLIER_SUCCESS:\n      return _objectSpread({}, state, {\n        loading: false,\n        success: true,\n        fail: false,\n        modal: {},\n        suppliers: _objectSpread({}, JSON.parse(action.result.data), state.suppliers)\n      });\n\n    case EDIT_SUPPLIER_REQUEST:\n      return _objectSpread({}, state, {\n        loading: true,\n        success: false,\n        fail: false,\n        errors: IsRequiredFields(state.required, state.supplier, state.errors)\n      });\n\n    case EDIT_SUPPLIER_FAIL:\n      return _objectSpread({}, state, {\n        loading: false,\n        success: false,\n        fail: true\n      });\n\n    case EDIT_SUPPLIER_SUCCESS:\n      console.log('action.result', action.result);\n      return _objectSpread({}, state, {\n        loading: false,\n        success: true,\n        fail: false,\n        modal: {},\n        isOpen: false,\n        setSupplier: {\n          name: '',\n          hh: '',\n          hvhh: '',\n          address: '',\n          tin: [],\n          director: '',\n          phone: [],\n          active: 0,\n          type: 0\n        },\n        suppliers: Put(state.suppliers, action.result)\n      });\n\n    case DELETE_SUPPLIER_REQUEST:\n      return _objectSpread({}, state, {\n        loading: true,\n        success: false,\n        fail: false\n      });\n\n    case DELETE_SUPPLIER_FAIL:\n      return _objectSpread({}, state, {\n        loading: false,\n        success: false,\n        fail: true\n      });\n\n    case DELETE_SUPPLIER_SUCCESS:\n      return _objectSpread({}, state, {\n        suppliers: RemoveItem(state.suppliers, action.data),\n        modal: {},\n        loading: false,\n        success: true,\n        fail: false,\n        supplier: {}\n      });\n\n    case GET_BANKS_REQUEST:\n      return _objectSpread({}, state, {\n        loading: true,\n        success: false,\n        modal: {},\n        fail: false,\n        errors: {}\n      });\n\n    case GET_BANKS_FAIL:\n      return _objectSpread({}, state, {\n        loading: false,\n        success: false,\n        modal: {},\n        fail: true\n      });\n\n    case GET_BANKS_SUCCESS:\n      return _objectSpread({}, state, {\n        banks: action.result.results,\n        modal: {},\n        loading: false,\n        success: true,\n        fail: false,\n        errors: {}\n      });\n\n    case GET_Currency_REQUEST:\n      return _objectSpread({}, state, {\n        loading: true,\n        success: false,\n        modal: {},\n        fail: false,\n        errors: {}\n      });\n\n    case GET_Currency_FAIL:\n      return _objectSpread({}, state, {\n        loading: false,\n        success: false,\n        modal: {},\n        fail: true\n      });\n\n    case GET_Currency_SUCCESS:\n      return _objectSpread({}, state, {\n        currency: action.result.results,\n        modal: {},\n        loading: false,\n        success: true,\n        fail: false,\n        errors: {}\n      });\n\n    case SET_SUPPLIER_MODAL:\n      if (typeof action.index !== 'undefined') {\n        if (!state.supplier[action.key]) {\n          state.supplier[action.key] = [];\n        }\n\n        if (typeof action.add === 'undefined') {\n          state.supplier[action.key][action.index] = action.value;\n        } else if (action.add) {\n          state.supplier[action.key][action.index + 1] = action.value;\n        } else {\n          state.supplier[action.key].splice(action.index, 1);\n        }\n      } else {\n        state.supplier[action.key] = action.value;\n      }\n\n      return _objectSpread({}, state, {\n        errors: IsRequiredField(state.required, action, state.errors)\n      });\n\n    case TOGGLE_SUPPLIER_MODAL:\n      state.modal[action.modalType] = !state.modal[action.modalType];\n\n      if (action.obj) {\n        if (action.modalType === \"edit\") {\n          state.supplier[action.obj.key] = action.obj.value;\n        } else {\n          state.supplier = action.obj;\n        }\n      }\n\n      return _objectSpread({}, state, {\n        errors: {}\n      });\n\n    /*---------------------------------*/\n\n    case SUPPLIERS_ADD_MODAL:\n      return _objectSpread({}, state, {\n        isOpen: !state.isOpen,\n        modalType: action.text,\n        setSupplier: action.cleanSuppliers,\n        checkValueStatus: action.cleanValueStatus\n      });\n\n    case SUPPLIERS_OPEN_MODAL:\n      return _objectSpread({}, state, {\n        isOpen: !state.isOpen,\n        modalType: action.text,\n        setSupplier: action.cleanSuppliers,\n        checkValueStatus: action.cleanValueStatus\n      });\n\n    case SET_SUPPLIERS_VALUE:\n      return _objectSpread({}, state, {\n        setSupplier: action.setSupplier\n      });\n\n    case FETCH_SUPPLIER_REQUEST:\n      return _objectSpread({}, state, {\n        loading: true,\n        success: false,\n        fail: false\n      });\n\n    case FETCH_SUPPLIER_FAIL:\n      return _objectSpread({}, state, {\n        loading: false,\n        success: false,\n        fail: true\n      });\n\n    case FETCH_SUPPLIER_SUCCESS:\n      return _objectSpread({}, state, {\n        loading: false,\n        success: true,\n        fail: false,\n        isOpen: false,\n        suppliers: Push(state.suppliers, action.result),\n        setSupplier: action.cleanSuppliers\n      });\n\n    case EMPTY_VALUE:\n      var newCheckValueStatusError = state.checkValueStatus;\n\n      switch (action.name) {\n        case \"bank_id\":\n        case 'currency_id':\n        case 'tin_value':\n        case 'phone':\n          {\n            if (newCheckValueStatusError[action.name] === false) {\n              var obj = [];\n              obj[action.index] = action.text;\n              newCheckValueStatusError[action.name] = obj;\n            } else {\n              newCheckValueStatusError[action.name][action.index] = action.text;\n            }\n\n            break;\n          }\n\n        default:\n          {\n            newCheckValueStatusError[action.name] = action.text;\n            break;\n          }\n      }\n\n      return _objectSpread({}, state, {\n        checkValueStatus: newCheckValueStatusError\n      });\n\n    case SUCCES_VALUE:\n      var newCheckValueStatusSuccess = state.checkValueStatus;\n\n      switch (action.name) {\n        case \"bank_id\":\n        case 'currency_id':\n        case 'tin_value':\n        case 'phone':\n          {\n            if (newCheckValueStatusSuccess[action.name] !== false) {\n              newCheckValueStatusSuccess[action.name][action.index] = false;\n            }\n\n            break;\n          }\n\n        default:\n          {\n            newCheckValueStatusSuccess[action.name] = false;\n            break;\n          }\n      }\n\n      return _objectSpread({}, state, {\n        checkValueStatus: newCheckValueStatusSuccess\n      });\n\n    default:\n      return _objectSpread({}, state);\n  }\n});","map":{"version":3,"sources":["C:/Users/User/Desktop/barcode/src/redux/suppliers/reducer.js"],"names":["GET_SUPPLIERS_REQUEST","GET_SUPPLIERS_FAIL","GET_SUPPLIERS_SUCCESS","GET_SUPPLIER_REQUEST","GET_SUPPLIER_FAIL","GET_SUPPLIER_SUCCESS","ADD_SUPPLIER_REQUEST","ADD_SUPPLIER_FAIL","ADD_SUPPLIER_SUCCESS","EDIT_SUPPLIER_REQUEST","EDIT_SUPPLIER_FAIL","EDIT_SUPPLIER_SUCCESS","DELETE_SUPPLIER_REQUEST","DELETE_SUPPLIER_FAIL","DELETE_SUPPLIER_SUCCESS","GET_BANKS_REQUEST","GET_BANKS_FAIL","GET_BANKS_SUCCESS","SET_SUPPLIER_MODAL","TOGGLE_SUPPLIER_MODAL","GET_Currency_REQUEST","GET_Currency_FAIL","GET_Currency_SUCCESS","SUPPLIERS_ADD_MODAL","SET_SUPPLIERS_VALUE","FETCH_SUPPLIER_REQUEST","FETCH_SUPPLIER_FAIL","FETCH_SUPPLIER_SUCCESS","SUPPLIERS_OPEN_MODAL","EMPTY_VALUE","SUCCES_VALUE","IsRequiredField","IsRequiredFields","Push","Put","RemoveItem","INIT_STATE","suppliers","supplier","banks","currency","modal","required","loading","success","fail","errors","tin","isOpen","modalType","setSupplier","name","hh","hvhh","address","director","phone","active","type","errorMessage","checkValueStatus","bank_id","currency_id","tin_value","state","action","result","results","JSON","parse","data","console","log","index","key","add","value","splice","obj","text","cleanSuppliers","cleanValueStatus","newCheckValueStatusError","newCheckValueStatusSuccess"],"mappings":"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","sourcesContent":["import {\r\n    GET_SUPPLIERS_REQUEST,\r\n    GET_SUPPLIERS_FAIL,\r\n    GET_SUPPLIERS_SUCCESS,\r\n    GET_SUPPLIER_REQUEST,\r\n    GET_SUPPLIER_FAIL,\r\n    GET_SUPPLIER_SUCCESS,\r\n    ADD_SUPPLIER_REQUEST,\r\n    ADD_SUPPLIER_FAIL,\r\n    ADD_SUPPLIER_SUCCESS,\r\n    EDIT_SUPPLIER_REQUEST,\r\n    EDIT_SUPPLIER_FAIL,\r\n    EDIT_SUPPLIER_SUCCESS,\r\n    DELETE_SUPPLIER_REQUEST,\r\n    DELETE_SUPPLIER_FAIL,\r\n    DELETE_SUPPLIER_SUCCESS,\r\n    GET_BANKS_REQUEST,\r\n    GET_BANKS_FAIL,\r\n    GET_BANKS_SUCCESS,\r\n    SET_SUPPLIER_MODAL,\r\n    TOGGLE_SUPPLIER_MODAL,\r\n    GET_Currency_REQUEST,\r\n    GET_Currency_FAIL,\r\n    GET_Currency_SUCCESS,\r\n    SUPPLIERS_ADD_MODAL,\r\n    SET_SUPPLIERS_VALUE,\r\n    FETCH_SUPPLIER_REQUEST,\r\n    FETCH_SUPPLIER_FAIL,\r\n    FETCH_SUPPLIER_SUCCESS, SUPPLIERS_OPEN_MODAL, EMPTY_VALUE, SUCCES_VALUE,\r\n} from \"./actionTypes\";\r\nimport {IsRequiredField, IsRequiredFields, Push, Put, RemoveItem} from \"../../utility/utils\";\r\n\r\n\r\nconst INIT_STATE = {\r\n    suppliers: [],\r\n    supplier: {},\r\n    banks: [],\r\n    currency: [],\r\n    modal: {},\r\n    required: [\r\n        \"name\",\r\n    ],\r\n    loading: false,\r\n    success: false,\r\n    fail: false,\r\n    errors: {},\r\n    tin: {},\r\n    /*---------------------------------*/\r\n    isOpen: false,\r\n    modalType: '',\r\n    setSupplier: {\r\n        name: '',\r\n        hh: '',\r\n        hvhh: '',\r\n        address: '',\r\n        tin: [],\r\n        director: '',\r\n        phone: [],\r\n        active: 0,\r\n        type: 0\r\n    },\r\n    errorMessage: null,\r\n    checkValueStatus: {\r\n        name: false,\r\n        hh: false,\r\n        hvhh: false,\r\n        address: false,\r\n        director: false,\r\n        bank_id: false,\r\n        currency_id: false,\r\n        tin_value: false,\r\n        phone: false\r\n    },\r\n};\r\n\r\n\r\nexport default (state = INIT_STATE, action) => {\r\n    switch (action.type) {\r\n        case GET_SUPPLIERS_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n                success: false,\r\n                modal: {},\r\n                fail: false,\r\n                errors: {},\r\n            };\r\n        case GET_SUPPLIERS_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: false,\r\n                modal: {},\r\n                fail: true,\r\n            };\r\n        case GET_SUPPLIERS_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: true,\r\n                fail: false,\r\n                suppliers: action.result.results,\r\n                modal: {},\r\n                errors: {},\r\n            };\r\n        case GET_SUPPLIER_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n                success: false,\r\n                fail: false,\r\n                errors: {},\r\n            };\r\n        case GET_SUPPLIER_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: false,\r\n                fail: true,\r\n            };\r\n        case GET_SUPPLIER_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: true,\r\n                fail: false,\r\n                setSupplier: action.result,\r\n                errors: {},\r\n            };\r\n        case ADD_SUPPLIER_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n                success: false,\r\n                fail: false,\r\n                errors: IsRequiredFields(state.required, state.supplier, state.errors)\r\n            }\r\n        case ADD_SUPPLIER_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: false,\r\n                fail: true,\r\n\r\n            };\r\n        case ADD_SUPPLIER_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: true,\r\n                fail: false,\r\n                modal: {},\r\n                suppliers: {\r\n                    ...JSON.parse(action.result.data),\r\n                    ...state.suppliers,\r\n                }\r\n            };\r\n        case EDIT_SUPPLIER_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n                success: false,\r\n                fail: false,\r\n                errors: IsRequiredFields(state.required, state.supplier, state.errors)\r\n            }\r\n        case EDIT_SUPPLIER_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: false,\r\n                fail: true,\r\n\r\n            };\r\n        case EDIT_SUPPLIER_SUCCESS:\r\n            console.log('action.result',action.result)\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: true,\r\n                fail: false,\r\n                modal: {},\r\n                isOpen: false,\r\n                setSupplier: {\r\n                    name: '',\r\n                    hh: '',\r\n                    hvhh: '',\r\n                    address: '',\r\n                    tin: [],\r\n                    director: '',\r\n                    phone: [],\r\n                    active: 0,\r\n                    type: 0\r\n                },\r\n                suppliers: Put(state.suppliers, action.result)\r\n            };\r\n        case DELETE_SUPPLIER_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n                success: false,\r\n                fail: false,\r\n            }\r\n        case DELETE_SUPPLIER_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: false,\r\n                fail: true,\r\n\r\n            };\r\n        case DELETE_SUPPLIER_SUCCESS:\r\n            return {\r\n                ...state,\r\n                suppliers: RemoveItem(state.suppliers, action.data),\r\n                modal: {},\r\n                loading: false,\r\n                success: true,\r\n                fail: false,\r\n                supplier: {}\r\n            };\r\n        case GET_BANKS_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n                success: false,\r\n                modal: {},\r\n                fail: false,\r\n                errors: {},\r\n            };\r\n        case GET_BANKS_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: false,\r\n                modal: {},\r\n                fail: true,\r\n            };\r\n        case GET_BANKS_SUCCESS:\r\n            return {\r\n                ...state,\r\n                banks: action.result.results,\r\n                modal: {},\r\n                loading: false,\r\n                success: true,\r\n                fail: false,\r\n                errors: {},\r\n            };\r\n        case GET_Currency_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n                success: false,\r\n                modal: {},\r\n                fail: false,\r\n                errors: {},\r\n            };\r\n        case GET_Currency_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: false,\r\n                modal: {},\r\n                fail: true,\r\n            };\r\n        case GET_Currency_SUCCESS:\r\n            return {\r\n                ...state,\r\n                currency: action.result.results,\r\n                modal: {},\r\n                loading: false,\r\n                success: true,\r\n                fail: false,\r\n                errors: {},\r\n            };\r\n        case SET_SUPPLIER_MODAL:\r\n            if (typeof action.index !== 'undefined') {\r\n                if (!state.supplier[action.key]) {\r\n                    state.supplier[action.key] = []\r\n                }\r\n                if (typeof action.add === 'undefined') {\r\n                    state.supplier[action.key][action.index] = action.value;\r\n                } else if (action.add) {\r\n                    state.supplier[action.key][action.index + 1] = action.value;\r\n                } else {\r\n                    state.supplier[action.key].splice(action.index, 1);\r\n                }\r\n            } else {\r\n                state.supplier[action.key] = action.value;\r\n            }\r\n            return {\r\n                ...state,\r\n                errors: IsRequiredField(state.required, action, state.errors)\r\n            };\r\n        case TOGGLE_SUPPLIER_MODAL:\r\n            state.modal[action.modalType] = !state.modal[action.modalType];\r\n\r\n            if (action.obj) {\r\n                if (action.modalType === \"edit\") {\r\n                    state.supplier[action.obj.key] = action.obj.value\r\n                } else {\r\n                    state.supplier = action.obj\r\n                }\r\n            }\r\n\r\n            return {\r\n                ...state,\r\n                errors: {}\r\n            }\r\n        /*---------------------------------*/\r\n        case SUPPLIERS_ADD_MODAL:\r\n            return {\r\n                ...state,\r\n                isOpen: !state.isOpen,\r\n                modalType: action.text,\r\n                setSupplier: action.cleanSuppliers,\r\n                checkValueStatus: action.cleanValueStatus,\r\n            }\r\n        case  SUPPLIERS_OPEN_MODAL:\r\n            return {\r\n                ...state,\r\n                isOpen: !state.isOpen,\r\n                modalType: action.text, \r\n                setSupplier: action.cleanSuppliers,\r\n                checkValueStatus: action.cleanValueStatus,\r\n            }\r\n        case SET_SUPPLIERS_VALUE:\r\n            return {\r\n                ...state, setSupplier: action.setSupplier\r\n            }\r\n        case FETCH_SUPPLIER_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n                success: false,\r\n                fail: false\r\n            }\r\n        case FETCH_SUPPLIER_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: false,\r\n                fail: true,\r\n\r\n            };\r\n        case FETCH_SUPPLIER_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: true,\r\n                fail: false,\r\n                isOpen: false,\r\n                suppliers: Push(state.suppliers, action.result),\r\n                setSupplier: action.cleanSuppliers\r\n            };\r\n        case EMPTY_VALUE:\r\n            let newCheckValueStatusError = state.checkValueStatus;\r\n            switch (action.name) {\r\n                case `bank_id`:\r\n                case 'currency_id':\r\n                case 'tin_value':\r\n                case 'phone':{\r\n                    if (newCheckValueStatusError[action.name] === false) {\r\n                        let obj = [];\r\n                        obj[action.index] = action.text;\r\n                        newCheckValueStatusError[action.name] = obj\r\n                    } else {\r\n                        newCheckValueStatusError[action.name][action.index] = action.text\r\n                    }\r\n                    break;\r\n                }\r\n                default: {\r\n                    newCheckValueStatusError[action.name] = action.text;\r\n                    break;\r\n                }\r\n            }\r\n\r\n            return {\r\n                ...state,\r\n                checkValueStatus: newCheckValueStatusError\r\n            }\r\n        case SUCCES_VALUE:\r\n            let newCheckValueStatusSuccess = state.checkValueStatus;\r\n            switch (action.name) {\r\n                case `bank_id`:\r\n                case 'currency_id':\r\n                case 'tin_value':\r\n                case 'phone': {\r\n                    if (newCheckValueStatusSuccess[action.name] !== false) {\r\n                        newCheckValueStatusSuccess[action.name][action.index] = false;\r\n                    }\r\n                    break;\r\n                }\r\n                default: {\r\n                    newCheckValueStatusSuccess[action.name] = false;\r\n                    break;\r\n                }\r\n            }\r\n            return {\r\n                ...state,\r\n                checkValueStatus: newCheckValueStatusSuccess\r\n            }\r\n        default:\r\n            return {...state};\r\n    }\r\n};\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}