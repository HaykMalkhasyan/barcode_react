{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\User\\\\Desktop\\\\barcode\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport { GET_POSITIONS_REQUEST, GET_POSITIONS_FAIL, GET_POSITIONS_SUCCESS } from \"./actionTypes\";\nimport { ADD_MODAL, DELETE_MODAL, EDIT_MODAL, SET_MODAL_VALUES } from \"../positions/actionTypes\";\nvar INIT_STATE = {\n  positions: [],\n  modal: {},\n  loading: false,\n  success: false,\n  fail: false,\n  errors: {}\n};\nexport default (function () {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : INIT_STATE;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case GET_POSITIONS_REQUEST:\n      return _objectSpread({}, state, {\n        loading: true,\n        success: false,\n        fail: false,\n        errors: {}\n      });\n\n    case GET_POSITIONS_FAIL:\n      return _objectSpread({}, state, {\n        loading: false,\n        success: false,\n        fail: true\n      });\n\n    case GET_POSITIONS_SUCCESS:\n      console.log(action.result);\n      return _objectSpread({}, state, {\n        loading: false,\n        success: true,\n        fail: false,\n        positions: JSON.parse(action.result.data),\n        errors: {}\n      });\n\n    case ADD_MODAL:\n      return _objectSpread({}, state, {\n        modal: {\n          add: action.modal,\n          edit: false,\n          delete: false\n        },\n        user: {}\n      });\n\n    case EDIT_MODAL:\n      return _objectSpread({}, state, {\n        modal: {\n          add: false,\n          edit: action.modal,\n          delete: false\n        }\n      });\n\n    case DELETE_MODAL:\n      return _objectSpread({}, state, {\n        modal: {\n          add: false,\n          edit: false,\n          delete: action.modal\n        },\n        positions: {}\n      });\n\n    case SET_MODAL_VALUES:\n      return _objectSpread({}, state);\n\n    default:\n      return _objectSpread({}, state);\n  }\n});","map":{"version":3,"sources":["C:/Users/User/Desktop/barcode/src/redux/positions/reducer.js"],"names":["GET_POSITIONS_REQUEST","GET_POSITIONS_FAIL","GET_POSITIONS_SUCCESS","ADD_MODAL","DELETE_MODAL","EDIT_MODAL","SET_MODAL_VALUES","INIT_STATE","positions","modal","loading","success","fail","errors","state","action","type","console","log","result","JSON","parse","data","add","edit","delete","user"],"mappings":";AAAA,SACIA,qBADJ,EAC2BC,kBAD3B,EAC+CC,qBAD/C,QAEO,eAFP;AAGA,SAAQC,SAAR,EAAmBC,YAAnB,EAAiCC,UAAjC,EAA6CC,gBAA7C,QAAoE,0BAApE;AAGA,IAAMC,UAAU,GAAG;AACfC,EAAAA,SAAS,EAAE,EADI;AAEfC,EAAAA,KAAK,EAAE,EAFQ;AAGfC,EAAAA,OAAO,EAAE,KAHM;AAIfC,EAAAA,OAAO,EAAE,KAJM;AAKfC,EAAAA,IAAI,EAAE,KALS;AAMfC,EAAAA,MAAM,EAAE;AANO,CAAnB;AASA,gBAAe,YAAgC;AAAA,MAA/BC,KAA+B,uEAAvBP,UAAuB;AAAA,MAAXQ,MAAW;;AAC3C,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKhB,qBAAL;AACI,+BACOc,KADP;AAEIJ,QAAAA,OAAO,EAAE,IAFb;AAGIC,QAAAA,OAAO,EAAE,KAHb;AAIIC,QAAAA,IAAI,EAAE,KAJV;AAKIC,QAAAA,MAAM,EAAE;AALZ;;AAOJ,SAAKZ,kBAAL;AACI,+BACOa,KADP;AAEIJ,QAAAA,OAAO,EAAE,KAFb;AAGIC,QAAAA,OAAO,EAAE,KAHb;AAIIC,QAAAA,IAAI,EAAE;AAJV;;AAMJ,SAAKV,qBAAL;AACIe,MAAAA,OAAO,CAACC,GAAR,CAAYH,MAAM,CAACI,MAAnB;AACA,+BACOL,KADP;AAEIJ,QAAAA,OAAO,EAAE,KAFb;AAGIC,QAAAA,OAAO,EAAE,IAHb;AAIIC,QAAAA,IAAI,EAAE,KAJV;AAKIJ,QAAAA,SAAS,EAAEY,IAAI,CAACC,KAAL,CAAWN,MAAM,CAACI,MAAP,CAAcG,IAAzB,CALf;AAMIT,QAAAA,MAAM,EAAE;AANZ;;AAQJ,SAAKV,SAAL;AACI,+BACOW,KADP;AAEIL,QAAAA,KAAK,EAAC;AACFc,UAAAA,GAAG,EAAER,MAAM,CAACN,KADV;AAEFe,UAAAA,IAAI,EAAE,KAFJ;AAGFC,UAAAA,MAAM,EAAE;AAHN,SAFV;AAOIC,QAAAA,IAAI,EAAE;AAPV;;AASJ,SAAKrB,UAAL;AACI,+BACOS,KADP;AAEIL,QAAAA,KAAK,EAAC;AACFc,UAAAA,GAAG,EAAE,KADH;AAEFC,UAAAA,IAAI,EAAET,MAAM,CAACN,KAFX;AAGFgB,UAAAA,MAAM,EAAE;AAHN;AAFV;;AAQJ,SAAKrB,YAAL;AACI,+BACOU,KADP;AAEIL,QAAAA,KAAK,EAAC;AACFc,UAAAA,GAAG,EAAE,KADH;AAEFC,UAAAA,IAAI,EAAE,KAFJ;AAGFC,UAAAA,MAAM,EAAEV,MAAM,CAACN;AAHb,SAFV;AAOID,QAAAA,SAAS,EAAE;AAPf;;AASJ,SAAKF,gBAAL;AACI,+BACOQ,KADP;;AAQJ;AACI,+BAAWA,KAAX;AAjER;AAmEH,CApED","sourcesContent":["import {\r\n    GET_POSITIONS_REQUEST, GET_POSITIONS_FAIL, GET_POSITIONS_SUCCESS,\r\n} from \"./actionTypes\";\r\nimport {ADD_MODAL, DELETE_MODAL, EDIT_MODAL, SET_MODAL_VALUES} from \"../positions/actionTypes\";\r\n\r\n\r\nconst INIT_STATE = {\r\n    positions: [],\r\n    modal: {},\r\n    loading: false,\r\n    success: false,\r\n    fail: false,\r\n    errors: {}\r\n};\r\n\r\nexport default (state = INIT_STATE, action) => {\r\n    switch (action.type) {\r\n        case GET_POSITIONS_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n                success: false,\r\n                fail: false,\r\n                errors: {},\r\n            };\r\n        case GET_POSITIONS_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: false,\r\n                fail: true,\r\n            };\r\n        case GET_POSITIONS_SUCCESS:\r\n            console.log(action.result)\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: true,\r\n                fail: false,\r\n                positions: JSON.parse(action.result.data),\r\n                errors: {},\r\n            };\r\n        case ADD_MODAL:\r\n            return {\r\n                ...state,\r\n                modal:{\r\n                    add: action.modal,\r\n                    edit: false,\r\n                    delete: false\r\n                },\r\n                user: {}\r\n            };\r\n        case EDIT_MODAL:\r\n            return {\r\n                ...state,\r\n                modal:{\r\n                    add: false,\r\n                    edit: action.modal,\r\n                    delete: false\r\n                },\r\n            };\r\n        case DELETE_MODAL:\r\n            return {\r\n                ...state,\r\n                modal:{\r\n                    add: false,\r\n                    edit: false,\r\n                    delete: action.modal\r\n                },\r\n                positions: {}\r\n            };\r\n        case SET_MODAL_VALUES:\r\n            return {\r\n                ...state,\r\n                // user: {\r\n                //     ...state.user,\r\n                //     ...action.value\r\n                // },\r\n\r\n            }\r\n        default:\r\n            return {...state};\r\n    }\r\n};\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}