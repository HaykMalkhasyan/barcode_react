{"ast":null,"code":"import _taggedTemplateLiteral from \"C:\\\\Users\\\\User\\\\Desktop\\\\barcode\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\barcode\\\\src\\\\components\\\\dropdown\\\\dropdown.js\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from \"react\";\nimport { Col, Row, FormGroup, Label, Button, ModalBody, ModalFooter, CustomInput } from \"reactstrap\";\nimport { ChevronDown } from 'react-feather';\nimport Translate from \"../../Translate\";\nimport MenuItem from \"./menuItem\";\nexport default function DropDown(props) {\n  var pages = props.pages;\n\n  function handle(key, parent_id, id) {\n    console.log(key, parent_id, id);\n    props.handle(key, parent_id, id)(_templateObject());\n  }\n\n  return React.createElement(\"ul\", {\n    className: \"list-group icheck-task\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, Object.keys(pages).map(function (key) {\n    var checked = true;\n\n    if (pages[key].checked) {\n      checked = pages[key].checked;\n    }\n\n    return React.createElement(\"li\", {\n      className: \"list-group-item list-group-item-action no-border  bg-lighten-4\",\n      key: key,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }, React.createElement(Row, {\n      className: \"todo-list-group-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, React.createElement(Col, {\n      sm: \"1\",\n      md: \"1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, React.createElement(Label, {\n      check: true,\n      onClick: function onClick() {\n        return props.handle('checked', key);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, React.createElement(CustomInput, {\n      type: \"checkbox\",\n      defaultChecked: checked,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }))), React.createElement(Col, {\n      sm: \"10\",\n      md: \"10\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"mb-0 font-small-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, React.createElement(Translate, {\n      name: pages[key].name,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }))), React.createElement(Col, {\n      sm: \"1\",\n      md: \"1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, React.createElement(ChevronDown, {\n      size: 18,\n      className: \"mr-2\",\n      onClick: function onClick() {\n        return handle('open', key);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }))), React.createElement(\"ul\", {\n      className: \"list-group icheck-task hide\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, Object.keys(props.pages[key].tools).map(function (id) {\n      if (props.pages[key].tools[id].checked === undefined) {\n        props.pages[key].tools[id].checked = true;\n      }\n\n      React.createElement(MenuItem, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      });\n    })));\n  }));\n}\n;","map":{"version":3,"sources":["C:/Users/User/Desktop/barcode/src/components/dropdown/dropdown.js"],"names":["React","Col","Row","FormGroup","Label","Button","ModalBody","ModalFooter","CustomInput","ChevronDown","Translate","MenuItem","DropDown","props","pages","handle","key","parent_id","id","console","log","Object","keys","map","checked","name","tools","undefined"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {Col, Row, FormGroup, Label, Button, ModalBody, ModalFooter, CustomInput} from \"reactstrap\";\nimport {ChevronDown} from 'react-feather';\nimport Translate from \"../../Translate\";\nimport MenuItem from \"./menuItem\";\n\n\nexport default function DropDown (props) {\n   let pages = props.pages;\n   function handle(key,parent_id,id){\n      console.log(key,parent_id,id)\n      props.handle(key,parent_id,id)\n  ``}\n    return (\n    <ul className=\"list-group icheck-task\">\n    {Object.keys(pages).map(function(key) {\n        let checked = true;\n        if(pages[key].checked){\n            checked =  pages[key].checked\n        }\n        return <li className={\"list-group-item list-group-item-action no-border  bg-lighten-4\"} key={key} >\n            <Row className=\"todo-list-group-item\">\n                <Col sm=\"1\" md=\"1\"><Label check onClick={() => props.handle('checked',key)}><CustomInput type=\"checkbox\" defaultChecked={checked} /></Label></Col>\n                <Col sm=\"10\" md=\"10\"><p className=\"mb-0 font-small-3\"><Translate name={pages[key].name}/></p></Col>\n                <Col sm=\"1\" md=\"1\"><ChevronDown size={18} className=\"mr-2\" onClick={()=>handle('open',key)} /></Col>\n            </Row>\n            <ul className=\"list-group icheck-task hide\">\n            {Object.keys(props.pages[key].tools).map(function(id) {\n                if(props.pages[key].tools[id].checked === undefined){\n                    props.pages[key].tools[id].checked = true\n                }\n                <MenuItem />\n\n            })}\n            </ul>\n        </li>\n    })}\n</ul>\n      \n      \n                        \n\n    );\n\n};\n"]},"metadata":{},"sourceType":"module"}