{"ast":null,"code":"import { GET_USERS_REQUEST, GET_USERS_FAIL, GET_USERS_SUCCESS, GET_USER_REQUEST, GET_USER_FAIL, GET_USER_SUCCESS, ADD_USER_REQUEST, ADD_USER_FAIL, ADD_USER_SUCCESS, EDIT_USER_REQUEST, EDIT_USER_FAIL, EDIT_USER_SUCCESS, DELETE_USER_REQUEST, DELETE_USER_FAIL, DELETE_USER_SUCCESS, SET_USER_MODAL, TOGGLE_USER_MODAL } from \"./actionTypes\";\nvar cols = 'id, username, firstname, lastname, email, is_active, deleted ';\nexport var userActions = function userActions(type, data) {\n  switch (type) {\n    case \"get\":\n      console.log(type, data);\n      console.log(type, data.id);\n      return {\n        types: [GET_USER_REQUEST, GET_USER_FAIL, GET_USER_SUCCESS],\n        promise: function promise(apiClient) {\n          return apiClient.gett(\"user/\".concat(data.id), {\n            cols: cols\n          });\n        }\n      };\n\n    case \"getAll\":\n      return {\n        types: [GET_USERS_REQUEST, GET_USERS_FAIL, GET_USERS_SUCCESS],\n        promise: function promise(apiClient) {\n          return apiClient.gett('user/', {\n            cols: cols\n          });\n        }\n      };\n\n    case \"add\":\n      return {\n        types: [ADD_USER_REQUEST, ADD_USER_FAIL, ADD_USER_SUCCESS],\n        promise: function promise(apiClient) {\n          return apiClient.postt('user/create/', data, {\n            cols: cols\n          });\n        }\n      };\n\n    case \"edit\":\n      return {\n        types: [EDIT_USER_REQUEST, EDIT_USER_FAIL, EDIT_USER_SUCCESS],\n        promise: function promise(apiClient) {\n          return apiClient.putt(\"user/\".concat(data.id), data, {\n            cols: cols\n          });\n        }\n      };\n\n    case \"delete\":\n      data.id.deleted = 1;\n      return {\n        types: [DELETE_USER_REQUEST, DELETE_USER_FAIL, DELETE_USER_SUCCESS],\n        promise: function promise(apiClient) {\n          return apiClient.putt(\"user/\".concat(data.id), data, {\n            cols: cols\n          });\n        }\n      };\n\n    default:\n      return;\n  }\n};\nexport var setModalValues = function setModalValues(key, value) {\n  return {\n    type: SET_USER_MODAL,\n    key: key,\n    value: value\n  };\n};\nexport var toggleModal = function toggleModal(modalType, id) {\n  var obj = {\n    \"id\": id\n  };\n  return {\n    type: TOGGLE_USER_MODAL,\n    modalType: modalType,\n    obj: obj\n  };\n};","map":{"version":3,"sources":["C:/Users/User/Desktop/barcode/src/redux/users/actions.js"],"names":["GET_USERS_REQUEST","GET_USERS_FAIL","GET_USERS_SUCCESS","GET_USER_REQUEST","GET_USER_FAIL","GET_USER_SUCCESS","ADD_USER_REQUEST","ADD_USER_FAIL","ADD_USER_SUCCESS","EDIT_USER_REQUEST","EDIT_USER_FAIL","EDIT_USER_SUCCESS","DELETE_USER_REQUEST","DELETE_USER_FAIL","DELETE_USER_SUCCESS","SET_USER_MODAL","TOGGLE_USER_MODAL","cols","userActions","type","data","console","log","id","types","promise","apiClient","gett","postt","putt","deleted","setModalValues","key","value","toggleModal","modalType","obj"],"mappings":"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","sourcesContent":["import {\r\n    GET_USERS_REQUEST, GET_USERS_FAIL, GET_USERS_SUCCESS,\r\n    GET_USER_REQUEST, GET_USER_FAIL, GET_USER_SUCCESS,\r\n    ADD_USER_REQUEST, ADD_USER_FAIL, ADD_USER_SUCCESS,\r\n    EDIT_USER_REQUEST, EDIT_USER_FAIL, EDIT_USER_SUCCESS,\r\n    DELETE_USER_REQUEST, DELETE_USER_FAIL, DELETE_USER_SUCCESS,\r\n    SET_USER_MODAL, TOGGLE_USER_MODAL\r\n} from \"./actionTypes\";\r\n\r\nlet cols = 'id, username, firstname, lastname, email, is_active, deleted ';\r\n\r\nexport const userActions = (type, data) => {\r\n\r\n    switch (type) {\r\n        case \"get\":\r\n            console.log(type, data);\r\n            console.log(type, data.id);\r\n\r\n            return {\r\n                types: [GET_USER_REQUEST, GET_USER_FAIL, GET_USER_SUCCESS],\r\n                promise: (apiClient) => apiClient.gett(`user/${data.id}`, {cols})\r\n            }\r\n        case \"getAll\":\r\n            return {\r\n                types: [GET_USERS_REQUEST, GET_USERS_FAIL, GET_USERS_SUCCESS],\r\n                promise: (apiClient) => apiClient.gett('user/', {cols})\r\n            }\r\n        case \"add\":\r\n            return {\r\n                types: [ADD_USER_REQUEST, ADD_USER_FAIL, ADD_USER_SUCCESS],\r\n                promise: (apiClient) => apiClient.postt('user/create/', data, {cols})\r\n            }\r\n        case \"edit\":\r\n            return {\r\n                types: [EDIT_USER_REQUEST, EDIT_USER_FAIL, EDIT_USER_SUCCESS],\r\n                promise: (apiClient) => apiClient.putt(`user/${data.id}`, data, {cols})\r\n            }\r\n        case \"delete\":\r\n            data.id.deleted = 1;\r\n            return {\r\n                types: [DELETE_USER_REQUEST, DELETE_USER_FAIL, DELETE_USER_SUCCESS],\r\n                promise: (apiClient) => apiClient.putt(`user/${data.id}`, data, {cols})\r\n            }\r\n        default:\r\n            return;\r\n    }\r\n};\r\n\r\n\r\nexport const setModalValues = (key, value) => {\r\n    return {\r\n        type: SET_USER_MODAL,\r\n        key,\r\n        value\r\n    }\r\n}\r\n\r\nexport const toggleModal = (modalType, id) => {\r\n    let obj = {\"id\": id};\r\n    return {\r\n        type: TOGGLE_USER_MODAL,\r\n        modalType,\r\n        obj\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}