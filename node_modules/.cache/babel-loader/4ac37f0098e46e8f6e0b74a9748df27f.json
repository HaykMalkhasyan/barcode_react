{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\barcode\\\\src\\\\containers\\\\pages\\\\products\\\\searchGroup\\\\classifiersModal\\\\classifiersTreeViewer\\\\classifiersTreeViewer.js\";\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TreeView from '@material-ui/lab/TreeView';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport TreeItem from '@material-ui/lab/TreeItem';\nimport Translate from \"../../../../../../Translate\";\nvar useStyles = makeStyles({\n  root: {\n    flexGrow: 1,\n    maxWidth: '100%'\n  }\n});\n\nvar ClassifiersTreeViewer = function ClassifiersTreeViewer(props) {\n  var classes = useStyles();\n\n  var selectNodes = function selectNodes(item) {\n    console.log(item);\n  };\n\n  var treeItemRender = function treeItemRender(id, group_id) {\n    var result = props.data.map(function (item) {\n      if (parseInt(item.parent_id) === parseInt(id)) {\n        var groupId = item.group_id ? item.group_id.id : false;\n\n        if (parseInt(groupId) === parseInt(group_id)) {\n          return React.createElement(TreeItem, {\n            key: item.id,\n            nodeId: \"\".concat(item.id),\n            label: item.name,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 31\n            },\n            __self: this\n          }, treeItemRender(item.id, item.group_id.id));\n        } else {\n          return null;\n        }\n      } else {\n        return null;\n      }\n    });\n    var arr = [];\n    result.map(function (item, index) {\n      if (item !== null) {\n        arr.push(item);\n      }\n\n      return result;\n    });\n    return arr;\n  };\n\n  return React.createElement(React.Fragment, null, props.data && props.data.length > 0 ? React.createElement(TreeView, {\n    className: classes.root,\n    defaultCollapseIcon: React.createElement(ExpandMoreIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }),\n    defaultExpandIcon: React.createElement(ChevronRightIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }),\n    onNodeSelect: selectNodes,\n    multiSelect: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, props.data.map(function (item) {\n    return item.parent_id.length === 0 && item.group_id && item.group_id.id === props.group.id ? React.createElement(TreeItem, {\n      key: item.id,\n      nodeId: \"\".concat(item.id),\n      label: item.name,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, treeItemRender(item.id, item.group_id.id)) : null;\n  })) : React.createElement(\"p\", {\n    className: \"text-center info pt-2 mb-0\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }, React.createElement(Translate, {\n    name: 'empty',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  })));\n};\n\nexport default ClassifiersTreeViewer;","map":{"version":3,"sources":["C:/Users/User/Desktop/barcode/src/containers/pages/products/searchGroup/classifiersModal/classifiersTreeViewer/classifiersTreeViewer.js"],"names":["React","makeStyles","TreeView","ExpandMoreIcon","ChevronRightIcon","TreeItem","Translate","useStyles","root","flexGrow","maxWidth","ClassifiersTreeViewer","props","classes","selectNodes","item","console","log","treeItemRender","id","group_id","result","data","map","parseInt","parent_id","groupId","name","arr","index","push","length","group"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport TreeView from '@material-ui/lab/TreeView';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport TreeItem from '@material-ui/lab/TreeItem';\r\nimport Translate from \"../../../../../../Translate\";\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        flexGrow: 1,\r\n        maxWidth: '100%'\r\n    },\r\n});\r\n\r\nconst ClassifiersTreeViewer = (props) => {\r\n    const classes = useStyles();\r\n\r\n    const selectNodes = item => {\r\n        console.log(item)\r\n    }\r\n\r\n    const treeItemRender = (id, group_id) => {\r\n\r\n        let result = props.data.map(\r\n            item => {\r\n                if (parseInt(item.parent_id) === parseInt(id)) {\r\n                    let groupId = item.group_id ? item.group_id.id : false\r\n                    if (parseInt(groupId) === parseInt(group_id)) {\r\n                        return (\r\n                            <TreeItem\r\n                                key={item.id}\r\n                                nodeId={`${item.id}`}\r\n                                label={item.name}\r\n                            >\r\n                                {treeItemRender(item.id, item.group_id.id)}\r\n                            </TreeItem>\r\n                        )\r\n                    } else {\r\n                        return null\r\n                    }\r\n                } else {\r\n                    return null\r\n                }\r\n            }\r\n        )\r\n        let arr = []\r\n        result.map(\r\n            (item, index) => {\r\n                if (item !== null) {\r\n                    arr.push(item)\r\n                }\r\n                return result;\r\n            }\r\n        )\r\n        return arr\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {\r\n                props.data && props.data.length > 0 ?\r\n                    <TreeView\r\n                        className={classes.root}\r\n                        defaultCollapseIcon={<ExpandMoreIcon/>}\r\n                        defaultExpandIcon={<ChevronRightIcon/>}\r\n                        onNodeSelect={selectNodes}\r\n                        multiSelect\r\n                    >\r\n                        {\r\n                            props.data.map(\r\n                                item => {\r\n\r\n                                    return item.parent_id.length === 0 && item.group_id && item.group_id.id === props.group.id ?\r\n                                        <TreeItem\r\n                                            key={item.id}\r\n                                            nodeId={`${item.id}`}\r\n                                            label={item.name}\r\n                                        >\r\n                                            {treeItemRender(item.id, item.group_id.id)}\r\n                                        </TreeItem>\r\n                                        :\r\n                                        null\r\n\r\n                                }\r\n                            )\r\n                        }\r\n                        {/*<TreeItem nodeId=\"1\" label=\"Applications\">*/}\r\n                        {/*    <TreeItem nodeId=\"2\" label=\"Calendar\"/>*/}\r\n                        {/*    <TreeItem nodeId=\"3\" label=\"Chrome\"/>*/}\r\n                        {/*    <TreeItem nodeId=\"4\" label=\"Webstorm\"/>*/}\r\n                        {/*</TreeItem>*/}\r\n                        {/*<TreeItem nodeId=\"5\" label=\"Documents\">*/}\r\n                        {/*    <TreeItem nodeId=\"6\" label=\"Material-UI\">*/}\r\n                        {/*        <TreeItem nodeId=\"7\" label=\"src\">*/}\r\n                        {/*            <TreeItem nodeId=\"8\" label=\"index.js\"/>*/}\r\n                        {/*            <TreeItem nodeId=\"9\" label=\"tree-view.js\"/>*/}\r\n                        {/*        </TreeItem>*/}\r\n                        {/*    </TreeItem>*/}\r\n                        {/*</TreeItem>*/}\r\n                    </TreeView>\r\n                    :\r\n                    <p className=\"text-center info pt-2 mb-0\">\r\n                        <Translate name={'empty'}/>\r\n                    </p>\r\n            }\r\n\r\n        </>\r\n    );\r\n}\r\n\r\nexport default ClassifiersTreeViewer\r\n"]},"metadata":{},"sourceType":"module"}