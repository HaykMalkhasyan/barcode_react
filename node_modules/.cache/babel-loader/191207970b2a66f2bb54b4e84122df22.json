{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\User\\\\Desktop\\\\barcode\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\User\\\\Desktop\\\\barcode\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _objectSpread from \"C:\\\\Users\\\\User\\\\Desktop\\\\barcode\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _defineProperty from \"C:\\\\Users\\\\User\\\\Desktop\\\\barcode\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"C:\\\\Users\\\\User\\\\Desktop\\\\barcode\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\User\\\\Desktop\\\\barcode\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport SessionStorage from \"./SessionStorage\";\nimport axios from \"axios\";\n\nvar ApiClient =\n/*#__PURE__*/\nfunction () {\n  function ApiClient() {\n    _classCallCheck(this, ApiClient);\n\n    this.configs = {};\n    this.defaultConfigs = {};\n    this.API_URI = process.env.REACT_APP_API_URL;\n    this.defaultConfigs = {\n      headers: {},\n      path: \"\",\n      params: {}\n    };\n    this.resetConfigs();\n  }\n\n  _createClass(ApiClient, [{\n    key: \"getRuntimeConfigs\",\n    value: function getRuntimeConfigs() {\n      var token = SessionStorage.get(\"token\");\n      var lang = SessionStorage.get(\"lang\") ? SessionStorage.get(\"lang\") : 'am';\n      var headers = {\n        \"Content-Type\": \"application/json\",\n        \"Lang\": lang\n      };\n\n      if (token) {\n        headers[\"Token\"] = token;\n      }\n\n      return Object.assign({}, this.configs, {\n        headers: headers\n      });\n    }\n  }, {\n    key: \"resetConfigs\",\n    value: function resetConfigs() {\n      this.configs = Object.assign({}, this.defaultConfigs);\n    }\n  }, {\n    key: \"setConfig\",\n    value: function setConfig(key, value) {\n      this.configs = Object.assign({}, this.configs, _defineProperty({}, key, value));\n    }\n  }, {\n    key: \"mergeConfigs\",\n    value: function mergeConfigs(uri, params, headers, configs) {\n      var runtimeConfigs = this.getRuntimeConfigs();\n      var responseType = {};\n\n      if (params && params.responseType) {\n        responseType = params.responseType;\n      }\n\n      if (uri) {\n        params.path = uri;\n      }\n\n      return Object.assign({}, runtimeConfigs, Object.assign({}, configs, _objectSpread({}, responseType, {\n        params: Object.assign({}, runtimeConfigs.params, params),\n        headers: Object.assign({}, runtimeConfigs.headers, headers)\n      })));\n    }\n  }, {\n    key: \"get\",\n    value: function get(uri) {\n      var params = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      var headers = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n      var configs = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n      return axios.get(\"\".concat(this.API_URI), this.mergeConfigs(uri, params, headers, configs)).then(function (response) {\n        return response.data;\n      });\n    }\n  }, {\n    key: \"post\",\n    value: function post(uri, data) {\n      var params = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n      var headers = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n      var configs = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : {\n        hasFile: false\n      };\n      return axios.post(\"\".concat(this.API_URI), data, this.mergeConfigs(uri, params, headers, configs)).then(function (response) {\n        return response.data;\n      });\n    }\n  }, {\n    key: \"put\",\n    value: function () {\n      var _put = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(uri, data) {\n        var params,\n            headers,\n            configs,\n            response,\n            _args = arguments;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                params = _args.length > 2 && _args[2] !== undefined ? _args[2] : {};\n                headers = _args.length > 3 && _args[3] !== undefined ? _args[3] : {};\n                configs = _args.length > 4 && _args[4] !== undefined ? _args[4] : {\n                  hasFile: false\n                };\n                _context.next = 5;\n                return axios.put(\"\".concat(this.API_URI), data, this.mergeConfigs(uri, params, headers, configs));\n\n              case 5:\n                response = _context.sent;\n                return _context.abrupt(\"return\", response.data);\n\n              case 7:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function put(_x, _x2) {\n        return _put.apply(this, arguments);\n      }\n\n      return put;\n    }()\n  }, {\n    key: \"delete\",\n    value: function _delete(uri) {\n      var params = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      var headers = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n      var configs = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n      return axios.delete(\"\".concat(this.API_URI), this.mergeConfigs(uri, params, headers, configs)).then(function (response) {\n        return response.data;\n      });\n    }\n  }, {\n    key: \"upload\",\n    value: function upload(uri, form) {\n      var params = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n      var headers = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n      var configs = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : {\n        multiple: false\n      };\n      var files = form.files;\n      var formData = new FormData();\n      /*method map I change to forEach*/\n\n      Object.keys(files).forEach(function (key) {\n        formData.append(\"data[\" + key + \"][file]\", files[key]);\n        formData.append(\"data[\" + key + \"][type]\", form.type);\n        formData.append(\"data[\" + key + \"][caption]\", \"caption \" + key);\n        formData.append(\"data[\" + key + \"][credit]\", \"credit \" + key);\n      });\n      return this.post(uri, formData, params, headers, configs);\n    }\n  }], [{\n    key: \"cancelToken\",\n    value: function cancelToken() {\n      var CancelToken = axios.CancelToken;\n      return CancelToken.source();\n    }\n  }]);\n\n  return ApiClient;\n}();\n\nexport { ApiClient as default };","map":{"version":3,"sources":["C:/Users/User/Desktop/barcode/src/services/Api.js"],"names":["SessionStorage","axios","ApiClient","configs","defaultConfigs","API_URI","process","env","REACT_APP_API_URL","headers","path","params","resetConfigs","token","get","lang","Object","assign","key","value","uri","runtimeConfigs","getRuntimeConfigs","responseType","mergeConfigs","then","response","data","hasFile","post","put","delete","form","multiple","files","formData","FormData","keys","forEach","append","type","CancelToken","source"],"mappings":"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","sourcesContent":["import SessionStorage from \"./SessionStorage\";\r\nimport axios from \"axios\";\r\n\r\nexport default class ApiClient {\r\n    configs = {};\r\n    defaultConfigs = {};\r\n    API_URI = process.env.REACT_APP_API_URL;\r\n\r\n    constructor() {\r\n        this.defaultConfigs = {\r\n            headers: {},\r\n            path: \"\",\r\n            params: {}\r\n        };\r\n        this.resetConfigs();\r\n    }\r\n\r\n    getRuntimeConfigs() {\r\n        const token = SessionStorage.get(\"token\");\r\n        const lang = SessionStorage.get(\"lang\") ? SessionStorage.get(\"lang\") : 'am';\r\n        let headers = {\r\n            \"Content-Type\": \"application/json\",\r\n            \"Lang\": lang,\r\n        };\r\n        if (token) {\r\n            headers[\"Token\"] = token;\r\n        }\r\n        return Object.assign({}, this.configs, {\r\n            headers\r\n        });\r\n    }\r\n\r\n    resetConfigs() {\r\n        this.configs = Object.assign({}, this.defaultConfigs);\r\n    }\r\n\r\n    setConfig(key, value) {\r\n        this.configs = Object.assign({}, this.configs, {\r\n            [key]: value\r\n        });\r\n    }\r\n\r\n    mergeConfigs(uri, params, headers, configs) {\r\n        const runtimeConfigs = this.getRuntimeConfigs();\r\n        let responseType = {};\r\n        if (params && params.responseType) {\r\n            responseType = params.responseType;\r\n        }\r\n        if (uri) {\r\n            params.path = uri;\r\n        }\r\n        return Object.assign(\r\n            {},\r\n            runtimeConfigs,\r\n            Object.assign(\r\n                {},\r\n                configs,\r\n                {\r\n                    ...responseType,\r\n                    params: Object.assign({}, runtimeConfigs.params, params),\r\n                    headers: Object.assign({}, runtimeConfigs.headers, headers),\r\n                }\r\n            )\r\n        );\r\n    }\r\n\r\n    static cancelToken() {\r\n        const CancelToken = axios.CancelToken;\r\n        return CancelToken.source();\r\n    }\r\n\r\n    get(uri, params = {}, headers = {}, configs = {}) {\r\n        return axios.get(`${this.API_URI}`, this.mergeConfigs(uri, params, headers, configs)\r\n        ).then(response => response.data);\r\n    }\r\n\r\n    post(uri, data, params = {}, headers = {}, configs = {hasFile: false}) {\r\n\r\n        return axios.post(`${this.API_URI}`, data,\r\n            this.mergeConfigs(uri, params, headers, configs)\r\n        ).then(response => response.data);\r\n    }\r\n\r\n    async put(uri, data, params = {}, headers = {}, configs = {hasFile: false}) {\r\n        // console.log(uri, data);\r\n        // return axios.put(`${this.API_URI}`, data,\r\n        //     this.mergeConfigs(uri, params, headers, configs)\r\n        // ).then(response => response.data);\r\n        const response = await axios.put(`${this.API_URI}`, data, this.mergeConfigs(uri, params, headers, configs));\r\n        return response.data;\r\n\r\n    }\r\n\r\n    delete(uri, params = {}, headers = {}, configs = {}) {\r\n        return axios.delete(`${this.API_URI}`,\r\n            this.mergeConfigs(uri, params, headers, configs)\r\n        ).then(response => response.data);\r\n    }\r\n\r\n    upload(uri, form, params = {}, headers = {}, configs = {multiple: false}) {\r\n        let files = form.files;\r\n        let formData = new FormData();\r\n        /*method map I change to forEach*/\r\n        Object.keys(files).forEach(\r\n            key => {\r\n                formData.append(\"data[\" + key + \"][file]\", files[key]);\r\n                formData.append(\"data[\" + key + \"][type]\", form.type);\r\n                formData.append(\"data[\" + key + \"][caption]\", \"caption \" + key);\r\n                formData.append(\"data[\" + key + \"][credit]\", \"credit \" + key);\r\n\r\n            })\r\n\r\n        return this.post(uri, formData, params, headers, configs);\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}