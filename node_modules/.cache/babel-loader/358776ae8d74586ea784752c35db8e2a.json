{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\User\\\\Desktop\\\\barcode\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\User\\\\Desktop\\\\barcode\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\User\\\\Desktop\\\\barcode\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\User\\\\Desktop\\\\barcode\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\User\\\\Desktop\\\\barcode\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\barcode\\\\src\\\\Translate.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport { setTranslations } from './redux/lang/actions';\nimport SessionStorage from \"./services/SessionStorage\";\n\nvar Translate =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Translate, _Component);\n\n  function Translate() {\n    _classCallCheck(this, Translate);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Translate).apply(this, arguments));\n  }\n\n  _createClass(Translate, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if (!this.props.translations[this.props.name]) {\n        if (this.props.translations.length > 0 && typeof this.props.name !== 'number') {\n          var index = false;\n          var lang = SessionStorage.get('lang') || \"am\";\n          var _iteratorNormalCompletion = true;\n          var _didIteratorError = false;\n          var _iteratorError = undefined;\n\n          try {\n            for (var _iterator = this.props.translations[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n              var item = _step.value;\n\n              if (item.key === this.props.name.toLowerCase() && item.value === this.props.name && item.language === lang) {\n                index = true;\n              }\n            }\n          } catch (err) {\n            _didIteratorError = true;\n            _iteratorError = err;\n          } finally {\n            try {\n              if (!_iteratorNormalCompletion && _iterator.return != null) {\n                _iterator.return();\n              }\n            } finally {\n              if (_didIteratorError) {\n                throw _iteratorError;\n              }\n            }\n          }\n\n          if (index === false) {\n            this.props.setTranslations(this.props.name.toLowerCase(), this.props.name, lang);\n          }\n        }\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }, this.props.translations[this.props.name] ? this.props.translations[this.props.name] : this.props.name);\n    }\n  }]);\n\n  return Translate;\n}(Component);\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return bindActionCreators({\n    setTranslations: setTranslations\n  }, dispatch);\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    translations: state.languages.translations\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Translate);","map":{"version":3,"sources":["C:/Users/User/Desktop/barcode/src/Translate.js"],"names":["React","Component","connect","bindActionCreators","setTranslations","SessionStorage","Translate","props","translations","name","length","index","lang","get","item","key","toLowerCase","value","language","mapDispatchToProps","dispatch","mapStateToProps","state","languages"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,kBAAR,QAAiC,OAAjC;AACA,SAAQC,eAAR,QAA8B,sBAA9B;AACA,OAAOC,cAAP,MAA2B,2BAA3B;;IAGMC,S;;;;;;;;;;;;;wCAEkB;AAChB,UAAI,CAAC,KAAKC,KAAL,CAAWC,YAAX,CAAwB,KAAKD,KAAL,CAAWE,IAAnC,CAAL,EAA+C;AAC3C,YAAI,KAAKF,KAAL,CAAWC,YAAX,CAAwBE,MAAxB,GAAiC,CAAjC,IAAsC,OAAO,KAAKH,KAAL,CAAWE,IAAlB,KAA2B,QAArE,EAA+E;AAC3E,cAAIE,KAAK,GAAG,KAAZ;AACA,cAAIC,IAAI,GAAGP,cAAc,CAACQ,GAAf,CAAmB,MAAnB,KAA8B,IAAzC;AAF2E;AAAA;AAAA;;AAAA;AAG3E,iCAAiB,KAAKN,KAAL,CAAWC,YAA5B,8HAA0C;AAAA,kBAAjCM,IAAiC;;AACtC,kBAAIA,IAAI,CAACC,GAAL,KAAa,KAAKR,KAAL,CAAWE,IAAX,CAAgBO,WAAhB,EAAb,IAA8CF,IAAI,CAACG,KAAL,KAAe,KAAKV,KAAL,CAAWE,IAAxE,IAAgFK,IAAI,CAACI,QAAL,KAAkBN,IAAtG,EAA4G;AACxGD,gBAAAA,KAAK,GAAG,IAAR;AACH;AACJ;AAP0E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAQ3E,cAAIA,KAAK,KAAK,KAAd,EAAqB;AACjB,iBAAKJ,KAAL,CAAWH,eAAX,CAA2B,KAAKG,KAAL,CAAWE,IAAX,CAAgBO,WAAhB,EAA3B,EAA0D,KAAKT,KAAL,CAAWE,IAArE,EAA2EG,IAA3E;AACH;AACJ;AACJ;AACJ;;;6BAEQ;AAEL,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEQ,KAAKL,KAAL,CAAWC,YAAX,CAAwB,KAAKD,KAAL,CAAWE,IAAnC,IACI,KAAKF,KAAL,CAAWC,YAAX,CAAwB,KAAKD,KAAL,CAAWE,IAAnC,CADJ,GAGI,KAAKF,KAAL,CAAWE,IALvB,CADJ;AAUH;;;;EA/BmBR,S;;AAkCxB,IAAMkB,kBAAkB,GAAG,SAArBA,kBAAqB,CAAAC,QAAQ,EAAI;AACnC,SAAOjB,kBAAkB,CACrB;AACIC,IAAAA,eAAe,EAAfA;AADJ,GADqB,EAIrBgB,QAJqB,CAAzB;AAMH,CAPD;;AASA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAAAC,KAAK,EAAI;AAC7B,SAAO;AACHd,IAAAA,YAAY,EAAEc,KAAK,CAACC,SAAN,CAAgBf;AAD3B,GAAP;AAGH,CAJD;;AAMA,eAAeN,OAAO,CAACmB,eAAD,EAAkBF,kBAAlB,CAAP,CAA6Cb,SAA7C,CAAf","sourcesContent":["import React, {Component} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {bindActionCreators} from \"redux\";\r\nimport {setTranslations} from './redux/lang/actions'\r\nimport SessionStorage from \"./services/SessionStorage\";\r\n\r\n\r\nclass Translate extends Component {\r\n\r\n    componentDidMount() {\r\n        if (!this.props.translations[this.props.name]) {\r\n            if (this.props.translations.length > 0 && typeof this.props.name !== 'number') {\r\n                let index = false;\r\n                let lang = SessionStorage.get('lang') || \"am\";\r\n                for (let item of this.props.translations) {\r\n                    if (item.key === this.props.name.toLowerCase() && item.value === this.props.name && item.language === lang) {\r\n                        index = true;\r\n                    }\r\n                }\r\n                if (index === false) {\r\n                    this.props.setTranslations(this.props.name.toLowerCase(), this.props.name, lang);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <span>\r\n                {\r\n                    this.props.translations[this.props.name] ?\r\n                        this.props.translations[this.props.name]\r\n                        :\r\n                        this.props.name\r\n                }\r\n        </span>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return bindActionCreators(\r\n        {\r\n            setTranslations\r\n        },\r\n        dispatch\r\n    );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        translations: state.languages.translations,\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Translate);"]},"metadata":{},"sourceType":"module"}