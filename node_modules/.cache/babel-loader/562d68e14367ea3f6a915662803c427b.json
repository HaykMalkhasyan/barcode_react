{"ast":null,"code":"import { GET_CATEGORIES_REQUEST, GET_CATEGORIES_FAIL, GET_CATEGORIES_SUCCESS, GET_CATEGORY_REQUEST, GET_CATEGORY_FAIL, GET_CATEGORY_SUCCESS, ADD_CATEGORY_REQUEST, ADD_CATEGORY_FAIL, ADD_CATEGORY_SUCCESS, EDIT_CATEGORY_REQUEST, EDIT_CATEGORY_FAIL, EDIT_CATEGORY_SUCCESS, DELETE_CATEGORY_REQUEST, DELETE_CATEGORY_FAIL, DELETE_CATEGORY_SUCCESS, SET_MODAL_VALUES, TOGGLE_MODAL } from \"./actionTypes\";\nvar cols = 'id,name';\nvar url = \"Items/Category\";\nexport var categoryActions = function categoryActions(type, data) {\n  console.log(data);\n\n  switch (type) {\n    case \"get\":\n      return {\n        types: [GET_CATEGORY_REQUEST, GET_CATEGORY_FAIL, GET_CATEGORY_SUCCESS],\n        promise: function promise(apiClient) {\n          return apiClient.get(url, JSON.stringify({\n            param: {\n              id: data.id\n            }\n          }));\n        }\n      };\n\n    case \"getAll\":\n      return {\n        types: [GET_CATEGORIES_REQUEST, GET_CATEGORIES_FAIL, GET_CATEGORIES_SUCCESS],\n        promise: function promise(apiClient) {\n          return apiClient.get(url, JSON.stringify({\n            cols: cols\n          }));\n        }\n      };\n\n    case \"add\":\n      return {\n        types: [ADD_CATEGORY_REQUEST, ADD_CATEGORY_FAIL, ADD_CATEGORY_SUCCESS],\n        promise: function promise(apiClient) {\n          return apiClient.post(url, JSON.stringify({\n            data: data,\n            cols: cols\n          }));\n        }\n      };\n\n    case \"edit\":\n      return {\n        types: [EDIT_CATEGORY_REQUEST, EDIT_CATEGORY_FAIL, EDIT_CATEGORY_SUCCESS],\n        promise: function promise(apiClient) {\n          return apiClient.put(url, JSON.stringify({\n            id: data.id,\n            data: data,\n            cols: cols\n          }));\n        }\n      };\n\n    case \"delete\":\n      return {\n        types: [DELETE_CATEGORY_REQUEST, DELETE_CATEGORY_FAIL, DELETE_CATEGORY_SUCCESS],\n        promise: function promise(apiClient) {\n          return apiClient.delete(url, JSON.stringify({\n            id: data.id,\n            data: data,\n            cols: cols\n          }));\n        }\n      };\n\n    default:\n      return;\n  }\n};\nexport var setModalValues = function setModalValues(value) {\n  return {\n    type: SET_MODAL_VALUES,\n    value: value\n  };\n};\nexport var toggleModal = function toggleModal(modalType, id) {\n  var obj = modalType === \"add\" ? {\n    \"parent_id\": id\n  } : {\n    \"id\": id\n  };\n  return {\n    type: TOGGLE_MODAL,\n    modalType: modalType,\n    obj: obj\n  };\n};","map":{"version":3,"sources":["C:/Users/User/Desktop/barcode/src/redux/categories/actions.js"],"names":["GET_CATEGORIES_REQUEST","GET_CATEGORIES_FAIL","GET_CATEGORIES_SUCCESS","GET_CATEGORY_REQUEST","GET_CATEGORY_FAIL","GET_CATEGORY_SUCCESS","ADD_CATEGORY_REQUEST","ADD_CATEGORY_FAIL","ADD_CATEGORY_SUCCESS","EDIT_CATEGORY_REQUEST","EDIT_CATEGORY_FAIL","EDIT_CATEGORY_SUCCESS","DELETE_CATEGORY_REQUEST","DELETE_CATEGORY_FAIL","DELETE_CATEGORY_SUCCESS","SET_MODAL_VALUES","TOGGLE_MODAL","cols","url","categoryActions","type","data","console","log","types","promise","apiClient","get","JSON","stringify","param","id","post","put","delete","setModalValues","value","toggleModal","modalType","obj"],"mappings":"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","sourcesContent":["import {\r\n    GET_CATEGORIES_REQUEST,GET_CATEGORIES_FAIL,GET_CATEGORIES_SUCCESS,\r\n    GET_CATEGORY_REQUEST,GET_CATEGORY_FAIL,GET_CATEGORY_SUCCESS,\r\n    ADD_CATEGORY_REQUEST,ADD_CATEGORY_FAIL,ADD_CATEGORY_SUCCESS,\r\n    EDIT_CATEGORY_REQUEST,EDIT_CATEGORY_FAIL,EDIT_CATEGORY_SUCCESS,\r\n    DELETE_CATEGORY_REQUEST,DELETE_CATEGORY_FAIL,DELETE_CATEGORY_SUCCESS,\r\n    SET_MODAL_VALUES,TOGGLE_MODAL\r\n} from \"./actionTypes\";\r\n\r\n\r\nlet cols =  'id,name';\r\nlet url = `Items/Category`;\r\n\r\nexport const categoryActions = (type,data) => {\r\n    console.log(data)\r\n    switch(type) {\r\n        case \"get\":\r\n            return {\r\n                types: [GET_CATEGORY_REQUEST,GET_CATEGORY_FAIL,GET_CATEGORY_SUCCESS],\r\n                promise: (apiClient) => apiClient.get(url, JSON.stringify({ param:{id:data.id} }))\r\n            }\r\n        case \"getAll\":\r\n            return {\r\n                types: [GET_CATEGORIES_REQUEST,GET_CATEGORIES_FAIL,GET_CATEGORIES_SUCCESS],\r\n                promise: (apiClient) => apiClient.get(url, JSON.stringify({ cols }))\r\n            }\r\n        case \"add\":\r\n            return {\r\n                types: [ADD_CATEGORY_REQUEST, ADD_CATEGORY_FAIL, ADD_CATEGORY_SUCCESS],\r\n                promise: (apiClient) => apiClient.post(url, JSON.stringify({data, cols}))\r\n            }\r\n        case \"edit\":\r\n            return {\r\n                types: [EDIT_CATEGORY_REQUEST,EDIT_CATEGORY_FAIL,EDIT_CATEGORY_SUCCESS],\r\n                promise: (apiClient) => apiClient.put(url,JSON.stringify({id:data.id,data,cols}))\r\n            }\r\n        case \"delete\":\r\n            return {\r\n                types: [DELETE_CATEGORY_REQUEST,DELETE_CATEGORY_FAIL,DELETE_CATEGORY_SUCCESS],\r\n                promise: (apiClient) => apiClient.delete(url, JSON.stringify({id:data.id, data,cols }))\r\n            }\r\n        default:\r\n            return ;\r\n    }\r\n};\r\n\r\n\r\nexport const setModalValues = (value) => {\r\n    return {\r\n        type: SET_MODAL_VALUES,\r\n        value\r\n    }\r\n}\r\n\r\nexport const toggleModal = (modalType,id) => {\r\n    let obj = (modalType===\"add\")?{\"parent_id\":id}:{\"id\":id};\r\n\r\n    return {\r\n        type: TOGGLE_MODAL,\r\n        modalType,\r\n        obj\r\n    }\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}