{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\User\\\\Desktop\\\\barcode\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport { GET_LANGUAGES_REQUEST, GET_LANGUAGES_FAIL, GET_LANGUAGES_SUCCESS, GET_TRANSLATIONS_REQUEST, GET_TRANSLATIONS_FAIL, GET_TRANSLATIONS_SUCCESS, SET_ACTIVE_LANGUAGE, SET_MODAL_LANGUAGE, TOGGLE_MODAL_LANGUAGE, SET_TRANSLATIONS_REQUEST, SET_TRANSLATIONS_FAIL, SET_TRANSLATIONS_SUCCESS } from \"./actionTypes\";\nimport SessionStorage from \"../../services/SessionStorage\"; // import {SET_GROUP_MODAL} from \"../group/actionTypes\";\n\nvar INIT_STATE = {\n  languages: [],\n  modalLang: SessionStorage.get(\"lang\") ? SessionStorage.get(\"lang\") : 'am',\n  translations: {},\n  active: SessionStorage.get(\"lang\") ? SessionStorage.get(\"lang\") : 'am',\n  changeWord: []\n};\nexport default (function () {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : INIT_STATE;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case GET_LANGUAGES_REQUEST:\n      return _objectSpread({}, state, {\n        loading: true,\n        success: false,\n        fail: false,\n        errors: {}\n      });\n\n    case GET_LANGUAGES_FAIL:\n      return _objectSpread({}, state, {\n        loading: false,\n        success: false,\n        fail: true\n      });\n\n    case GET_LANGUAGES_SUCCESS:\n      console.log(action.result);\n      return _objectSpread({}, state, {\n        loading: false,\n        success: true,\n        fail: false,\n        languages: action.result.results,\n        errors: {}\n      });\n\n    case GET_TRANSLATIONS_REQUEST:\n      return _objectSpread({}, state, {\n        loading: true,\n        success: false,\n        fail: false,\n        errors: {}\n      });\n\n    case GET_TRANSLATIONS_FAIL:\n      return _objectSpread({}, state, {\n        loading: false,\n        success: false,\n        fail: true\n      });\n\n    case GET_TRANSLATIONS_SUCCESS:\n      console.log('GET_TRANSLATIONS_SUCCESS', action.result.results);\n      return _objectSpread({}, state, {\n        loading: false,\n        success: true,\n        fail: false,\n        translations: JSON.parse(action.result.results),\n        errors: {}\n      });\n\n    case SET_TRANSLATIONS_REQUEST:\n      return _objectSpread({}, state, {\n        loading: true,\n        success: false,\n        fail: false,\n        errors: {}\n      });\n\n    case SET_TRANSLATIONS_FAIL:\n      return _objectSpread({}, state, {\n        loading: false,\n        success: false,\n        fail: true\n      });\n\n    case SET_TRANSLATIONS_SUCCESS:\n      // console.log(action.result)\n      return _objectSpread({}, state, {\n        loading: false,\n        success: true,\n        fail: false,\n        changeWord: state.changeWord.push(action.result),\n        errors: {}\n      });\n\n    case SET_ACTIVE_LANGUAGE:\n      return _objectSpread({}, state, {\n        active: action.lang\n      });\n\n    case SET_MODAL_LANGUAGE:\n      return _objectSpread({}, state, {\n        modalLang: action.lang\n      });\n\n    case TOGGLE_MODAL_LANGUAGE:\n      return _objectSpread({}, state, {\n        modalLang: state.active\n      });\n\n    default:\n      return _objectSpread({}, state);\n  }\n});","map":{"version":3,"sources":["C:/Users/User/Desktop/barcode/src/redux/lang/reducer.js"],"names":["GET_LANGUAGES_REQUEST","GET_LANGUAGES_FAIL","GET_LANGUAGES_SUCCESS","GET_TRANSLATIONS_REQUEST","GET_TRANSLATIONS_FAIL","GET_TRANSLATIONS_SUCCESS","SET_ACTIVE_LANGUAGE","SET_MODAL_LANGUAGE","TOGGLE_MODAL_LANGUAGE","SET_TRANSLATIONS_REQUEST","SET_TRANSLATIONS_FAIL","SET_TRANSLATIONS_SUCCESS","SessionStorage","INIT_STATE","languages","modalLang","get","translations","active","changeWord","state","action","type","loading","success","fail","errors","console","log","result","results","JSON","parse","push","lang"],"mappings":";AAAA,SACIA,qBADJ,EAEIC,kBAFJ,EAGIC,qBAHJ,EAIIC,wBAJJ,EAKIC,qBALJ,EAMIC,wBANJ,EAOIC,mBAPJ,EAQIC,kBARJ,EASIC,qBATJ,EAUIC,wBAVJ,EAWIC,qBAXJ,EAYIC,wBAZJ,QAaO,eAbP;AAcA,OAAOC,cAAP,MAA2B,+BAA3B,C,CACA;;AAEA,IAAMC,UAAU,GAAG;AACfC,EAAAA,SAAS,EAAE,EADI;AAEfC,EAAAA,SAAS,EAAEH,cAAc,CAACI,GAAf,CAAmB,MAAnB,IAA6BJ,cAAc,CAACI,GAAf,CAAmB,MAAnB,CAA7B,GAA0D,IAFtD;AAGfC,EAAAA,YAAY,EAAE,EAHC;AAIfC,EAAAA,MAAM,EAAEN,cAAc,CAACI,GAAf,CAAmB,MAAnB,IAA6BJ,cAAc,CAACI,GAAf,CAAmB,MAAnB,CAA7B,GAA0D,IAJnD;AAKfG,EAAAA,UAAU,EAAE;AALG,CAAnB;AASA,gBAAe,YAAgC;AAAA,MAA/BC,KAA+B,uEAAvBP,UAAuB;AAAA,MAAXQ,MAAW;;AAC3C,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKtB,qBAAL;AACI,+BACOoB,KADP;AAEIG,QAAAA,OAAO,EAAE,IAFb;AAGIC,QAAAA,OAAO,EAAE,KAHb;AAIIC,QAAAA,IAAI,EAAE,KAJV;AAKIC,QAAAA,MAAM,EAAE;AALZ;;AAOJ,SAAKzB,kBAAL;AACI,+BACOmB,KADP;AAEIG,QAAAA,OAAO,EAAE,KAFb;AAGIC,QAAAA,OAAO,EAAE,KAHb;AAIIC,QAAAA,IAAI,EAAE;AAJV;;AAMJ,SAAKvB,qBAAL;AACIyB,MAAAA,OAAO,CAACC,GAAR,CAAYP,MAAM,CAACQ,MAAnB;AACA,+BACOT,KADP;AAEIG,QAAAA,OAAO,EAAE,KAFb;AAGIC,QAAAA,OAAO,EAAE,IAHb;AAIIC,QAAAA,IAAI,EAAE,KAJV;AAKIX,QAAAA,SAAS,EAAEO,MAAM,CAACQ,MAAP,CAAcC,OAL7B;AAMIJ,QAAAA,MAAM,EAAE;AANZ;;AAQJ,SAAKvB,wBAAL;AACI,+BACOiB,KADP;AAEIG,QAAAA,OAAO,EAAE,IAFb;AAGIC,QAAAA,OAAO,EAAE,KAHb;AAIIC,QAAAA,IAAI,EAAE,KAJV;AAKIC,QAAAA,MAAM,EAAE;AALZ;;AAOJ,SAAKtB,qBAAL;AACI,+BACOgB,KADP;AAEIG,QAAAA,OAAO,EAAE,KAFb;AAGIC,QAAAA,OAAO,EAAE,KAHb;AAIIC,QAAAA,IAAI,EAAE;AAJV;;AAMJ,SAAKpB,wBAAL;AACIsB,MAAAA,OAAO,CAACC,GAAR,CAAY,0BAAZ,EAAwCP,MAAM,CAACQ,MAAP,CAAcC,OAAtD;AACA,+BACOV,KADP;AAEIG,QAAAA,OAAO,EAAE,KAFb;AAGIC,QAAAA,OAAO,EAAE,IAHb;AAIIC,QAAAA,IAAI,EAAE,KAJV;AAKIR,QAAAA,YAAY,EAAEc,IAAI,CAACC,KAAL,CAAWX,MAAM,CAACQ,MAAP,CAAcC,OAAzB,CALlB;AAMIJ,QAAAA,MAAM,EAAE;AANZ;;AAQJ,SAAKjB,wBAAL;AACI,+BACOW,KADP;AAEIG,QAAAA,OAAO,EAAE,IAFb;AAGIC,QAAAA,OAAO,EAAE,KAHb;AAIIC,QAAAA,IAAI,EAAE,KAJV;AAKIC,QAAAA,MAAM,EAAE;AALZ;;AAOJ,SAAKhB,qBAAL;AACI,+BACOU,KADP;AAEIG,QAAAA,OAAO,EAAE,KAFb;AAGIC,QAAAA,OAAO,EAAE,KAHb;AAIIC,QAAAA,IAAI,EAAE;AAJV;;AAMJ,SAAKd,wBAAL;AACI;AACA,+BACOS,KADP;AAEIG,QAAAA,OAAO,EAAE,KAFb;AAGIC,QAAAA,OAAO,EAAE,IAHb;AAIIC,QAAAA,IAAI,EAAE,KAJV;AAKIN,QAAAA,UAAU,EAAEC,KAAK,CAACD,UAAN,CAAiBc,IAAjB,CAAsBZ,MAAM,CAACQ,MAA7B,CALhB;AAMIH,QAAAA,MAAM,EAAE;AANZ;;AAQJ,SAAKpB,mBAAL;AACI,+BACOc,KADP;AAEIF,QAAAA,MAAM,EAAEG,MAAM,CAACa;AAFnB;;AAIJ,SAAK3B,kBAAL;AACI,+BACOa,KADP;AAEIL,QAAAA,SAAS,EAAEM,MAAM,CAACa;AAFtB;;AAIJ,SAAM1B,qBAAN;AACI,+BACOY,KADP;AAEIL,QAAAA,SAAS,EAAEK,KAAK,CAACF;AAFrB;;AAIJ;AACI,+BAAWE,KAAX;AA5FR;AA8FH,CA/FD","sourcesContent":["import {\r\n    GET_LANGUAGES_REQUEST,\r\n    GET_LANGUAGES_FAIL,\r\n    GET_LANGUAGES_SUCCESS,\r\n    GET_TRANSLATIONS_REQUEST,\r\n    GET_TRANSLATIONS_FAIL,\r\n    GET_TRANSLATIONS_SUCCESS,\r\n    SET_ACTIVE_LANGUAGE,\r\n    SET_MODAL_LANGUAGE,\r\n    TOGGLE_MODAL_LANGUAGE,\r\n    SET_TRANSLATIONS_REQUEST,\r\n    SET_TRANSLATIONS_FAIL,\r\n    SET_TRANSLATIONS_SUCCESS\r\n} from \"./actionTypes\";\r\nimport SessionStorage from \"../../services/SessionStorage\";\r\n// import {SET_GROUP_MODAL} from \"../group/actionTypes\";\r\n\r\nconst INIT_STATE = {\r\n    languages: [],\r\n    modalLang: SessionStorage.get(\"lang\") ? SessionStorage.get(\"lang\") : 'am',\r\n    translations: {},\r\n    active: SessionStorage.get(\"lang\") ? SessionStorage.get(\"lang\") : 'am',\r\n    changeWord: []\r\n};\r\n\r\n\r\nexport default (state = INIT_STATE, action) => {\r\n    switch (action.type) {\r\n        case GET_LANGUAGES_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n                success: false,\r\n                fail: false,\r\n                errors: {},\r\n            };\r\n        case GET_LANGUAGES_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: false,\r\n                fail: true,\r\n            };\r\n        case GET_LANGUAGES_SUCCESS:\r\n            console.log(action.result)\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: true,\r\n                fail: false,\r\n                languages: action.result.results,\r\n                errors: {},\r\n            };\r\n        case GET_TRANSLATIONS_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n                success: false,\r\n                fail: false,\r\n                errors: {},\r\n            };\r\n        case GET_TRANSLATIONS_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: false,\r\n                fail: true,\r\n            };\r\n        case GET_TRANSLATIONS_SUCCESS:\r\n            console.log('GET_TRANSLATIONS_SUCCESS', action.result.results)\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: true,\r\n                fail: false,\r\n                translations: JSON.parse(action.result.results),\r\n                errors: {},\r\n            };\r\n        case SET_TRANSLATIONS_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n                success: false,\r\n                fail: false,\r\n                errors: {},\r\n            };\r\n        case SET_TRANSLATIONS_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: false,\r\n                fail: true,\r\n            };\r\n        case SET_TRANSLATIONS_SUCCESS:\r\n            // console.log(action.result)\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: true,\r\n                fail: false,\r\n                changeWord: state.changeWord.push(action.result),\r\n                errors: {},\r\n            }\r\n        case SET_ACTIVE_LANGUAGE:\r\n            return {\r\n                ...state,\r\n                active: action.lang,\r\n            };\r\n        case SET_MODAL_LANGUAGE:\r\n            return {\r\n                ...state,\r\n                modalLang: action.lang,\r\n            };\r\n        case  TOGGLE_MODAL_LANGUAGE:\r\n            return {\r\n                ...state,\r\n                modalLang: state.active,\r\n            }\r\n        default:\r\n            return {...state};\r\n    }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}