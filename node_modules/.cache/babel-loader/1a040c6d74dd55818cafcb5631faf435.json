{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\User\\\\Desktop\\\\barcode\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\barcode\\\\src\\\\containers\\\\pages\\\\products\\\\modal\\\\tab\\\\group\\\\groupModal.js\";\nimport React, { useState } from \"react\";\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter, Input, Row, Col } from \"reactstrap\";\nimport GroupTabContent from \"../../../../group/subGroupMenuNew\";\nimport Translate from \"../../../../../../Translate\";\nimport { List } from \"react-feather\";\n\nvar ModalExample = function ModalExample(props) {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      modal = _useState2[0],\n      setModal = _useState2[1];\n\n  var toggle = function toggle() {\n    setModal(!modal);\n    props.getSubGroups(props.group);\n  };\n\n  var setItems = function setItems(data) {\n    console.log('DDD', data);\n    var _iteratorNormalCompletion = true;\n    var _didIteratorError = false;\n    var _iteratorError = undefined;\n\n    try {\n      for (var _iterator = props.data[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n        var item = _step.value;\n\n        if (data.parent_id === item.id) {\n          console.log(item);\n          return \"\".concat(item.name, \">\").concat(setItems(item));\n        }\n      }\n    } catch (err) {\n      _didIteratorError = true;\n      _iteratorError = err;\n    } finally {\n      try {\n        if (!_iteratorNormalCompletion && _iterator.return != null) {\n          _iterator.return();\n        }\n      } finally {\n        if (_didIteratorError) {\n          throw _iteratorError;\n        }\n      }\n    }\n  };\n\n  var roadRender = function roadRender(data) {\n    var obj;\n    var arrayRoadItems;\n\n    if (data && data.id && data.name) {\n      var _iteratorNormalCompletion2 = true;\n      var _didIteratorError2 = false;\n      var _iteratorError2 = undefined;\n\n      try {\n        for (var _iterator2 = props.data[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n          var item = _step2.value;\n\n          if (item.id === data.id) {\n            obj = item;\n          }\n        }\n      } catch (err) {\n        _didIteratorError2 = true;\n        _iteratorError2 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion2 && _iterator2.return != null) {\n            _iterator2.return();\n          }\n        } finally {\n          if (_didIteratorError2) {\n            throw _iteratorError2;\n          }\n        }\n      }\n\n      arrayRoadItems = setItems(obj);\n      console.log(arrayRoadItems);\n    } // console.log(props.data)\n\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, React.createElement(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, React.createElement(Col, {\n    sm: \"11\",\n    className: \"mr-0 mb-0\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, React.createElement(Input, {\n    type: \"text\",\n    readOnly: \"readOnly\",\n    value: props.product.groups && props.product.groups[props.dataId] ? props.product.groups[props.dataId].name : \"\",\n    placeholder: props.name,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  })), React.createElement(Col, {\n    sm: \"1\",\n    className: \"ml-0 mb-0\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, React.createElement(Button, {\n    color: \"primary\",\n    className: \"mb-0\",\n    onClick: toggle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, React.createElement(List, {\n    size: 16,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  })), \" \"), React.createElement(\"span\", {\n    className: \"mb-2 pl-3 font-small-3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, roadRender(props.product.groups && props.product.groups[props.dataId] ? props.product.groups[props.dataId] : null))), React.createElement(Modal, {\n    isOpen: modal,\n    toggle: toggle,\n    className: props.className,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, React.createElement(ModalHeader, {\n    toggle: toggle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, props.name), React.createElement(ModalBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, React.createElement(GroupTabContent, {\n    data: props.productGroups,\n    group: props.group,\n    lang: props.lang,\n    handleOpen: props.handleOpen,\n    selectGroup: props.selectGroup,\n    selected: props.selected,\n    page: \"products\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  })), React.createElement(ModalFooter, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, React.createElement(Button, {\n    color: \"primary\",\n    onClick: function onClick() {\n      toggle();\n      props.setModalValues(\"groups\", props.selected);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, React.createElement(Translate, {\n    name: \"select\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  })))));\n};\n\nexport default ModalExample;","map":{"version":3,"sources":["C:/Users/User/Desktop/barcode/src/containers/pages/products/modal/tab/group/groupModal.js"],"names":["React","useState","Button","Modal","ModalHeader","ModalBody","ModalFooter","Input","Row","Col","GroupTabContent","Translate","List","ModalExample","props","modal","setModal","toggle","getSubGroups","group","setItems","data","console","log","item","parent_id","id","name","roadRender","obj","arrayRoadItems","product","groups","dataId","className","productGroups","lang","handleOpen","selectGroup","selected","setModalValues"],"mappings":"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","sourcesContent":["import React, {useState} from \"react\";\r\nimport {Button, Modal, ModalHeader, ModalBody, ModalFooter, Input, Row, Col} from \"reactstrap\";\r\nimport GroupTabContent from \"../../../../group/subGroupMenuNew\";\r\nimport Translate from \"../../../../../../Translate\";\r\nimport {List} from \"react-feather\"\r\n\r\nconst ModalExample = props => {\r\n    const [modal, setModal] = useState(false)\r\n    const toggle = () => {\r\n        setModal(!modal);\r\n        props.getSubGroups(props.group)\r\n    }\r\n\r\n    const setItems = data => {\r\n    console.log('DDD', data)\r\n        for (let item of props.data) {\r\n            if (data.parent_id === item.id) {\r\n                console.log(item)\r\n                return `${item.name}>${setItems(item)}`\r\n            }\r\n        }\r\n    }\r\n\r\n    const roadRender = data => {\r\n        let obj;\r\n        let arrayRoadItems;\r\n        if (data && data.id && data.name) {\r\n            for(let item of props.data) {\r\n                if (item.id === data.id) {\r\n                    obj = item\r\n                }\r\n            }\r\n            arrayRoadItems = setItems(obj)\r\n            console.log(arrayRoadItems)\r\n        }\r\n        // console.log(props.data)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Row>\r\n                <Col sm=\"11\" className=\"mr-0 mb-0\">\r\n                    <Input type=\"text\" readOnly=\"readOnly\"\r\n                           value={props.product.groups && props.product.groups[props.dataId] ? props.product.groups[props.dataId].name : \"\"}\r\n                           placeholder={props.name}/>\r\n                </Col>\r\n                <Col sm=\"1\" className=\"ml-0 mb-0\">\r\n                    <Button color=\"primary\" className=\"mb-0\" onClick={toggle}><List size={16}/></Button>{\" \"}\r\n                </Col>\r\n                <span className=\"mb-2 pl-3 font-small-3\">\r\n                    {roadRender(props.product.groups && props.product.groups[props.dataId] ? props.product.groups[props.dataId] : null)}\r\n                </span>\r\n\r\n            </Row>\r\n\r\n\r\n            <Modal\r\n                isOpen={modal}\r\n                toggle={toggle}\r\n                className={props.className}\r\n            >\r\n                <ModalHeader toggle={toggle}>{props.name}</ModalHeader>\r\n                <ModalBody>\r\n                    <GroupTabContent\r\n                        data={props.productGroups}\r\n                        group={props.group}\r\n                        lang={props.lang}\r\n                        handleOpen={props.handleOpen}\r\n                        selectGroup={props.selectGroup}\r\n                        selected={props.selected}\r\n                        page=\"products\"\r\n                    />\r\n                </ModalBody>\r\n                <ModalFooter>\r\n                    <Button\r\n                        color=\"primary\"\r\n                        onClick={\r\n                            () => {\r\n                                toggle();\r\n                                props.setModalValues(\"groups\", props.selected)\r\n                            }\r\n                        }\r\n                    >\r\n                        <Translate name=\"select\"/>\r\n                    </Button>\r\n                </ModalFooter>\r\n            </Modal>\r\n\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default ModalExample;"]},"metadata":{},"sourceType":"module"}