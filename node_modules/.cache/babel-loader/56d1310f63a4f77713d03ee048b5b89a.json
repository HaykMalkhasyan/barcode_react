{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\User\\\\Desktop\\\\barcode\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport { GET_GROUPS_REQUEST, GET_GROUPS_FAIL, GET_GROUPS_SUCCESS, GET_GROUP_REQUEST, GET_GROUP_FAIL, GET_GROUP_SUCCESS, ADD_GROUP_REQUEST, ADD_GROUP_FAIL, ADD_GROUP_SUCCESS, EDIT_GROUP_REQUEST, EDIT_GROUP_FAIL, EDIT_GROUP_SUCCESS, DELETE_GROUP_REQUEST, DELETE_GROUP_FAIL, DELETE_GROUP_SUCCESS, GET_SUB_GROUP_REQUEST, GET_SUB_GROUP_FAIL, GET_SUB_GROUP_SUCCESS, ADD_SUB_GROUP_REQUEST, ADD_SUB_GROUP_FAIL, ADD_SUB_GROUP_SUCCESS, EDIT_SUB_GROUP_REQUEST, EDIT_SUB_GROUP_FAIL, EDIT_SUB_GROUP_SUCCESS, DELETE_SUB_GROUP_REQUEST, DELETE_SUB_GROUP_FAIL, DELETE_SUB_GROUP_SUCCESS, SET_GROUP_MODAL, TOGGLE_GROUP_MODAL, TOGGLE_SUB_GROUP_MODAL, OPEN_MENU } from \"./actionTypes\";\nimport { IsRequiredField, IsRequiredFields } from \"../../utility/utils\";\nimport { openMenu, addElement, editElement, deleteElement } from \"./functions\";\nvar INIT_STATE = {\n  groups: [],\n  group: {},\n  modal: {},\n  subModal: {},\n  required: [\"name\"],\n  loading: false,\n  success: false,\n  fail: false,\n  errors: {}\n};\nexport default (function () {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : INIT_STATE;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case GET_GROUPS_REQUEST:\n      return _objectSpread({}, state, {\n        loading: true,\n        success: false,\n        fail: false,\n        modal: {},\n        subModal: {},\n        errors: {}\n      });\n\n    case GET_GROUPS_FAIL:\n      return _objectSpread({}, state, {\n        loading: false,\n        success: false,\n        modal: {},\n        subModal: {},\n        fail: true\n      });\n\n    case GET_GROUPS_SUCCESS:\n      return _objectSpread({}, state, {\n        loading: false,\n        success: true,\n        fail: false,\n        modal: {},\n        subModal: {},\n        groups: JSON.parse(action.result.data),\n        errors: {}\n      });\n\n    case GET_GROUP_REQUEST:\n      return _objectSpread({}, state, {\n        loading: true,\n        success: false,\n        fail: false,\n        errors: {}\n      });\n\n    case GET_GROUP_FAIL:\n      return _objectSpread({}, state, {\n        loading: false,\n        success: false,\n        fail: true\n      });\n\n    case GET_GROUP_SUCCESS:\n      return _objectSpread({}, state, {\n        loading: false,\n        success: true,\n        fail: false,\n        group: JSON.parse(action.result.data),\n        errors: {}\n      });\n\n    case ADD_GROUP_REQUEST:\n      return _objectSpread({}, state, {\n        loading: true,\n        success: false,\n        fail: false,\n        errors: IsRequiredFields(state.required, state.group, state.errors)\n      });\n\n    case ADD_GROUP_FAIL:\n      return _objectSpread({}, state, {\n        loading: false,\n        success: false,\n        fail: true\n      });\n\n    case ADD_GROUP_SUCCESS:\n      return _objectSpread({}, state, {\n        loading: false,\n        success: true,\n        fail: false,\n        modal: {},\n        groups: JSON.parse(action.result.data)\n      });\n\n    case EDIT_GROUP_REQUEST:\n      return _objectSpread({}, state, {\n        loading: true,\n        success: false,\n        fail: false,\n        errors: IsRequiredFields(state.required, state.group, state.errors)\n      });\n\n    case EDIT_GROUP_FAIL:\n      return _objectSpread({}, state, {\n        loading: false,\n        success: false,\n        fail: true\n      });\n\n    case EDIT_GROUP_SUCCESS:\n      return _objectSpread({}, state, {\n        loading: false,\n        success: true,\n        fail: false,\n        modal: {},\n        group: {},\n        groups: JSON.parse(action.result.data)\n      });\n\n    case DELETE_GROUP_REQUEST:\n      return _objectSpread({}, state, {\n        loading: true,\n        success: false,\n        fail: false\n      });\n\n    case DELETE_GROUP_FAIL:\n      return _objectSpread({}, state, {\n        loading: false,\n        success: false,\n        fail: true\n      });\n\n    case DELETE_GROUP_SUCCESS:\n      return _objectSpread({}, state, {\n        loading: false,\n        success: true,\n        fail: false,\n        modal: {},\n        group: {},\n        groups: JSON.parse(action.result.data)\n      });\n\n    case GET_SUB_GROUP_REQUEST:\n      return _objectSpread({}, state, {\n        loading: true,\n        success: false,\n        fail: false,\n        errors: {}\n      });\n\n    case GET_SUB_GROUP_FAIL:\n      return _objectSpread({}, state, {\n        loading: false,\n        success: false,\n        fail: true\n      });\n\n    case GET_SUB_GROUP_SUCCESS:\n      return _objectSpread({}, state, {\n        loading: false,\n        success: true,\n        fail: false,\n        group: JSON.parse(action.result.data),\n        errors: {}\n      });\n\n    case ADD_SUB_GROUP_REQUEST:\n      return _objectSpread({}, state, {\n        loading: true,\n        success: false,\n        fail: false,\n        errors: IsRequiredFields(state.required, state.group, state.errors)\n      });\n\n    case ADD_SUB_GROUP_FAIL:\n      return _objectSpread({}, state, {\n        loading: false,\n        success: false,\n        fail: true\n      });\n\n    case ADD_SUB_GROUP_SUCCESS:\n      var addEl = JSON.parse(action.result.data);\n      state.groups[addEl.group_id].subGroup = addElement(state.groups[addEl.group_id].subGroup, addEl);\n      return _objectSpread({}, state, {\n        loading: false,\n        success: true,\n        fail: false,\n        subModal: {},\n        groups: state.groups\n      });\n\n    case EDIT_SUB_GROUP_REQUEST:\n      return _objectSpread({}, state, {\n        loading: true,\n        success: false,\n        fail: false,\n        errors: IsRequiredFields(state.required, state.group, state.errors)\n      });\n\n    case EDIT_SUB_GROUP_FAIL:\n      return _objectSpread({}, state, {\n        loading: false,\n        success: false,\n        fail: true\n      });\n\n    case EDIT_SUB_GROUP_SUCCESS:\n      var EditEl = JSON.parse(action.result.data);\n      state.groups[EditEl.group_id].subGroup = editElement(state.groups[EditEl.group_id].subGroup, EditEl);\n      return _objectSpread({}, state, {\n        loading: false,\n        success: true,\n        fail: false,\n        subModal: {},\n        group: {},\n        groups: state.groups\n      });\n\n    case DELETE_SUB_GROUP_REQUEST:\n      return _objectSpread({}, state, {\n        loading: true,\n        success: false,\n        fail: false\n      });\n\n    case DELETE_SUB_GROUP_FAIL:\n      return _objectSpread({}, state, {\n        loading: false,\n        success: false,\n        fail: true\n      });\n\n    case DELETE_SUB_GROUP_SUCCESS:\n      var delEl = JSON.parse(action.result.data);\n      state.groups[delEl.group_id].subGroup = deleteElement(state.groups[delEl.group_id].subGroup, delEl.id);\n      return _objectSpread({}, state, {\n        loading: false,\n        success: true,\n        fail: false,\n        subModal: {},\n        group: {},\n        groups: state.groups\n      });\n\n    case SET_GROUP_MODAL:\n      if (action.lang) {\n        if (!state.group[action.key]) {\n          state.group[action.key] = {};\n        }\n\n        state.group[action.key][action.lang] = action.value;\n      } else {\n        state.group[action.key] = action.value;\n      }\n\n      console.log(state.group);\n      return _objectSpread({}, state, {\n        errors: IsRequiredField(state.required, action, state.errors)\n      });\n\n    case TOGGLE_GROUP_MODAL:\n      state.modal[action.modalType] = !state.modal[action.modalType];\n\n      if (action.obj) {\n        if (action.modalType === \"edit\") {\n          state.group[action.obj.key] = action.obj.value;\n        } else {\n          state.group = action.obj;\n        }\n      }\n\n      return _objectSpread({}, state, {\n        errors: {},\n        subModal: {}\n      });\n\n    case TOGGLE_SUB_GROUP_MODAL:\n      state.subModal[action.modalType] = !state.subModal[action.modalType];\n      var obj = action.obj;\n\n      if (obj) {\n        if (action.modalType === \"edit\") {\n          state.group = _objectSpread({}, state.group, obj);\n        } else {\n          state.group = obj;\n        }\n      }\n\n      return _objectSpread({}, state, {\n        errors: {},\n        modal: {}\n      });\n\n    case OPEN_MENU:\n      state.groups[action.group_id].subGroup = openMenu(state.groups[action.group_id].subGroup, action.id, \"open\");\n      return _objectSpread({}, state, {\n        groups: state.groups\n      });\n\n    default:\n      return _objectSpread({}, state);\n  }\n});","map":{"version":3,"sources":["C:/Users/User/Desktop/barcode/src/redux/group/reducer.js"],"names":["GET_GROUPS_REQUEST","GET_GROUPS_FAIL","GET_GROUPS_SUCCESS","GET_GROUP_REQUEST","GET_GROUP_FAIL","GET_GROUP_SUCCESS","ADD_GROUP_REQUEST","ADD_GROUP_FAIL","ADD_GROUP_SUCCESS","EDIT_GROUP_REQUEST","EDIT_GROUP_FAIL","EDIT_GROUP_SUCCESS","DELETE_GROUP_REQUEST","DELETE_GROUP_FAIL","DELETE_GROUP_SUCCESS","GET_SUB_GROUP_REQUEST","GET_SUB_GROUP_FAIL","GET_SUB_GROUP_SUCCESS","ADD_SUB_GROUP_REQUEST","ADD_SUB_GROUP_FAIL","ADD_SUB_GROUP_SUCCESS","EDIT_SUB_GROUP_REQUEST","EDIT_SUB_GROUP_FAIL","EDIT_SUB_GROUP_SUCCESS","DELETE_SUB_GROUP_REQUEST","DELETE_SUB_GROUP_FAIL","DELETE_SUB_GROUP_SUCCESS","SET_GROUP_MODAL","TOGGLE_GROUP_MODAL","TOGGLE_SUB_GROUP_MODAL","OPEN_MENU","IsRequiredField","IsRequiredFields","openMenu","addElement","editElement","deleteElement","INIT_STATE","groups","group","modal","subModal","required","loading","success","fail","errors","state","action","type","JSON","parse","result","data","addEl","group_id","subGroup","EditEl","delEl","id","lang","key","value","console","log","modalType","obj"],"mappings":"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","sourcesContent":["import {\r\n    GET_GROUPS_REQUEST,GET_GROUPS_FAIL,GET_GROUPS_SUCCESS,\r\n    GET_GROUP_REQUEST,GET_GROUP_FAIL,GET_GROUP_SUCCESS,\r\n    ADD_GROUP_REQUEST,ADD_GROUP_FAIL,ADD_GROUP_SUCCESS,\r\n    EDIT_GROUP_REQUEST,EDIT_GROUP_FAIL,EDIT_GROUP_SUCCESS,\r\n    DELETE_GROUP_REQUEST,DELETE_GROUP_FAIL,DELETE_GROUP_SUCCESS,\r\n    GET_SUB_GROUP_REQUEST,GET_SUB_GROUP_FAIL,GET_SUB_GROUP_SUCCESS,\r\n    ADD_SUB_GROUP_REQUEST,ADD_SUB_GROUP_FAIL,ADD_SUB_GROUP_SUCCESS,\r\n    EDIT_SUB_GROUP_REQUEST,EDIT_SUB_GROUP_FAIL,EDIT_SUB_GROUP_SUCCESS,\r\n    DELETE_SUB_GROUP_REQUEST,DELETE_SUB_GROUP_FAIL,DELETE_SUB_GROUP_SUCCESS,\r\n    SET_GROUP_MODAL,TOGGLE_GROUP_MODAL,TOGGLE_SUB_GROUP_MODAL,OPEN_MENU\r\n} from \"./actionTypes\";\r\nimport {IsRequiredField,IsRequiredFields} from \"../../utility/utils\";\r\nimport {openMenu,addElement,editElement,deleteElement} from \"./functions\";\r\n\r\nconst INIT_STATE = {\r\n    groups: [],\r\n    group:{},\r\n    modal: {},\r\n    subModal: {},\r\n    required: [\"name\"],\r\n    loading: false,\r\n    success: false,\r\n    fail: false,\r\n    errors: {}\r\n};\r\n\r\nexport default (state = INIT_STATE, action) => {\r\n    switch (action.type) {\r\n        case GET_GROUPS_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n                success: false,\r\n                fail: false,\r\n                modal:{},\r\n                subModal: {},\r\n                errors: {},\r\n            };\r\n        case GET_GROUPS_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: false,\r\n                modal:{},\r\n                subModal: {},\r\n                fail: true,\r\n            };\r\n        case GET_GROUPS_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: true,\r\n                fail: false,\r\n                modal:{},\r\n                subModal: {},\r\n                groups: JSON.parse(action.result.data),\r\n                errors: {},\r\n            };\r\n        case GET_GROUP_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n                success: false,\r\n                fail: false,\r\n                errors: {},\r\n            };\r\n        case GET_GROUP_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: false,\r\n                fail: true,\r\n            };\r\n        case GET_GROUP_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: true,\r\n                fail: false,\r\n                group: JSON.parse(action.result.data),\r\n                errors: {},\r\n            };\r\n        case ADD_GROUP_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n                success: false,\r\n                fail: false,\r\n                errors:IsRequiredFields(state.required,state.group,state.errors)\r\n            }\r\n        case ADD_GROUP_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: false,\r\n                fail: true,\r\n\r\n            };\r\n        case ADD_GROUP_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: true,\r\n                fail: false,\r\n                modal: {},\r\n                groups: JSON.parse(action.result.data)\r\n            };\r\n        case EDIT_GROUP_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n                success: false,\r\n                fail: false,\r\n                errors: IsRequiredFields(state.required,state.group,state.errors)\r\n            }\r\n        case EDIT_GROUP_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: false,\r\n                fail: true,\r\n\r\n            };\r\n        case EDIT_GROUP_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: true,\r\n                fail: false,\r\n                modal: {},\r\n                group: {},\r\n                groups: JSON.parse(action.result.data)\r\n            };\r\n        case DELETE_GROUP_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n                success: false,\r\n                fail: false,\r\n            }\r\n        case DELETE_GROUP_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: false,\r\n                fail: true,\r\n\r\n            };\r\n        case DELETE_GROUP_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: true,\r\n                fail: false,\r\n                modal: {},\r\n                group: {},\r\n                groups: JSON.parse(action.result.data)\r\n            };\r\n        case GET_SUB_GROUP_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n                success: false,\r\n                fail: false,\r\n                errors: {},\r\n            };\r\n        case GET_SUB_GROUP_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: false,\r\n                fail: true,\r\n            };\r\n        case GET_SUB_GROUP_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: true,\r\n                fail: false,\r\n                group: JSON.parse(action.result.data),\r\n                errors: {},\r\n            };\r\n        case ADD_SUB_GROUP_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n                success: false,\r\n                fail: false,\r\n                errors:IsRequiredFields(state.required,state.group,state.errors)\r\n            }\r\n        case ADD_SUB_GROUP_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: false,\r\n                fail: true,\r\n\r\n            };\r\n        case ADD_SUB_GROUP_SUCCESS:\r\n            let addEl =  JSON.parse(action.result.data);\r\n            state.groups[addEl.group_id].subGroup = addElement(state.groups[addEl.group_id].subGroup,addEl);\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: true,\r\n                fail: false,\r\n                subModal: {},\r\n                groups: state.groups\r\n            };\r\n        case EDIT_SUB_GROUP_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n                success: false,\r\n                fail: false,\r\n                errors: IsRequiredFields(state.required,state.group,state.errors)\r\n            }\r\n        case EDIT_SUB_GROUP_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: false,\r\n                fail: true,\r\n\r\n            };\r\n        case EDIT_SUB_GROUP_SUCCESS:\r\n            let EditEl =  JSON.parse(action.result.data);\r\n            state.groups[EditEl.group_id].subGroup = editElement(state.groups[EditEl.group_id].subGroup,EditEl);\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: true,\r\n                fail: false,\r\n                subModal: {},\r\n                group: {},\r\n                groups: state.groups\r\n            };\r\n        case DELETE_SUB_GROUP_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n                success: false,\r\n                fail: false,\r\n            }\r\n        case DELETE_SUB_GROUP_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: false,\r\n                fail: true,\r\n\r\n            };\r\n        case DELETE_SUB_GROUP_SUCCESS:\r\n            let delEl =  JSON.parse(action.result.data);\r\n            state.groups[delEl.group_id].subGroup = deleteElement(state.groups[delEl.group_id].subGroup,delEl.id);\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: true,\r\n                fail: false,\r\n                subModal: {},\r\n                group: {},\r\n                groups: state.groups\r\n            };\r\n\r\n        case SET_GROUP_MODAL:\r\n            if(action.lang){\r\n                if(!state.group[action.key]){\r\n                    state.group[action.key] = {}\r\n                }\r\n                state.group[action.key][action.lang] = action.value;\r\n            }else{\r\n                state.group[action.key] = action.value;\r\n            }\r\n            console.log(state.group)\r\n            return {\r\n                ...state,\r\n                errors:IsRequiredField(state.required,action,state.errors)\r\n            };\r\n        case TOGGLE_GROUP_MODAL:\r\n            state.modal[action.modalType] = !state.modal[action.modalType];\r\n            if(action.obj){\r\n                if(action.modalType===\"edit\"){\r\n                    state.group[action.obj.key] = action.obj.value\r\n                }else{\r\n                    state.group = action.obj\r\n                }\r\n            }\r\n\r\n            return {\r\n                ...state,\r\n                errors: {},\r\n                subModal: {}\r\n            }\r\n        case TOGGLE_SUB_GROUP_MODAL:\r\n            state.subModal[action.modalType] = !state.subModal[action.modalType];\r\n            let obj = action.obj\r\n            if(obj){\r\n                if(action.modalType===\"edit\"){\r\n                    state.group = {\r\n                        ...state.group,\r\n                        ...obj\r\n                    }\r\n                }else{\r\n                    state.group = obj\r\n                }\r\n            }\r\n\r\n            return {\r\n                ...state,\r\n                errors: {},\r\n                modal: {}\r\n            }\r\n        case OPEN_MENU:\r\n            state.groups[action.group_id].subGroup = openMenu(state.groups[action.group_id].subGroup,action.id,\"open\");\r\n            return {\r\n                ...state,\r\n                groups: state.groups\r\n            }\r\n        default:\r\n            return {...state};\r\n    }\r\n};\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}