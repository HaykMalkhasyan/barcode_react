{"ast":null,"code":"import { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport { productActions, setModalValues, toggleModal, barcodeActions, setBarcodeType } from \"../../../redux/products/actions\";\nimport { supplierActions } from \"../../../redux/suppliers/actions\";\nimport { groupActions, handleOpen, selectGroup, subGroupActions, getSubGroups } from \"../../../redux/group/actions\";\nimport { uploadImages } from \"../../../redux/todo/actions\";\nimport ProductPage from './productPage';\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return bindActionCreators({\n    productActions: productActions,\n    toggleModal: toggleModal,\n    barcodeActions: barcodeActions,\n    setModalValues: setModalValues,\n    supplierActions: supplierActions,\n    groupActions: groupActions,\n    handleOpen: handleOpen,\n    selectGroup: selectGroup,\n    uploadImages: uploadImages,\n    subGroupActions: subGroupActions,\n    getSubGroups: getSubGroups,\n    setBarcodeType: setBarcodeType\n  }, dispatch);\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    modal: state.products.modal,\n    products: state.products.products,\n    product: state.products.product,\n    barcodeTypes: state.products.barcodeTypes,\n    suppliers: state.suppliers.suppliers,\n    groups: state.group.groups,\n    subGroups: state.group.subGroups,\n    selectedGroups: state.group.selected,\n    productGroups: state.group.productGroups,\n    perm: state.permission.data.products,\n    lang: {\n      active: state.languages.active\n    },\n    uploadedImages: state.todo.images\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ProductPage);","map":{"version":3,"sources":["C:/Users/User/Desktop/barcode/src/containers/pages/products/productContainer.js"],"names":["connect","bindActionCreators","productActions","setModalValues","toggleModal","barcodeActions","setBarcodeType","supplierActions","groupActions","handleOpen","selectGroup","subGroupActions","getSubGroups","uploadImages","ProductPage","mapDispatchToProps","dispatch","mapStateToProps","state","modal","products","product","barcodeTypes","suppliers","groups","group","subGroups","selectedGroups","selected","productGroups","perm","permission","data","lang","active","languages","uploadedImages","todo","images"],"mappings":"AAAA,SAAQA,OAAR,QAAsB,aAAtB;AACA,SAAQC,kBAAR,QAAiC,OAAjC;AACA,SACIC,cADJ,EAEIC,cAFJ,EAGIC,WAHJ,EAIIC,cAJJ,EAKIC,cALJ,QAMO,iCANP;AAOA,SACIC,eADJ,QAEO,kCAFP;AAGA,SACIC,YADJ,EAEIC,UAFJ,EAGIC,WAHJ,EAIIC,eAJJ,EAKIC,YALJ,QAMO,8BANP;AAOA,SACIC,YADJ,QAEO,6BAFP;AAGA,OAAOC,WAAP,MAAwB,eAAxB;;AAGA,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,CAAAC,QAAQ,EAAI;AACnC,SAAOf,kBAAkB,CACrB;AACIC,IAAAA,cAAc,EAAdA,cADJ;AAEIE,IAAAA,WAAW,EAAXA,WAFJ;AAGIC,IAAAA,cAAc,EAAdA,cAHJ;AAIIF,IAAAA,cAAc,EAAdA,cAJJ;AAKII,IAAAA,eAAe,EAAfA,eALJ;AAMIC,IAAAA,YAAY,EAAZA,YANJ;AAOIC,IAAAA,UAAU,EAAVA,UAPJ;AAQIC,IAAAA,WAAW,EAAXA,WARJ;AASIG,IAAAA,YAAY,EAAZA,YATJ;AAUIF,IAAAA,eAAe,EAAfA,eAVJ;AAWIC,IAAAA,YAAY,EAAZA,YAXJ;AAYIN,IAAAA,cAAc,EAAdA;AAZJ,GADqB,EAerBU,QAfqB,CAAzB;AAiBH,CAlBD;;AAoBA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAAAC,KAAK,EAAI;AAC7B,SAAO;AACHC,IAAAA,KAAK,EAAED,KAAK,CAACE,QAAN,CAAeD,KADnB;AAEHC,IAAAA,QAAQ,EAAEF,KAAK,CAACE,QAAN,CAAeA,QAFtB;AAGHC,IAAAA,OAAO,EAAEH,KAAK,CAACE,QAAN,CAAeC,OAHrB;AAIHC,IAAAA,YAAY,EAAEJ,KAAK,CAACE,QAAN,CAAeE,YAJ1B;AAKHC,IAAAA,SAAS,EAAEL,KAAK,CAACK,SAAN,CAAgBA,SALxB;AAMHC,IAAAA,MAAM,EAAEN,KAAK,CAACO,KAAN,CAAYD,MANjB;AAOHE,IAAAA,SAAS,EAAER,KAAK,CAACO,KAAN,CAAYC,SAPpB;AAQHC,IAAAA,cAAc,EAAET,KAAK,CAACO,KAAN,CAAYG,QARzB;AASHC,IAAAA,aAAa,EAAEX,KAAK,CAACO,KAAN,CAAYI,aATxB;AAUHC,IAAAA,IAAI,EAAEZ,KAAK,CAACa,UAAN,CAAiBC,IAAjB,CAAsBZ,QAVzB;AAWHa,IAAAA,IAAI,EAAE;AACFC,MAAAA,MAAM,EAAChB,KAAK,CAACiB,SAAN,CAAgBD;AADrB,KAXH;AAcHE,IAAAA,cAAc,EAAElB,KAAK,CAACmB,IAAN,CAAWC;AAdxB,GAAP;AAiBH,CAlBD;;AAoBA,eAAetC,OAAO,CAACiB,eAAD,EAAkBF,kBAAlB,CAAP,CAA6CD,WAA7C,CAAf","sourcesContent":["import {connect} from \"react-redux\";\r\nimport {bindActionCreators} from \"redux\";\r\nimport {\r\n    productActions,\r\n    setModalValues,\r\n    toggleModal,\r\n    barcodeActions,\r\n    setBarcodeType\r\n} from \"../../../redux/products/actions\";\r\nimport {\r\n    supplierActions\r\n} from \"../../../redux/suppliers/actions\";\r\nimport {\r\n    groupActions,\r\n    handleOpen,\r\n    selectGroup,\r\n    subGroupActions,\r\n    getSubGroups,\r\n} from \"../../../redux/group/actions\";\r\nimport {\r\n    uploadImages\r\n} from \"../../../redux/todo/actions\";\r\nimport ProductPage from './productPage';\r\n\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return bindActionCreators(\r\n        {\r\n            productActions,\r\n            toggleModal,\r\n            barcodeActions,\r\n            setModalValues,\r\n            supplierActions,\r\n            groupActions,\r\n            handleOpen,\r\n            selectGroup,\r\n            uploadImages,\r\n            subGroupActions,\r\n            getSubGroups,\r\n            setBarcodeType\r\n        },\r\n        dispatch\r\n    );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        modal: state.products.modal,\r\n        products: state.products.products,\r\n        product: state.products.product,\r\n        barcodeTypes: state.products.barcodeTypes,\r\n        suppliers: state.suppliers.suppliers,\r\n        groups: state.group.groups,\r\n        subGroups: state.group.subGroups,\r\n        selectedGroups: state.group.selected,\r\n        productGroups: state.group.productGroups,\r\n        perm: state.permission.data.products,\r\n        lang: {\r\n            active:state.languages.active\r\n        },\r\n        uploadedImages: state.todo.images,\r\n\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ProductPage);\r\n"]},"metadata":{},"sourceType":"module"}