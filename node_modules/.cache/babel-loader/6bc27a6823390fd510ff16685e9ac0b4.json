{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\User\\\\Desktop\\\\barcode\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\User\\\\Desktop\\\\barcode\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\User\\\\Desktop\\\\barcode\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\User\\\\Desktop\\\\barcode\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\User\\\\Desktop\\\\barcode\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\barcode\\\\src\\\\containers\\\\pages\\\\products\\\\modal\\\\tab\\\\code\\\\content.js\";\nimport React from 'react';\nimport { Input, Table, InputGroup, Button } from 'reactstrap';\nimport Translate from \"../../../../../../Translate\";\nimport { Settings, Plus, Trash2 } from \"react-feather\";\nimport DropdownComponent from \"../../../../../../components/dropdown/dropdown\";\n\nvar Example =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Example, _React$Component);\n\n  function Example() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Example);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Example)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      currentInputValue: \"\"\n    };\n    return _this;\n  }\n\n  _createClass(Example, [{\n    key: \"setInputValue\",\n    value: function setInputValue(newValue) {\n      this.setState({\n        currentInputValue: newValue\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      console.log(this.props);\n      return React.createElement(Table, {\n        borderless: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19\n        },\n        __self: this\n      }, React.createElement(\"thead\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      }, React.createElement(Translate, {\n        name: \"barcode\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      })), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }, React.createElement(Settings, {\n        size: 20,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      })))), React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }, this.props.product.barcode && this.props.product.barcode.map(function (value) {\n        return React.createElement(\"tr\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 29\n          },\n          __self: this\n        }, React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 30\n          },\n          __self: this\n        }, value.barcode), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 31\n          },\n          __self: this\n        }, React.createElement(Button, {\n          size: \"sm\",\n          color: \"danger\",\n          className: \"mb-0\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 32\n          },\n          __self: this\n        }, React.createElement(Trash2, {\n          size: 16,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 33\n          },\n          __self: this\n        }))));\n      }), React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, React.createElement(InputGroup, {\n        size: \"sm\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, React.createElement(Input, {\n        type: \"text\",\n        className: \"form-control  \".concat(this.props.props.errors.firstname ? 'is-invalid' : ''),\n        id: \"barcode\",\n        value: this.state.currentInputValue ? this.state.currentInputValue || '' : '',\n        onChange: function onChange(event) {\n          return _this2.setInputValue(event.target.value);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }), React.createElement(DropdownComponent, {\n        data: this.props.barcodeTypes,\n        onChange: this.props.setModalValues,\n        name: \"barcodeType\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }))), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, React.createElement(Button, {\n        size: \"sm\",\n        color: \"primary\",\n        onClick: function onClick() {\n          _this2.props.barcodeActions(\"add\", _this2.state.currentInputValue);\n\n          _this2.setInputValue(\"\");\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, React.createElement(Plus, {\n        size: 16,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }))))));\n    }\n  }]);\n\n  return Example;\n}(React.Component);\n\nexport { Example as default };","map":{"version":3,"sources":["C:/Users/User/Desktop/barcode/src/containers/pages/products/modal/tab/code/content.js"],"names":["React","Input","Table","InputGroup","Button","Translate","Settings","Plus","Trash2","DropdownComponent","Example","state","currentInputValue","newValue","setState","console","log","props","product","barcode","map","value","errors","firstname","event","setInputValue","target","barcodeTypes","setModalValues","barcodeActions","Component"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport {Input, Table, InputGroup, Button} from 'reactstrap';\r\nimport Translate from \"../../../../../../Translate\";\r\nimport {Settings, Plus, Trash2} from \"react-feather\";\r\nimport DropdownComponent from \"../../../../../../components/dropdown/dropdown\";\r\n\r\n\r\nexport default class Example extends React.Component {\r\n    state = {\r\n        currentInputValue:\"\"\r\n    }\r\n    setInputValue(newValue){\r\n        this.setState({currentInputValue:newValue})\r\n    }\r\n\r\n    render() {\r\n        console.log(this.props)\r\n        return (\r\n            <Table borderless>\r\n                <thead>\r\n                <tr>\r\n                    <th><Translate name={\"barcode\"}/></th>\r\n                    <th><Settings size={20}></Settings></th>\r\n                </tr>\r\n                </thead>\r\n                <tbody>\r\n                {this.props.product.barcode && this.props.product.barcode.map(function (value) {\r\n                    return (\r\n                        <tr>\r\n                            <td>{value.barcode}</td>\r\n                            <td>\r\n                                <Button size=\"sm\" color=\"danger\" className=\"mb-0\">\r\n                                    <Trash2 size={16}/>\r\n                                </Button>\r\n                            </td>\r\n                        </tr>\r\n                    )\r\n                })}\r\n                <tr>\r\n                    <td>\r\n                        <InputGroup size=\"sm\">\r\n                            <Input\r\n                                type=\"text\"\r\n                                className={`form-control  ${this.props.props.errors.firstname ? 'is-invalid' : ''}`}\r\n                                id=\"barcode\"\r\n                                value={this.state.currentInputValue ? this.state.currentInputValue || '' : ''}\r\n                                onChange={event => this.setInputValue(event.target.value)}\r\n                            />\r\n                            <DropdownComponent\r\n                                data={this.props.barcodeTypes}\r\n                                onChange={this.props.setModalValues}\r\n                                name='barcodeType'\r\n                            />\r\n                        </InputGroup>\r\n                    </td>\r\n                    <td>\r\n                        <Button size=\"sm\" color=\"primary\" onClick={()=>{this.props.barcodeActions(\"add\",this.state.currentInputValue);this.setInputValue(\"\")}}>\r\n                            <Plus size={16}/>\r\n                        </Button>\r\n                    </td>\r\n                </tr>\r\n                </tbody>\r\n\r\n            </Table>\r\n        );\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}